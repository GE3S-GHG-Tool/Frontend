import { useEffect, useState } from "react";
import { Box, Button, Typography, Paper } from "@mui/material";
import ge3s from "../../assets/images/ge3s.png";
import logo from "../../assets/images/starbucksLogo.png";
import backgroundImage from "../../assets/images/sustainabilityHeading.png";
import SemiCirclePieChart from "./Charts/SemiCirclePieChart";
import RefrigerantConsumptionChart from "./Charts/RefrigerantConsumptionChart";
import FuelConsumptionChart from "./Charts/FuelConsumptionChart";
import RefrigerantEmissionsChart from "./Charts/RefrigerantEmissionsChart";
import ConfirmEditReportModal from "./Modals/ConfirmEditReportModal";
import ShareReportModal from "./Modals/ShareReportModal";
import ScopeData from "./components/ScopeData";
import FullCircleDonutChart from "./Charts/FullCircleDonutChart";
import Scope3Card from "./components/Scope3Card";
import StackedBarChart from "./Charts/StackedBarChart";
import LineChart from "./Charts/LineChart";
import { useNavigate, useParams } from "react-router-dom";
import {
  getScope1Data,
  getScope2Data,
  getScope3Data,
} from "../../api/createReport";
import { getReportWithID } from "../../api/reports.apis";
import EmissionsByWasteChart from "./Charts/EmissionsByWasteChart";
import { MoreVertOutlined } from "@mui/icons-material";
import DownloadReportButton from "./ReportGenerator/DownloadReportButton";
import { PremiumContentWrapper } from "./Locks/PremiumContentWrapper";
import scope1BgDummy from "../../assets/graphimgs/scope1bgimage.png";
import scope2BgDummy from "../../assets/graphimgs/scope2bgimage.png";
import scope3BgDummy from "../../assets/graphimgs/scope3bgimage.png";
import FuelTypeEmissions from "../../assets/graphimgs/fueltypeemissionsbreakdown.png";
import RefrigerantEmissionsByType from "../../assets/graphimgs/refrigerantemissionsbytype.png";
import ProcessEmissionBreakdown from "../../assets/graphimgs/processemissionbreakdown.png";
import FuelConsumptionBreakdownDummy from "../../assets/graphimgs/fuelconsumptionbreakdown.png";
import RefrigerantConsumptionBreakdownDummy from "../../assets/graphimgs/refrigerantconsumptionbreakdown.png";
import EmissionsByWasteCategoryDummy from "../../assets/graphimgs/EmissionsByWasteCategoryDummy.png";
import BusinessTravelEmissionsBreakdownDummy from "../../assets/graphimgs/BusinessTravelEmissionsBreakdownDummy.png";
import WasteDisposalMethodsByCategoryDummy from "../../assets/graphimgs/WasteDisposalMethodsByCategoryDummy.png";
import EmployeeCommutingEmissionsBreakdownDummy from "../../assets/graphimgs/EmployeeCommutingEmissionsBreakdownDummy.png";
import FuelRelatedActivitiesDummy from "../../assets/graphimgs/FuelRelatedActivitiesDummy.png";
import EmissionFromUpstreamLeasedAssets from "../../assets/graphimgs/EmissionFromUpstreamLeasedAssets.png";
import dummy_company from "../../assets/graphimgs/dummy_company.png";
import { useAuth } from "../../context/AuthContext";
import { GraphWrapper } from "./GraphsOverlay/GraphWrapper";
import constant from "../../constant";
import { FillContentWrapper } from "./Locks/FillContentWrapper";
import { NoDataAvailableWrapper } from "./Locks/NoDataAvailableWrapper";
import api from "../../api";
import {
  formatIndianNumber,
  oilGasIndustryFlag,
  parseStringAndRoundOff,
} from "../../util/utils";

const Scope1SVGs = [
  <svg
    key={1}
    xmlns="http://www.w3.org/2000/svg"
    width="18"
    height="30"
    viewBox="0 0 22 32"
    fill="none"
  >
    <path
      d="M12.0495 0.534683L12.6021 1.30422L12.8726 1.6848L13.4019 2.43692L13.6607 2.80911L14.1654 3.54447L14.6552 4.2695L15.1289 4.98292L15.587 5.68602L15.8096 6.03305L16.2438 6.71873L16.6624 7.39345L17.0655 8.05656L17.4518 8.70934C17.8181 9.3332 18.1736 9.96329 18.5182 10.5993L18.8417 11.2076L18.9976 11.5076L19.2979 12.0991C21.0993 15.7113 22 18.6895 22 21.0342C22 27.0906 17.0752 32 11 32C4.92476 32 0 27.0906 0 21.0342C0 18.6895 0.900706 15.7113 2.70212 12.0991L3.00235 11.5076L3.15765 11.2076L3.48182 10.6C3.82638 9.96372 4.18189 9.33342 4.54818 8.70934L4.93447 8.05656L5.33759 7.39345L5.75624 6.71873L6.18976 6.03305L6.413 5.68537L6.87112 4.98292L7.34476 4.2695L7.83459 3.54511L8.33929 2.80976L8.86082 2.06215L9.12741 1.6848L9.67224 0.921065L9.95047 0.535328C10.0704 0.369619 10.2281 0.234674 10.4105 0.141603C10.593 0.0485331 10.795 0 11 0C11.205 0 11.407 0.0485331 11.5895 0.141603C11.7719 0.234674 11.9296 0.368974 12.0495 0.534683ZM11 3.51608L10.4888 4.2495L9.99318 4.97066L9.51371 5.68021L9.28012 6.03047L8.82524 6.72196L8.38588 7.40119L7.96335 8.06881L7.75759 8.39779L7.359 9.04735L7.16618 9.36794L6.79088 9.99879L6.43306 10.618C6.25771 10.9238 6.08818 11.2257 5.92512 11.523L5.60677 12.1107L5.30459 12.6867C5.20624 12.8763 5.11047 13.064 5.01794 13.2498L4.74812 13.8L4.49382 14.3387C4.32947 14.6934 4.17612 15.0392 4.03312 15.3772L3.82606 15.8764C3.00041 17.9335 2.58824 19.6577 2.58824 21.0342C2.58824 25.6657 6.35412 29.4198 11 29.4198C15.6459 29.4198 19.4118 25.6657 19.4118 21.0342C19.4118 19.6577 19.0002 17.9335 18.1733 15.8758L17.9669 15.3759C17.8245 15.0385 17.6705 14.6921 17.5062 14.3374L17.2519 13.7994L16.9821 13.2492C16.8878 13.0608 16.7922 12.8731 16.6954 12.6861L16.3932 12.11L16.0749 11.5224C15.9118 11.2257 15.7423 10.9231 15.5669 10.6167L15.2085 9.99815L14.8338 9.36729L14.4436 8.72354C14.3088 8.50455 14.1732 8.28609 14.0366 8.06817L13.6141 7.40055L13.1748 6.72131L12.7199 6.02983L12.4869 5.67957L12.0068 4.97002L11.5118 4.24885C11.3436 4.00632 11.1734 3.76249 11 3.51608ZM17.7754 20.4479C17.7779 20.4898 17.7773 20.5317 17.7734 20.573C17.5664 22.7713 16.8598 24.471 15.6536 25.6734C14.498 26.8261 12.8836 27.5208 10.8104 27.7582L10.5374 27.7866C10.4207 27.7975 10.303 27.7831 10.1924 27.7444C10.0818 27.7057 9.98089 27.6435 9.89667 27.5623C9.81244 27.481 9.74686 27.3825 9.70443 27.2736C9.66201 27.1647 9.64374 27.0479 9.65088 26.9312C9.66459 26.7053 9.76684 26.4938 9.93559 26.3423C10.1043 26.1909 10.326 26.1116 10.5529 26.1217C12.0114 26.1862 13.3171 25.6444 14.4708 24.4943C15.5721 23.3964 16.1182 22.1605 16.1085 20.7852L16.1034 20.5885C16.0931 20.3623 16.1725 20.1411 16.3244 19.9727C16.4764 19.8044 16.6886 19.7023 16.9154 19.6887C17.0219 19.6821 17.1287 19.6966 17.2296 19.7312C17.3306 19.7658 17.4237 19.8199 17.5036 19.8904C17.5835 19.9609 17.6487 20.0465 17.6955 20.1421C17.7422 20.2378 17.7689 20.3417 17.7754 20.4479Z"
      fill="#028A60"
    />
  </svg>,
  <svg
    key={2}
    xmlns="http://www.w3.org/2000/svg"
    width="26"
    height="26"
    viewBox="0 0 31 32"
    fill="none"
  >
    <path
      d="M11.3846 0.939453L16 5.55484M16 5.55484L20.6154 0.939453M16 5.55484V26.3241M1 20.5548L5.61538 15.9395M5.61538 15.9395L1 11.3241M5.61538 15.9395H26.3846M20.6154 30.9395L16 26.3241M16 26.3241L11.3846 30.9395M31 11.3241L26.3846 15.9395M26.3846 15.9395L31 20.5548M7.92308 7.86253L11.3846 11.3241M11.3846 20.5548L7.92308 24.0164M24.0769 7.86253L20.6154 11.3241M20.6154 20.5548L24.0769 24.0164"
      stroke="#02B880"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>,
  <svg
    key={3}
    xmlns="http://www.w3.org/2000/svg"
    width="16"
    height="27"
    viewBox="0 0 20 31"
    fill="none"
  >
    <g clipPath="url(#clip0_1214_49609)">
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M8.07772 16.2891L0 15.5298L6.69681 0.878906H15.8524L10.6611 9.28467L20 10.3174L2.85714 30.8789L8.07772 16.2891Z"
        fill="#B1E9D8"
      />
    </g>
    <defs>
      <clipPath id="clip0_1214_49609">
        <rect
          width="20"
          height="30"
          fill="white"
          transform="translate(0 0.878906)"
        />
      </clipPath>
    </defs>
  </svg>,
];

const Scope2SVGs = [
  <svg
    key={1}
    xmlns="http://www.w3.org/2000/svg"
    width="26"
    height="27"
    viewBox="0 0 26 27"
    fill="none"
  >
    <path
      d="M12.9974 20.904C10.2815 20.904 8.57523 19.4469 7.43665 18.0754C6.95998 17.5013 6.04998 17.5099 5.6329 18.122C4.87348 19.2379 3.9884 20.267 2.16406 20.6722M23.8307 20.6722C22.1104 20.2909 21.2264 19.3549 20.4941 18.3127C20.0347 17.6605 19.0261 17.6995 18.5278 18.3268C18.0836 18.8858 17.5539 19.3993 16.9136 19.8207M12.9974 10.0707C15.7133 10.0707 17.4196 8.61361 18.5592 7.24211C19.0348 6.66794 19.9459 6.67661 20.3619 7.28869C21.1213 8.40452 22.0064 9.43369 23.8307 9.83886M2.16406 9.83886C3.8844 9.45752 4.7684 8.52152 5.50073 7.47936C5.95898 6.82719 6.96865 6.86727 7.4659 7.49344C7.91006 8.05136 8.4409 8.56594 9.08115 8.98736M23.8307 15.2555C22.1104 14.8742 21.2264 13.9382 20.4941 12.896C20.0347 12.2439 19.0261 12.2829 18.5278 12.9101C17.3903 14.3423 15.6895 15.4874 12.9974 15.4874C10.2815 15.4874 8.57523 14.0303 7.43665 12.6588C6.95998 12.0846 6.04998 12.0933 5.6329 12.7054C4.87348 13.8212 3.9884 14.8504 2.16406 15.2555"
      stroke="#2E59C5"
      strokeWidth="1.625"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>,
  <svg
    key={2}
    xmlns="http://www.w3.org/2000/svg"
    width="28"
    height="29"
    viewBox="0 0 28 29"
    fill="none"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M21.0009 12.7984H15.6627L18.8449 5.37424C18.8906 5.26772 18.9091 5.15152 18.8988 5.03609C18.8885 4.92065 18.8496 4.80959 18.7858 4.71286C18.722 4.61613 18.6351 4.53677 18.533 4.48189C18.4309 4.42701 18.3168 4.39833 18.2009 4.39844H11.2009C11.0638 4.39832 10.9297 4.43845 10.8153 4.51386C10.7008 4.58927 10.611 4.69664 10.5569 4.82264L6.35694 14.6226C6.31127 14.7292 6.29277 14.8454 6.3031 14.9608C6.31342 15.0762 6.35224 15.1873 6.41608 15.284C6.47992 15.3807 6.56678 15.4601 6.66885 15.515C6.77093 15.5699 6.88504 15.5985 7.00094 15.5984H10.4645L6.35134 25.838C6.07134 26.5338 6.93514 27.1232 7.48114 26.608L14.5147 19.9678L21.4559 14.0304C21.5647 13.9374 21.6423 13.8133 21.6784 13.6749C21.7145 13.5364 21.7072 13.3902 21.6576 13.2559C21.6081 13.1217 21.5185 13.0059 21.4011 12.9241C21.2837 12.8423 21.144 12.7984 21.0009 12.7984ZM14.6015 14.1984H19.1053L13.5781 18.9276L8.83914 23.4006L12.1501 15.1588C12.1927 15.0526 12.2086 14.9376 12.1964 14.8238C12.1842 14.7101 12.1443 14.601 12.0802 14.5063C12.0161 14.4115 11.9297 14.3339 11.8287 14.2802C11.7276 14.2265 11.615 14.1985 11.5005 14.1984H8.06214L11.6629 5.79844H17.1397L13.9575 13.2226C13.9119 13.3292 13.8934 13.4454 13.9037 13.5608C13.914 13.6762 13.9528 13.7873 14.0167 13.884C14.0805 13.9807 14.1674 14.0601 14.2695 14.115C14.3715 14.1699 14.4856 14.1985 14.6015 14.1984Z"
      fill="#2E59C5"
    />
  </svg>,
  <svg
    key={3}
    xmlns="http://www.w3.org/2000/svg"
    width="26"
    height="27"
    viewBox="0 0 26 27"
    fill="none"
  >
    <path
      d="M5.74038 12.9827C5.13181 12.3578 4.58338 11.668 4.10888 10.927L4.078 10.875C3.389 9.50597 2.98519 7.89153 2.98519 6.18284C2.98519 5.43128 3.06319 4.69759 3.21188 3.99072L3.19969 4.05978C3.20375 4.03459 3.20538 4.00534 3.20538 3.97609C3.20538 3.63972 2.93238 3.36672 2.596 3.36672C2.28319 3.36672 2.02563 3.60234 1.99069 3.90622V3.90866C1.84769 4.59684 1.76562 5.38822 1.76562 6.19828C1.76562 8.12797 2.23119 9.94797 3.05588 11.5543L3.025 11.4885C3.57588 12.3587 4.17388 13.1151 4.84094 13.8033L4.83769 13.7992C5.33413 14.3208 5.80131 14.8839 6.22869 15.4778L6.26119 15.525C7.11188 16.8331 7.61725 18.4329 7.61725 20.1513C7.61725 21.0695 7.47263 21.9543 7.20531 22.7838L7.22238 22.7229C7.20531 22.7773 7.19475 22.8391 7.19475 22.9041C7.19475 23.1763 7.37269 23.4062 7.61888 23.485L7.62294 23.4858C7.67738 23.5021 7.73913 23.5127 7.80331 23.5127H7.80413C8.0755 23.5127 8.30625 23.3347 8.38344 23.0885L8.38425 23.0845C8.67675 22.2029 8.84494 21.1881 8.84494 20.1343C8.84494 18.1656 8.25669 16.3334 7.24675 14.8051L7.2695 14.8408C6.7755 14.1494 6.27338 13.5433 5.73306 12.9737L5.74038 12.981V12.9827ZM13.4226 13.0314C12.6864 12.275 12.0226 11.4397 11.4482 10.5427L11.4108 10.4802C10.5731 8.82022 10.0824 6.86209 10.0824 4.78941C10.0824 3.88184 10.1766 2.99622 10.3554 2.14228L10.3408 2.22597C10.3432 2.20647 10.344 2.18372 10.344 2.16016C10.344 1.82378 10.071 1.55078 9.73463 1.55078C9.42831 1.55078 9.17481 1.77666 9.13175 2.07159V2.07484C8.96031 2.89547 8.86281 3.83878 8.86281 4.80484C8.86281 7.09853 9.41531 9.26303 10.3944 11.1724L10.3578 11.0936C11.0151 12.1312 11.7285 13.0322 12.5239 13.8537L12.5199 13.8496C13.1187 14.4793 13.6818 15.1577 14.1977 15.8735L14.2367 15.9304C15.2694 17.5197 15.8828 19.4632 15.8828 21.5497C15.8828 22.6652 15.7073 23.7402 15.3823 24.7477L15.4026 24.6737C15.3856 24.7273 15.375 24.7899 15.375 24.8541C15.375 25.1263 15.5529 25.357 15.7991 25.4358L15.8032 25.4367C15.8576 25.4537 15.9194 25.4635 15.9836 25.4635C16.2558 25.4635 16.4865 25.2855 16.5645 25.0393L16.5653 25.0353C16.9123 23.9888 17.1121 22.7838 17.1121 21.5318C17.1121 19.1942 16.415 17.0192 15.2174 15.204L15.2442 15.2471C14.6551 14.424 14.0571 13.7009 13.4128 13.0217L13.4209 13.0306L13.4226 13.0314ZM22.6038 15.0042C22.1098 14.3135 21.6085 13.7074 21.0682 13.1378L21.0755 13.1452C20.4669 12.5195 19.9185 11.8289 19.4432 11.0871L19.4123 11.0351C18.7225 9.66684 18.3187 8.05322 18.3187 6.34453C18.3187 5.59297 18.3967 4.86009 18.5454 4.15241L18.5332 4.22147C18.5364 4.19872 18.5381 4.17191 18.5381 4.14509C18.5381 3.80872 18.2651 3.53572 17.9287 3.53572C17.6191 3.53572 17.3632 3.76647 17.3242 4.06547V4.06872C17.1804 4.75691 17.0983 5.54828 17.0983 6.35916C17.0983 8.28803 17.5639 10.1088 18.3894 11.7135L18.3585 11.6477C18.9094 12.5195 19.5074 13.2768 20.1761 13.9658L20.1728 13.9625C20.6693 14.4842 21.1356 15.0456 21.5622 15.6387L21.5947 15.6858C22.4446 16.9932 22.9508 18.593 22.9508 20.3106C22.9508 21.2295 22.8061 22.1143 22.538 22.9447L22.5551 22.8838C22.538 22.9374 22.5274 23 22.5274 23.0642C22.5274 23.3363 22.7054 23.5671 22.9516 23.6459L22.9556 23.6467C23.0084 23.6638 23.0694 23.6735 23.1328 23.6735C23.1344 23.6735 23.1352 23.6735 23.1368 23.6735C23.409 23.6735 23.6398 23.4956 23.7178 23.2494L23.7186 23.2453C24.0103 22.3646 24.1784 21.3506 24.1784 20.2968C24.1784 18.3273 23.5902 16.4951 22.5811 14.966L22.6038 15.0025V15.0042Z"
      fill="#2E59C5"
    />
  </svg>,
  <svg
    key={4}
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="25"
    viewBox="0 0 24 25"
    fill="none"
  >
    <g clipPath="url(#clip0_2514_54314)">
      <path
        d="M19.1845 7.38066C18.6886 6.929 18.0493 6.70151 17.3775 6.72901C16.7074 6.76068 16.0906 7.0515 15.6389 7.54648L12.9583 10.4914C12.4991 9.73392 11.6664 9.2256 10.7171 9.2256H3.33398C1.49529 9.2256 0 10.7206 0 12.5588V16.7254C0 18.5636 1.49529 20.0586 3.33398 20.0586H7.47228C9.8469 20.0586 12.1148 19.042 13.6951 17.2687L19.3671 10.9039C20.2781 9.88141 20.1956 8.30146 19.1845 7.38066ZM18.1227 9.79641L12.4507 16.1612C11.1863 17.5787 9.37181 18.3928 7.47228 18.3928H3.33398C2.41463 18.3928 1.66699 17.6453 1.66699 16.7262V12.5597C1.66699 11.6405 2.41463 10.893 3.33398 10.893H10.7171C11.2422 10.893 11.6689 11.3205 11.6689 11.8455C11.6689 12.3155 11.318 12.7213 10.8513 12.7872L6.5496 13.4013C6.09451 13.4663 5.77778 13.8888 5.8428 14.3446C5.90864 14.8004 6.33039 15.1162 6.78548 15.0521L11.0863 14.4379C12.0657 14.2979 12.8617 13.6146 13.1825 12.7222L16.8716 8.66895C17.0233 8.50312 17.23 8.40562 17.455 8.39479C17.6818 8.38562 17.8951 8.46229 18.0618 8.61395C18.4011 8.92311 18.4286 9.45476 18.1227 9.79808V9.79641ZM7.0847 6.72318C7.86402 6.72318 8.59666 6.41985 9.1476 5.86904C10.2853 4.73157 10.2845 2.8808 9.14093 1.7375L7.66732 0.296711C7.34309 -0.0207788 6.82549 -0.0207788 6.50209 0.296711L5.02264 1.74333C3.88492 2.87996 3.88492 4.73157 5.02264 5.8682C5.57358 6.41902 6.30622 6.72234 7.08554 6.72234L7.0847 6.72318ZM6.19453 2.9283L7.0847 2.05749L7.96904 2.92163C8.45664 3.40911 8.45664 4.20242 7.96904 4.68991C7.49812 5.16156 6.67379 5.16156 6.2012 4.68991C5.7136 4.20242 5.71361 3.40911 6.19453 2.9283Z"
        fill="#2E59C5"
      />
    </g>
    <defs>
      <clipPath id="clip0_2514_54314">
        <rect
          width="24"
          height="24"
          fill="white"
          transform="translate(0 0.0585938)"
        />
      </clipPath>
    </defs>
  </svg>,
];

const Scope3SVGs = [
  <svg key={1} width="24" height="25" viewBox="0 0 24 25" fill="none">
    <path
      d="M3.75 5.95703H9.18C9.50918 5.95708 9.83329 5.87588 10.1236 5.72062C10.4138 5.56537 10.6613 5.34086 10.844 5.06703L11.656 3.84703C11.8387 3.5732 12.0862 3.3487 12.3764 3.19344C12.6667 3.03819 12.9908 2.95698 13.32 2.95703H17.808C18.2279 2.95693 18.6372 3.08901 18.9779 3.33455C19.3186 3.58008 19.5733 3.92662 19.706 4.32503L20.25 5.95703M21.75 5.95703H8.75"
      stroke="#F26D58"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M20.25 5.95703L19.75 12.457M5.25 5.95703L5.855 16.493C6.009 19.063 6.087 20.349 6.729 21.273C7.046 21.731 7.455 22.116 7.929 22.406C8.511 22.762 9.213 22.902 10.25 22.957M11.75 16.455L12.886 17.921C13.0923 17.1508 13.5242 16.4598 14.1261 15.9368C14.728 15.4137 15.4725 15.0825 16.264 14.9857C17.0555 14.8889 17.8579 15.0308 18.5681 15.3933C19.2783 15.7558 19.864 16.3223 20.25 17.02M21.75 21.455L20.614 19.991C20.4093 20.7553 19.9826 21.4416 19.3878 21.9633C18.793 22.485 18.0568 22.8186 17.2724 22.9219C16.488 23.0252 15.6906 22.8936 14.981 22.5437C14.2714 22.1937 13.6816 21.6412 13.286 20.956"
      stroke="#F26D58"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>,
  <svg key={2} width="25" height="27" viewBox="0 0 25 27" fill="none">
    <path
      d="M22.6264 2.58593C22.8709 2.58593 23.0431 2.63526 23.1327 2.67272C23.2403 2.98386 23.3847 4.09886 22.3234 5.25217L16.9096 11.1311L16.9486 11.8605C17.0307 13.3869 17.1829 16.1223 17.3142 18.4672C17.4301 20.5543 17.54 22.5254 17.5471 22.6932C17.5508 22.8084 17.5523 22.8357 17.4533 22.9652C17.2321 23.2572 16.8192 23.752 16.4712 24.1621C15.9316 22.5832 14.7976 19.2483 14.1713 17.3815L13.3666 14.9796L11.702 16.7873L8.64083 19.9838L8.21445 20.446L8.20133 21.0996C8.1912 21.6213 8.19345 22.5576 8.19458 23.383C8.19608 23.9581 8.1976 24.4806 8.19385 24.7685C8.1871 24.7819 8.29623 24.7978 8.2861 24.817C8.22085 24.7033 8.15073 24.5808 8.07648 24.4533C7.45923 23.3843 6.60498 21.9056 6.34435 21.4442L6.15385 21.1062L5.8411 20.9009C4.70373 20.1548 3.44373 19.2935 2.67498 18.7555C2.7016 18.7388 2.72333 18.8272 2.74095 18.817H2.79083C3.0327 18.817 3.43245 18.8227 3.88058 18.8296C4.4667 18.8382 5.13158 18.8488 5.64045 18.8488C5.83545 18.8488 6.0087 18.8471 6.1482 18.8439L6.75008 18.8288L7.1757 18.3666L10.1228 15.0651L11.7818 13.2643L9.58023 12.3846C7.92573 11.7237 4.7566 10.4384 3.27423 9.83364C3.65445 9.45327 4.1127 9.00164 4.38008 8.76134C4.4547 8.69455 4.51285 8.66037 4.55295 8.66037L4.60583 8.662C4.7712 8.67055 6.82508 8.81634 8.81068 8.95725C10.9186 9.10671 13.2976 9.27531 14.6502 9.36856L15.3263 9.41458L20.7409 3.53399C21.5014 2.70932 22.2484 2.58593 22.6264 2.58593ZM22.6265 0.957031C21.7403 0.957031 20.6525 1.32676 19.6809 2.38233L14.7447 7.74247C11.9645 7.55147 4.844 7.03997 4.66738 7.03468C4.62928 7.03258 4.59114 7.03149 4.553 7.03139C4.31263 7.03139 3.8975 7.08149 3.425 7.50543C2.87038 8.00351 1.71388 9.18454 1.71388 9.18454C1.43488 9.48832 1.2935 9.86461 1.32725 10.2185C1.34788 10.4323 1.45475 10.822 1.93813 11.0273C2.23175 11.1523 6.90463 13.0509 9.0624 13.913L6.11527 17.2146C5.98475 17.2178 5.82313 17.2194 5.6405 17.2194C4.742 17.2194 3.34888 17.1877 2.79048 17.1877C2.7166 17.1877 2.65735 17.1877 2.61533 17.1893C2.44545 17.195 2.0937 17.1042 1.16595 17.9464L1.09995 18.0132C0.821705 18.3153 0.756455 18.6167 0.750455 18.8158C0.744455 19.0211 0.79508 19.3168 1.06845 19.5546C1.2327 19.6987 3.33833 21.1628 5.06518 22.2953C5.4792 23.0288 7.3842 26.3169 7.48358 26.4952C7.62873 26.7616 7.86608 26.9135 8.14998 26.9232H8.1736C8.4496 26.9232 8.7331 26.7746 9.0106 26.4818C9.79585 25.4844 9.68748 25.0715 9.69083 24.898C9.7032 24.3539 9.6822 22.0489 9.7002 21.1351L12.761 17.9382C13.5432 20.2717 15.2532 25.2943 15.3676 25.6139C15.5581 26.1389 15.917 26.2541 16.1138 26.2757C16.1461 26.2798 16.1791 26.2814 16.2113 26.2814C16.5072 26.2814 16.814 26.1303 17.0652 25.8575C17.0652 25.8575 18.1493 24.6081 18.6098 24.0001C19.0711 23.3925 19.0531 22.8736 19.0441 22.6289C19.0403 22.4595 18.6061 14.7687 18.4448 11.7653L23.3821 6.40348C25.1318 4.50244 24.8536 2.21172 24.2037 1.50719C23.9168 1.19402 23.336 0.957057 22.6265 0.957031Z"
      fill="#F26D58"
    />
  </svg>,
  <svg key={3} width="24" height="26" viewBox="0 0 24 26" fill="none">
    <path
      d="M7.69017 7.15525V6.61042C7.69017 3.90348 9.61067 1.69141 12.0027 1.69141C14.3947 1.69141 16.3152 3.90348 16.3152 6.61042V7.15681H19.2592C19.4372 7.157 19.6089 7.22896 19.7409 7.35875C19.8729 7.48853 19.9558 7.6669 19.9736 7.8593L21.2674 21.9092C21.2774 22.0177 21.2664 22.1272 21.2351 22.2308C21.2037 22.3344 21.1528 22.4297 21.0855 22.5106C21.0182 22.5914 20.936 22.6561 20.8443 22.7004C20.7526 22.7447 20.6533 22.7677 20.5529 22.7678H3.45242C3.35203 22.7677 3.25277 22.7447 3.16104 22.7004C3.06932 22.6561 2.98715 22.5914 2.91985 22.5106C2.85254 22.4297 2.80158 22.3344 2.77026 22.2308C2.73894 22.1272 2.72794 22.0177 2.73798 21.9092L4.03173 7.8593C4.04953 7.6669 4.13247 7.48853 4.26446 7.35875C4.39645 7.22896 4.56811 7.157 4.74617 7.15681H7.69017V7.15525ZM9.12767 7.15525H14.8777V6.61042C14.8777 4.74647 13.581 3.2525 12.0027 3.2525C10.4243 3.2525 9.12767 4.74647 9.12767 6.61042V7.15681V7.15525ZM7.69017 8.71635H5.39735L4.24735 21.2051H19.758L18.6065 8.71635H16.3152V11.058C16.3152 11.265 16.2394 11.4635 16.1046 11.6099C15.9699 11.7563 15.787 11.8385 15.5964 11.8385C15.4058 11.8385 15.223 11.7563 15.0882 11.6099C14.9534 11.4635 14.8777 11.265 14.8777 11.058V8.71635H9.12767V11.058C9.12767 11.265 9.05194 11.4635 8.91715 11.6099C8.78236 11.7563 8.59954 11.8385 8.40892 11.8385C8.21829 11.8385 8.03547 11.7563 7.90068 11.6099C7.76589 11.4635 7.69017 11.265 7.69017 11.058V8.71635Z"
      fill="#F26D58"
    />
  </svg>,
  <svg
    key={4}
    xmlns="http://www.w3.org/2000/svg"
    width="27"
    height="27"
    viewBox="0 0 27 27"
    fill="none"
  >
    <g clipPath="url(#clip0_2514_54398)">
      <path
        d="M0.25 24.792H26.25V26.9587H0.25V24.792ZM26.25 9.52678V11.792H23V20.4587H25.1667V22.6254H1.33333V20.4587H3.5V11.792H0.25V9.52678C0.249892 8.9429 0.407078 8.36978 0.705035 7.86766C1.00299 7.36553 1.43072 6.95295 1.94325 6.67328L11.6932 1.35519C12.1705 1.09396 12.7059 0.957031 13.25 0.957031C13.7941 0.957031 14.3295 1.09396 14.8068 1.35519L24.5567 6.67328C25.0693 6.95295 25.497 7.36553 25.795 7.86766C26.0929 8.36978 26.2501 8.9429 26.25 9.52678ZM5.66667 20.4587H8.91667V11.792H5.66667V20.4587ZM11.0833 11.792V20.4587H15.4167V11.792H11.0833ZM20.8333 11.792H17.5833V20.4587H20.8333V11.792ZM24.0833 9.52678C24.0834 9.33215 24.031 9.14111 23.9317 8.97374C23.8323 8.80636 23.6898 8.66883 23.5189 8.57561L13.7689 3.25752C13.6097 3.17067 13.4313 3.12516 13.25 3.12516C13.0687 3.12516 12.8903 3.17067 12.7311 3.25752L2.98108 8.57561C2.81024 8.66883 2.66766 8.80636 2.56834 8.97374C2.46903 9.14111 2.41663 9.33215 2.41667 9.52678V9.62536H24.0833V9.52678Z"
        fill="#F26D58"
      />
    </g>
    <defs>
      <clipPath id="clip0_2514_54398">
        <rect
          width="26"
          height="26"
          fill="white"
          transform="translate(0.25 0.957031)"
        />
      </clipPath>
    </defs>
  </svg>,
  <svg key={5} width="26" height="27" viewBox="0 0 26 27" fill="none">
    <path
      d="M24.8056 6.62909C24.6887 6.55609 24.555 6.51406 24.4173 6.50695C24.2796 6.49984 24.1424 6.5279 24.0185 6.58847C19.6584 8.72128 16.5445 7.72191 13.2529 6.66769C9.79977 5.56167 6.21969 4.41909 1.27359 6.83425C1.1354 6.90054 1.01877 7.00457 0.937181 7.13432C0.855592 7.26407 0.812368 7.41426 0.8125 7.56753V19.7479C0.812481 19.8858 0.847538 20.0214 0.914372 20.1419C0.981206 20.2625 1.07762 20.3641 1.19454 20.4371C1.31146 20.5102 1.44504 20.5523 1.58271 20.5594C1.72037 20.5666 1.85761 20.5386 1.98148 20.4782C6.34156 18.3453 9.45547 19.3447 12.7522 20.3989C14.7063 21.0235 16.6969 21.6603 18.9475 21.6603C20.6832 21.6603 22.5763 21.2825 24.7274 20.2324C24.864 20.1657 24.9792 20.062 25.0598 19.9331C25.1404 19.8041 25.1833 19.6552 25.1834 19.5032V7.32276C25.1847 7.18455 25.1506 7.04831 25.0845 6.92693C25.0184 6.80554 24.9224 6.70303 24.8056 6.62909ZM23.5625 18.9862C19.4391 20.8316 16.4277 19.8688 13.2478 18.8521C11.2938 18.2275 9.30313 17.5907 7.0525 17.5907C5.47128 17.5984 3.90614 17.9087 2.44156 18.5048V8.08448C6.565 6.23909 9.57633 7.20191 12.7563 8.21855C15.9362 9.23519 19.2095 10.2853 23.5625 8.56792V18.9862ZM13 10.2853C12.3572 10.2853 11.7289 10.476 11.1944 10.8331C10.6599 11.1902 10.2434 11.6978 9.99739 12.2916C9.75141 12.8855 9.68705 13.5389 9.81245 14.1694C9.93785 14.7998 10.2474 15.3789 10.7019 15.8334C11.1564 16.288 11.7355 16.5975 12.366 16.7229C12.9964 16.8483 13.6499 16.7839 14.2437 16.538C14.8376 16.292 15.3452 15.8754 15.7023 15.3409C16.0594 14.8065 16.25 14.1781 16.25 13.5353C16.25 12.6734 15.9076 11.8467 15.2981 11.2372C14.6886 10.6278 13.862 10.2853 13 10.2853ZM13 15.1603C12.6786 15.1603 12.3644 15.065 12.0972 14.8865C11.83 14.7079 11.6217 14.4541 11.4987 14.1572C11.3757 13.8603 11.3435 13.5335 11.4062 13.2183C11.4689 12.9031 11.6237 12.6136 11.851 12.3863C12.0782 12.159 12.3678 12.0043 12.683 11.9416C12.9982 11.8789 13.3249 11.911 13.6219 12.034C13.9188 12.157 14.1726 12.3653 14.3511 12.6325C14.5297 12.8998 14.625 13.2139 14.625 13.5353C14.625 13.9663 14.4538 14.3796 14.149 14.6844C13.8443 14.9891 13.431 15.1603 13 15.1603ZM5.6875 10.2853V15.1603C5.6875 15.3758 5.6019 15.5825 5.44952 15.7349C5.29715 15.8872 5.09049 15.9728 4.875 15.9728C4.65951 15.9728 4.45285 15.8872 4.30048 15.7349C4.1481 15.5825 4.0625 15.3758 4.0625 15.1603V10.2853C4.0625 10.0699 4.1481 9.86319 4.30048 9.71082C4.45285 9.55845 4.65951 9.47284 4.875 9.47284C5.09049 9.47284 5.29715 9.55845 5.44952 9.71082C5.6019 9.86319 5.6875 10.0699 5.6875 10.2853ZM20.3125 16.7853V11.9103C20.3125 11.6949 20.3981 11.4882 20.5505 11.3358C20.7029 11.1834 20.9095 11.0978 21.125 11.0978C21.3405 11.0978 21.5472 11.1834 21.6995 11.3358C21.8519 11.4882 21.9375 11.6949 21.9375 11.9103V16.7853C21.9375 17.0008 21.8519 17.2075 21.6995 17.3599C21.5472 17.5122 21.3405 17.5978 21.125 17.5978C20.9095 17.5978 20.7029 17.5122 20.5505 17.3599C20.3981 17.2075 20.3125 17.0008 20.3125 16.7853Z"
      fill="#F26D58"
    />
  </svg>,
  <svg
    width="23"
    height="23"
    viewBox="0 0 20 19"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M10 8.57004C8.82191 8.57004 7.81286 8.15004 6.97286 7.31004C6.13286 6.47004 5.71333 5.46147 5.71429 4.28433C5.71524 3.10718 6.13476 2.09766 6.97286 1.25575C7.81095 0.413849 8.82 -0.00472173 10 4.01736e-05C11.18 0.00480208 12.189 0.423849 13.0271 1.25718C13.8652 2.09052 14.2848 3.10004 14.2857 4.28575C14.2867 5.47147 13.8671 6.48004 13.0271 7.31147C12.1871 8.1429 11.1781 8.56147 10 8.57004ZM0 18.9V16.5486C0 15.9591 0.171429 15.4077 0.514286 14.8943C0.858095 14.38 1.32 13.981 1.9 13.6972C3.24857 13.0505 4.59809 12.5658 5.94857 12.2429C7.29809 11.9191 8.64857 11.7572 10 11.7572C11.3514 11.7572 12.7024 11.9191 14.0529 12.2429C15.4033 12.5667 16.7519 13.0515 18.0986 13.6972C18.6795 13.981 19.1414 14.38 19.4843 14.8943C19.8281 15.4077 20 15.9591 20 16.5486V18.9H0ZM1.42857 17.4715H18.5714V16.5486C18.5714 16.2324 18.469 15.9348 18.2643 15.6558C18.0605 15.3777 17.7781 15.1424 17.4171 14.95C16.2419 14.3805 15.0295 13.9443 13.78 13.6415C12.5305 13.3386 11.2705 13.1867 10 13.1858C8.72952 13.1848 7.46952 13.3362 6.22 13.64C4.97048 13.9438 3.7581 14.38 2.58286 14.9486C2.22095 15.141 1.93857 15.3762 1.73571 15.6543C1.53095 15.9334 1.42857 16.2315 1.42857 16.5486V17.4715ZM10 7.1429C10.7857 7.1429 11.4586 6.8629 12.0186 6.3029C12.5786 5.7429 12.8581 5.06956 12.8571 4.2829C12.8562 3.49623 12.5767 2.82385 12.0186 2.26575C11.4605 1.70766 10.7876 1.42766 10 1.42575C9.21238 1.42385 8.54 1.70385 7.98286 2.26575C7.42571 2.82766 7.14571 3.50004 7.14286 4.2829C7.14 5.06575 7.42 5.73861 7.98286 6.30147C8.54572 6.86433 9.2181 7.14385 10 7.14004"
      fill="#F26D58"
    />
  </svg>,
  <svg key={7} width="23" height="23" viewBox="0 0 23 23" fill="none">
    <path
      d="M20.2432 20.6652H19.8209V2.33477H20.2432C20.8869 2.33477 21.4106 1.81107 21.4106 1.16738C21.4106 0.523699 20.8869 0 20.2432 0H2.75727C2.11354 0 1.58989 0.523699 1.58989 1.16738C1.58989 1.81107 2.11359 2.33477 2.75727 2.33477H3.17954V8.32074C3.17954 8.52653 3.34629 8.69333 3.55212 8.69333C3.75795 8.69333 3.9247 8.52658 3.9247 8.32074V7.10368H7.9236C8.12939 7.10368 8.29619 6.93693 8.29619 6.73109C8.29619 6.52531 8.12944 6.35851 7.9236 6.35851H3.92466V2.33477H19.0759V6.35851H15.0769C14.8711 6.35851 14.7043 6.52526 14.7043 6.73109C14.7043 6.93688 14.8711 7.10368 15.0769 7.10368H19.0758V15.8963H15.4743C15.2685 15.8963 15.1017 16.0631 15.1017 16.2689C15.1017 16.4747 15.2685 16.6415 15.4743 16.6415H19.0758V20.6652H3.92466V16.6415H7.92356C8.12935 16.6415 8.29614 16.4747 8.29614 16.2689C8.29614 16.0631 8.12939 15.8963 7.92356 15.8963H3.92466V9.91048C3.92466 9.7047 3.75791 9.5379 3.55208 9.5379C3.34624 9.5379 3.17949 9.70465 3.17949 9.91048V20.6652H2.75723C2.11354 20.6652 1.58984 21.1889 1.58984 21.8326C1.58984 22.4763 2.11354 23 2.75723 23H20.2432C20.8869 23 21.4106 22.4763 21.4106 21.8326C21.4106 21.1889 20.8869 20.6652 20.2432 20.6652ZM2.75727 1.58965C2.52444 1.58965 2.33501 1.40021 2.33501 1.16738C2.33501 0.934555 2.52444 0.745119 2.75727 0.745119H20.2432C20.4761 0.745119 20.6655 0.934555 20.6655 1.16738C20.6655 1.40021 20.4761 1.58965 20.2432 1.58965H2.75727ZM20.2432 22.2549H2.75727C2.52444 22.2549 2.33501 22.0654 2.33501 21.8326C2.33501 21.5998 2.52444 21.4104 2.75727 21.4104H20.2432C20.4761 21.4104 20.6655 21.5997 20.6655 21.8326C20.6655 22.0655 20.476 22.2549 20.2432 22.2549Z"
      fill="#F26D58"
    />
    <path
      d="M13.5985 8.56729C12.7046 7.22498 11.8257 6.1451 11.7887 6.09978C11.642 5.91987 11.3581 5.91987 11.2114 6.09978C11.1744 6.14506 10.2955 7.22498 9.40156 8.56729C8.17349 10.4115 7.55078 11.7998 7.55078 12.6938C7.55078 14.8714 9.32237 16.6431 11.5 16.6431C13.6777 16.6431 15.4493 14.8715 15.4493 12.6938C15.4493 11.7998 14.8266 10.4114 13.5985 8.56729ZM11.5 15.8979C9.73331 15.8979 8.29595 14.4605 8.29595 12.6938C8.29595 11.3157 10.3944 8.34717 11.5001 6.93285C12.6058 8.34681 14.7041 11.3148 14.7041 12.6938C14.7041 14.4605 13.2668 15.8979 11.5 15.8979Z"
      fill="#F26D58"
    />
    <path
      d="M13.3686 14.2177C13.2314 14.0645 12.9958 14.0515 12.8425 14.1888C12.473 14.52 11.9967 14.7024 11.5015 14.7024C11.2957 14.7024 11.1289 14.8691 11.1289 15.0749C11.1289 15.2808 11.2957 15.4475 11.5015 15.4475C12.1805 15.4475 12.8333 15.1976 13.3397 14.7438C13.493 14.6065 13.5059 14.3709 13.3686 14.2177Z"
      fill="#F26D58"
    />
    <path
      d="M12.6164 9.2405C12.5025 9.06922 12.2713 9.02263 12.0999 9.1366C11.9286 9.25052 11.882 9.48178 11.996 9.65311C13.4948 11.9071 13.512 12.66 13.512 12.6909C13.512 12.9209 13.4734 13.1464 13.3972 13.3613C13.3329 13.5425 13.4219 13.7491 13.5981 13.8266C13.7939 13.9128 14.0282 13.8116 14.0995 13.6101C14.2041 13.3151 14.2571 13.0059 14.2571 12.6909C14.2571 12.3953 14.0972 11.4674 12.6164 9.2405Z"
      fill="#F26D58"
    />
  </svg>,
  <svg key={8} width="24" height="22" viewBox="0 0 26 26" fill="none">
    <path
      d="M8.32422 8.03516C8.15846 8.03516 7.99949 8.101 7.88228 8.21821C7.76507 8.33542 7.69922 8.4944 7.69922 8.66016C7.69922 8.82592 7.76507 8.98489 7.88228 9.1021C7.99949 9.21931 8.15846 9.28516 8.32422 9.28516H17.0742C17.24 9.28516 17.399 9.21931 17.5162 9.1021C17.6334 8.98489 17.6992 8.82592 17.6992 8.66016C17.6992 8.4944 17.6334 8.33542 17.5162 8.21821C17.399 8.101 17.24 8.03516 17.0742 8.03516H8.32422ZM7.69922 4.28516C6.70466 4.28516 5.75083 4.68024 5.04757 5.38351C4.34431 6.08677 3.94922 7.04059 3.94922 8.03516V18.0352C3.94922 19.0297 4.34431 19.9835 5.04757 20.6868C5.75083 21.3901 6.70466 21.7852 7.69922 21.7852H17.6992C18.6938 21.7852 19.6476 21.3901 20.3509 20.6868C21.0541 19.9835 21.4492 19.0297 21.4492 18.0352V8.03516C21.4492 7.04059 21.0541 6.08677 20.3509 5.38351C19.6476 4.68024 18.6938 4.28516 17.6992 4.28516H7.69922ZM5.19922 8.03516C5.19922 7.37211 5.46261 6.73623 5.93145 6.26739C6.40029 5.79855 7.03618 5.53516 7.69922 5.53516H17.6992C18.3623 5.53516 18.9981 5.79855 19.467 6.26739C19.9358 6.73623 20.1992 7.37211 20.1992 8.03516V18.0352C20.1992 18.6982 19.9358 19.3341 19.467 19.8029C18.9981 20.2718 18.3623 20.5352 17.6992 20.5352H7.69922C7.03618 20.5352 6.40029 20.2718 5.93145 19.8029C5.46261 19.3341 5.19922 18.6982 5.19922 18.0352V8.03516Z"
      fill="#F26D58"
    />
  </svg>,
  <svg key={9} width="26" height="26" viewBox="0 0 26 26" fill="none">
    <path
      d="M7.54063 24.2533H18.6522C20.8183 24.2533 21.896 23.1547 21.896 20.9783V11.4779C21.896 10.1279 21.7496 9.54219 20.9125 8.68415L15.1366 2.81451C14.342 1.99799 13.6929 1.82031 12.5107 1.82031H7.54063C5.38527 1.82031 4.29688 2.92924 4.29688 5.10603V20.9783C4.29688 23.165 5.38527 24.2533 7.54063 24.2533ZM7.62411 22.569C6.54643 22.569 5.98125 21.9931 5.98125 20.9471V5.13728C5.98125 4.10156 6.54643 3.50469 7.63482 3.50469H12.2804V9.58415C12.2804 10.9025 12.95 11.5511 14.2473 11.5511H20.2116V20.9471C20.2116 21.9931 19.6567 22.569 18.5687 22.569H7.62411ZM14.4357 9.97076C14.0277 9.97076 13.8598 9.80379 13.8598 9.38505V3.82924L19.8866 9.97121L14.4357 9.97076Z"
      fill="#F26D58"
    />
  </svg>,
];

const colorPalette = {
  Diesel: "#028A60",
  HFO: "#A9DECE",
  CNG: "#E9FFF8",
  LPG: "#D0FFF1",
  "Gasoline/Petrol": "#02B880",
};

const colorPalette2 = {
  R410a: "#028A60",
  R22: "#02B880",
  R134a: "#B1E9D8",
  "HFC-23": "#D0FFF1",
  "HFC-245fa": "#E9FFF8",
};

const colorPalette3 = {
  "Emission From Waste Gas Disposal": " #028A60",
  "Fugitive Emissions": "#02B880",
  "Emission from Process and Vented Emission": "#A9DECE",
};

const businesspallete = {
  "First Class": "#F26D58",
  "Business Class": "#FF8977",
  "Economy Class": "#FF9989",
};

const ecbpallete = {
  Car: "#F26D58",
  "Motor Cycle": "#FF8977",
  Bus: "#FFAC9F",
  Train: "#FF9989",
};

const wastecolorPalette = {
  Metals: "#F26D58",
  Glass: "#FF7863",
  Plastics: "#FF8977",
  Electronics: "#FFD3CD",
  "Paper & Cardboards": "#FF9989",
  "Organic Waste": "#FFAC9F",
  "Mixed Waste": "#FFBBB0",
  "Textile Waste": "#FFC8BF",
  "Construction & Demolition Waste": "#FFE6E3",
};

const disposlaPalette = {
  Recycled: "#F26D58",
  Landfilled: "#FF8977",
  Combusted: "#FFB6AB",
  Composted: "#FF9989",
  "Wet digestate with curing": "#FFAC9F",
  "Dry digestate with curing": "#FF9989",
};

const fuelpallete = {
  "Upstream emissions of fuels purchased for own use": "#F26D58",
  "Upstream emissions of purchased electricity for own use": "#FF8977",
  "Transmission & distribution (T&D) losses of purchased electricity for own use":
    "#FF9989",
};

const TotalEmissionsInventoryReport = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const { user } = useAuth();
  const [dropdownOpen, setDropdownOpen] = useState(false);
  const [openEditModal, setOpenEditModal] = useState(false);
  const [openShareModal, setOpenShareModal] = useState(false);
  const [reportData, setReportData] = useState({});
  const [scope1Data, setScope1Data] = useState([]);
  const [scope2Data, setScope2Data] = useState([]);
  const [scope3Data, setScope3Data] = useState([]);
  const [chartData, setChartData] = useState([]);
  const [FuelTypeEmissionBreakdownData, setFuelTypeEmissionBreakdownData] =
    useState([]);
  const [RefrigerantEmissionsData, setRefrigerantEmissionsData] = useState([]);
  const [FuelConsumptionBreakdown, setFuelConsumptionBreakdown] = useState([]);
  const [RefrigerantConsumptionData, setRefrigerantConsumptionData] = useState(
    []
  );
  const [WasteEmissionData, setWasteEmissionData] = useState([]);
  const [FuelActivitiesEmissionData, setFuelActivitiesEmissionData] = useState(
    []
  );
  const [
    WasteDisposalMethodsByCategoryData,
    setWasteDisposalMethodsByCategoryData,
  ] = useState([]);
  const [
    BusinessTravelEmissionsBreakdown,
    setBusinessTravelEmissionsBreakdown,
  ] = useState([]);
  const [ECEBreakdownByVehicleTypeData, setECEBreakdownByVehicleTypeData] =
    useState([]);
  const [EmissionUpstreamAssetsData, setEmissionUpstreamAssetsData] = useState(
    []
  );
  const [ProcessEmissionBreakdownData, setProcessEmissionBreakdownData] =
    useState([]);

  const scopeData1 = async (id) => {
    const response = await getScope1Data(id);
    setScope1Data([
      {
        label: "Fuel Consumption",
        value: response?.data?.totalFuelEmissions,
        color: "#028A60",
        key: response?.data?.totalFuelEmissionsPercentage,
      },
      {
        label: "Refrigerant Data",
        value: response?.data?.totalRefrigerantEmissions,
        color: "#02B880",
        key: response?.data?.totalRefrigerantEmissionsPercentage,
      },
      ...(oilGasIndustryFlag[user?.organization?.industry?.id]
        ? [
            {
              label: "Process Emission",
              value: response?.data?.totalProcessEmissions,
              color: "#B1E9D8",
              key: response?.data?.totalProcessEmissionsPercentage,
            },
          ]
        : []),
    ]);
    const transformedData = response?.data?.fuelEmissionsByType.map((item) => {
      return {
        label: item.fuelTypeName,
        value: item.totalEmissions,
        color: colorPalette[item.fuelTypeName] || "#006D4F",
        key: item.percentage,
      };
    });
    const transformedData2 = response?.data?.fuelEmissionsByType.map((item) => {
      return {
        fuel: item.fuelTypeName,
        value: item.quantity,
        unit: item.unit,
        color: colorPalette[item.fuelTypeName] || "#006D4F",
      };
    });
    const refData = response?.data?.refrigerantEmissionsByType.map((item) => {
      return {
        label: item.refrigerantTypeName,
        value: item?.totalEmissions,
      };
    });
    const refData2 = response?.data?.refrigerantEmissionsByType.map((item) => {
      return {
        label: item.refrigerantTypeName,
        value: item?.quantity,
        color: colorPalette2[item.refrigerantTypeName] || "#006D4F",
      };
    });
    const refData3 = response?.data?.processEmissionsByType.map((item) => {
      return {
        label: item?.processTypeName,
        value: item?.totalEmissions,
        key: item?.percentage,
        color: colorPalette3[item.processTypeName],
      };
    });
    setProcessEmissionBreakdownData(refData3);
    setFuelConsumptionBreakdown(transformedData2);
    setRefrigerantConsumptionData(refData2);
    setRefrigerantEmissionsData(refData);
    setFuelTypeEmissionBreakdownData(transformedData);
  };
  const scopeData2 = async (id) => {
    const response = await getScope2Data(id);
    setScope2Data([
      {
        label: "Chilled Water Consumption",
        value: response?.data?.chilledWaterEmissions,
        color: "#2E59C5",
        key: response?.data?.chilledWaterEmissionsPercentage,
      },
      {
        label: "Electricity Consumption",
        value: response?.data?.electricityEmissions,
        color: "#476ECE",
        key: response?.data?.electricityEmissionsPercentage,
      },
      {
        label: "Heat Consumption",
        value: response?.data?.heatEmissions,
        color: "#7094EE",
        key: response?.data?.heatEmissionsPercentage,
      },
      {
        label: "Purchased desalinated water",
        value: response?.data?.waterEmissions,
        color: "#AFC6FF",
        key: response?.data?.waterEmissionsPercentage,
      },
    ]);
  };
  const scopeData3 = async (id) => {
    const response = await getScope3Data(id);
    setScope3Data([
      {
        label: "Waste Generated",
        value: response.data.totalWasteEmissions,
        color: "#F26D58",
        key: response.data.totalWasteEmissionsPercentage,
      },
      {
        label: "Business Travel",
        value: response.data.totalBusinessTravelEmissions,
        color: "#FF7863",
        key: response.data.totalBusinessTravelEmissionsPercentage,
      },
      {
        label: "Purchased Goods",
        value: response.data.totalPurchasedGoodsEmissions,
        color: "#FF8977",
        key: response.data.totalPurchasedGoodsEmissionsPercentage,
      },
      {
        label: "Capital Goods",
        value: response.data.totalCapitalGoodsEmissions,
        color: "#FF9989",
        key: response.data.totalCapitalGoodsEmissionsPercentage,
      },
      {
        label: "Investments",
        value: response.data.totalInvestmentsEmissions,
        color: "#FFBBB0",
        key: response.data.totalInvestmentsEmissionsPercentage,
      },
      {
        label: "Employee Commuting",
        value: response.data.totalEmployeeCommutingEmissions,
        color: "#FFC8BF",
        key: response.data.totalEmployeeCommutingEmissionsPercentage,
      },
      ...(oilGasIndustryFlag[user?.organization?.industry?.id]
        ? [
            {
              label: "Fuel Related Activities",
              value: response.data.totalFuelRelatedEmissions,
              color: "#FFD3CD",
              key: response.data.totalFuelRelatedEmissionsPercentage,
            },
          ]
        : []),
      {
        label: "Upstream Leashed Assets",
        value: response.data.totalUpstreamLeasedAssetsEmissions,
        color: "#FFE6E3",
        key: response.data.totalUpstreamLeasedAssetsEmissionsPercentage,
      },
      {
        label: "Downsteam Leashed Assets",
        value: response.data.totalDownstreamLeasedAssetsEmissions,
        color: "#FFE6E3",
        key: response.data.totalDownstreamLeasedAssetsEmissionsPercentage,
      },
    ]);

    const transformedData = Object.entries(
      response?.data?.wasteBreakdown?.categories
    ).map(([category, emissions]) => {
      return {
        label: category, // The key becomes the label
        value: emissions, // Multiply emissions by 1000 and round
        color: wastecolorPalette[category] || "#FFE6E3", // Use predefined colors or fallback color
      };
    });
    const businessData = response?.data?.businessTravelBreakdown.map((item) => {
      return {
        label: item.mode,
        value: item.emissions,
        color: businesspallete[item.mode] || "#F26D58",
        key: item.percentage,
      };
    });

    const updata = Object.entries(
      response?.data?.upstreamLeasedAssetsBreakdown.energySources
    ).map(([energySource, sourceDetails]) => {
      // Default values for Building, Vehicle, and Equipment
      const assetTypeBreakdown = sourceDetails.assetTypeBreakdown || {};

      return {
        name: energySource, // Energy source name becomes 'name'
        Building: assetTypeBreakdown.Building || 0, // If there's no Building data, leave it empty
        Vehicle: assetTypeBreakdown.Vehicle || 0, // Fill Vehicle if present
        Equipment: assetTypeBreakdown.Equipment || 0, // Fill Equipment if present
      };
    });

    const disposalmethod = response?.data?.wasteBreakdown?.disposalMethods.map(
      (item) => {
        return {
          label: item.disposalMethod,
          value: item.emissions,
          key: item.percentage,
          color: disposlaPalette[item.disposalMethod] || "#FFE6E3",
        };
      }
    );

    const ecb = response?.data?.employeeCommutingBreakdown.map((item) => {
      return {
        label: item.vehicleType,
        value: item.emissions,
        color: ecbpallete[item.vehicleType] || "#F26D58",
        key: item.percentage,
      };
    });

    const fuel = response?.data?.fuelRelatedBreakdown.map((item) => {
      return {
        label: item.activity,
        value: item.emissions,
        color: fuelpallete[item.activity] || "#F26D58",
        key: item.percentage,
      };
    });

    setWasteEmissionData(transformedData);
    setECEBreakdownByVehicleTypeData(ecb);
    setBusinessTravelEmissionsBreakdown(businessData);
    setFuelActivitiesEmissionData(fuel);
    setWasteDisposalMethodsByCategoryData(disposalmethod);
    setEmissionUpstreamAssetsData(updata);
  };

  const fetchreportData = async () => {
    const response = await getReportWithID(id);
    if (response.data.success) {
      setReportData(response?.data?.report);
    } else {
      alert("Couldnt Fetch Report Details");
    }
  };

  const fetchChartData = async () => {
    try {
      const response = await api.post("/report/fetch_total_emissions", {
        reportId: id,
      });
      const scopeColors = {
        scope1: {
          baseColor: "#01533A",
          gradientColors: ["#01533A", "#028A60", "#02A673"],
        },
        scope2: {
          baseColor: "#087A91",
          gradientColors: ["#087A91", "#098DA7", "#0CA1BF", "#10BBDD"],
        },
        scope3: {
          baseColor: "#F26D58",
          gradientColors: [
            "#F26D58",
            "#FF7863",
            "#FF8977",
            "#FF9989",
            "#FFAC9F",
            "#FFBBB0",
            "#FFC8BF",
            "#FFD3CD",
            "#FFE6E3",
          ],
        },
      };
      const transformedData = Object.keys(response.data.emissions)
        .filter((scope) => response.data.emissions[scope].value > 0)
        .map((scope) => ({
          label: `Scope ${scope.slice(-1)}`,
          value: formatIndianNumber(response.data.emissions[scope].value),
          percentage: parseStringAndRoundOff(
            response.data.emissions[scope].percentage
          ),
          baseColor: scopeColors[scope].baseColor,
          gradientColors: scopeColors[scope].gradientColors,
          index: scope.slice(-1) - 1,
        }));

      setChartData(transformedData);
    } catch (error) {
      console.error("Error fetching data:", error);
    }
  };

  useEffect(() => {
    const fetchData = async () => {
      await Promise.all([
        scopeData1(id),
        fetchreportData(id),
        scopeData2(id),
        scopeData3(id),
      ]);
      fetchChartData(id);
    };

    fetchData();
  }, [id]);

  useEffect(() => {
    fetchreportData(id);
    fetchChartData(id);
  }, []);

  const toggleDropdown = () => {
    setDropdownOpen((prev) => !prev);
  };

  useEffect(() => {
    window.scrollTo(0, 0);
  }, []);

  return (
    <div
      style={{
        backgroundColor: "#FBFBFB",
      }}
    >
      <div
        style={{
          borderBottom: "1px solid #eeeeee",
          padding: "1rem 4rem",
          display: "flex",
          justifyContent: "space-between",
          alignItems: "center",
          background: "#fff",
        }}
      >
        <Typography
          sx={{
            fontWeight: "600",
            fontStyle: "Inter",
            fontSize: "1.4rem",
            wordSpacing: "0px",
            lineHeight: "0px",
          }}
        >
          GHG Emissions Inventory Report
        </Typography>
        <Box
          sx={{
            display: "flex",
            alignItems: "center",
            gap: "1.2rem",
            position: "relative",
          }}
        >
          <Button
            onClick={() => {
              navigate(`/editreport/${id}`);
            }}
            sx={{
              borderRadius: "32px",
              border: "1px solid #28814D",
              padding: "16px 32px",
              height: "48px",
              fontWeight: "500",
              fontSize: "14px",
              textTransform: "capitalize",
              color: "#28814D",
              "&:hover": {
                background: "rgba(177, 233, 216, 0.30)",
              },
            }}
          >
            Edit
          </Button>
          <Button
            onClick={() => navigate("/")}
            variant="contained"
            sx={{
              height: "48px",
              fontSize: "14px",
              borderRadius: "32px",
              padding: "16px 32px",
              textTransform: "none",
              backgroundColor: "#369D9C",
              boxShadow: "none",
              fontWeight: "500",
              background: "linear-gradient(102deg, #369D9C 0%, #28814D 100%)",
              "&:hover": {
                background: "linear-gradient(102deg, #369D9C 0%, #0F4124 100%)",
                boxShadow: "none",
              },
            }}
          >
            Go to home
          </Button>
          <span
            style={{
              display: "flex",
              alignItems: "center",
              cursor: "pointer",
            }}
            onClick={toggleDropdown}
          >
            <MoreVertOutlined />
          </span>
          {dropdownOpen && (
            <Paper
              sx={{
                position: "absolute",
                top: "100%",
                right: "-30px",
                mt: 1,
                zIndex: 10,
                display: "flex",
                flexDirection: "column",
                border: "1px solid #d2d2d294",
                borderRadius: "6px",
                boxShadow: "none",
                width: "140px",
                padding: "8px 0",
              }}
            >
              <span
                style={{
                  textTransform: "none",
                  fontSize: "0.875rem",
                  padding: "5px 10px",
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "start",
                  gap: "0.5rem",
                  cursor: "pointer",
                  "&:hover": {
                    background: "rgba(177, 233, 216, 0.30)",
                  },
                }}
                onClick={() => {
                  setOpenShareModal((prev) => !prev);
                  setDropdownOpen((prev) => !prev);
                }}
              >
                <span>
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="18"
                    height="14"
                    viewBox="0 0 24 25"
                    fill="none"
                  >
                    <g clipPath="url(#clip0_1214_42954)">
                      <path
                        d="M13.9778 7.37109L8.52344 10.8773"
                        stroke="black"
                        strokeWidth="1.5"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                      <path
                        d="M8.52344 14.1211L13.9778 17.6273"
                        stroke="black"
                        strokeWidth="1.5"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                      <path
                        d="M6 15.5C7.65685 15.5 9 14.1569 9 12.5C9 10.8431 7.65685 9.5 6 9.5C4.34315 9.5 3 10.8431 3 12.5C3 14.1569 4.34315 15.5 6 15.5Z"
                        stroke="black"
                        strokeWidth="1.5"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                      <path
                        d="M16.5 22.25C18.1569 22.25 19.5 20.9069 19.5 19.25C19.5 17.5931 18.1569 16.25 16.5 16.25C14.8431 16.25 13.5 17.5931 13.5 19.25C13.5 20.9069 14.8431 22.25 16.5 22.25Z"
                        stroke="black"
                        strokeWidth="1.5"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                      <path
                        d="M16.5 8.75C18.1569 8.75 19.5 7.40685 19.5 5.75C19.5 4.09315 18.1569 2.75 16.5 2.75C14.8431 2.75 13.5 4.09315 13.5 5.75C13.5 7.40685 14.8431 8.75 16.5 8.75Z"
                        stroke="black"
                        strokeWidth="1.5"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </g>
                    <defs>
                      <clipPath id="clip0_1214_42954">
                        <rect
                          width="24"
                          height="24"
                          fill="white"
                          transform="translate(0 0.5)"
                        />
                      </clipPath>
                    </defs>
                  </svg>
                </span>
                <span>Share</span>
              </span>
              <DownloadReportButton reportId={id} />
            </Paper>
          )}
        </Box>
      </div>
      <div style={{ padding: "2.2rem 90px" }}>
        <div
          style={{ display: "flex", flexDirection: "column", gap: "1.8rem" }}
        >
          <div
            style={{
              padding: "40px 0px",
              overflow: "hidden",
              backgroundSize: "contain",
              position: "relative",
              backgroundRepeat: "no-repeat",
              backgroundColor: "white",
              borderRadius: "16px",
              backgroundImage: `url(${backgroundImage})`,
            }}
          >
            <div
              style={{
                padding: "0 2.4rem",
                display: "flex",
                alignItems: "center",
                gap: "1rem",
              }}
            >
              {user?.organization?.logo ? (
                <div>
                  <img
                    src={
                      user?.organization?.logo &&
                      user.organization.logo !== "null"
                        ? `${constant.IMG_URL}/${user.organization.logo}`
                        : dummy_company
                    }
                    height={65}
                    width={65}
                    alt="Company Logo"
                    style={{
                      border: "1px solid #ace6e6",
                      borderRadius: "100%",
                    }}
                  />
                </div>
              ) : (
                ""
              )}

              <div
                style={{ display: "flex", gap: "0.5rem", alignItems: "center" }}
              >
                <h2>
                  {" "}
                  <b> {reportData?.name} </b>{" "}
                </h2>
                <h2>I</h2>{" "}
                <h2>
                  {reportData?.country} For{" "}
                  {reportData?.periodicity === "yearly"
                    ? "year"
                    : reportData?.periodicity}{" "}
                  {reportData?.year}
                </h2>
              </div>
            </div>
            <div
              style={{
                display: "flex",
                alignItems: "center",
                position: "absolute",
                right: "2rem",
                gap: "0.8rem",
              }}
            >
              <Typography sx={{ fontSize: "0.8rem", fontWeight: "600" }}>
                Powered by
              </Typography>
              <img src={ge3s} width={60} alt="ge3s Logo" />
            </div>
          </div>

          <div
            style={{
              padding: "1rem 2.2rem",
              background: "#fff",
              borderRadius: "16px",
            }}
          >
            <div
              style={{
                display: "flex",
                flexDirection: "column",
                gap: "2rem",
              }}
            >
              <div>
                <Typography
                  sx={{
                    fontFamily: "Inter",
                    fontSize: "1.5rem",
                    fontWeight: "500",
                    wordSpacing: "0px",
                  }}
                >
                  Total GHG Emissions Distribution
                </Typography>
              </div>
              <LineChart
                chartData={chartData}
                scopeData={[scope1Data, scope2Data, scope3Data]}
              />
            </div>
          </div>

          {reportData.scope1?.grand_total_emissions !== 0 ? (
            <div
              style={{ display: "flex", flexDirection: "column", gap: "1rem" }}
            >
              <div
                style={{
                  display: "flex",
                  borderRadius: "16px",
                }}
              >
                <ScopeData
                  title="Scope 1 Emissions: Your Direct Footprint"
                  desc="Your carbon footprint includes direct emissions from your operations, like your buildings and vehicles."
                  svgs={Scope1SVGs}
                  data={scope1Data}
                  type="scope-1"
                />
              </div>

              <div
                style={{
                  width: "100%",
                  display: "flex",
                  flexDirection: "column",
                  gap: "1rem",
                }}
              >
                <div
                  style={{
                    display: "flex",
                    justifyContent: "space-between",
                    width: "100%",
                    gap: "20px",
                  }}
                >
                  <div
                    style={{
                      flex: "1",
                      padding: "2rem 2.2rem",
                      height: "350px",
                      display: "flex",
                      justifyContent: "center",
                      alignItems: "center",
                      borderRadius: "16px",
                      background: "white",
                      zIndex: 99,
                    }}
                  >
                    <GraphWrapper
                      data={FuelTypeEmissionBreakdownData}
                      dummyImage={FuelTypeEmissions}
                    >
                      <div
                        style={{
                          textAlign: "center",
                          position: "relative",
                          width: "100%",
                          height: "100%",
                        }}
                      >
                        <Typography
                          sx={{
                            fontFamily: "Inter",
                            fontSize: "1rem",
                            fontWeight: "600",
                            wordSpacing: "0px",
                            textAlign: "start",
                          }}
                        >
                          Fuel Type Emissions Breakdown
                        </Typography>
                        <SemiCirclePieChart
                          data={FuelTypeEmissionBreakdownData}
                          tooltipWidth={10}
                        />
                      </div>
                    </GraphWrapper>
                  </div>
                  <div
                    style={{
                      flex: "1",
                      padding: "2rem 2.2rem",
                      height: "350px",
                      display: "flex",
                      justifyContent: "center",
                      alignItems: "center",
                      borderRadius: "16px",
                      background: "white",
                      zIndex: 1,
                    }}
                  >
                    <GraphWrapper
                      data={RefrigerantEmissionsData}
                      dummyImage={RefrigerantEmissionsByType}
                    >
                      <div
                        style={{
                          textAlign: "center",
                          position: "relative",
                          width: "100%",
                          height: "100%",
                        }}
                      >
                        <Typography
                          sx={{
                            fontFamily: "Inter",
                            fontSize: "1rem",
                            fontWeight: "600",
                            wordSpacing: "0px",
                            textAlign: "start",
                          }}
                        >
                          Refrigerant Emissions by Type
                        </Typography>
                        <RefrigerantEmissionsChart
                          data={RefrigerantEmissionsData}
                        />
                      </div>
                    </GraphWrapper>
                  </div>

                  {oilGasIndustryFlag[user?.organization?.industry?.id] ? (
                    <div
                      style={{
                        flex: "1",
                        padding: "2rem 2.2rem",
                        height: "350px",
                        display: "flex",
                        justifyContent: "center",
                        alignItems: "center",
                        borderRadius: "16px",
                        background: "white",
                      }}
                    >
                      <GraphWrapper
                        data={ProcessEmissionBreakdownData}
                        dummyImage={ProcessEmissionBreakdown}
                      >
                        <div
                          style={{
                            textAlign: "center",
                            position: "relative",
                            width: "100%",
                            height: "100%",
                          }}
                        >
                          <Typography
                            sx={{
                              fontFamily: "Inter",
                              fontSize: "1rem",
                              fontWeight: "600",
                              wordSpacing: "0px",
                              textAlign: "start",
                            }}
                          >
                            Process Emission Breakdown
                          </Typography>
                          <SemiCirclePieChart
                            data={ProcessEmissionBreakdownData}
                            tooltipWidth={50}
                          />
                        </div>
                      </GraphWrapper>
                    </div>
                  ) : (
                    <></>
                  )}
                </div>

                <div
                  style={{ display: "flex", justifyContent: "space-between" }}
                >
                  <div
                    style={{
                      width: "40%",
                      borderRadius: "16px",
                      background: "white",
                      padding: "2rem 2.2rem",
                    }}
                  >
                    <GraphWrapper
                      data={FuelConsumptionBreakdown}
                      dummyImage={FuelConsumptionBreakdownDummy}
                    >
                      <div style={{ textAlign: "center" }}>
                        <Typography
                          sx={{
                            fontFamily: "Inter",
                            fontSize: "1rem",
                            fontWeight: "600",
                            wordSpacing: "0px",
                            textAlign: "start",
                          }}
                        >
                          Fuel Consumption Breakdown
                        </Typography>
                        <FuelConsumptionChart data={FuelConsumptionBreakdown} />
                      </div>
                    </GraphWrapper>
                  </div>
                  <div
                    style={{
                      width: "58%",
                      display: "flex",
                      flexDirection: "column",
                      justifyContent: "space-between",
                      padding: "0",
                      borderRadius: "16px",
                      background: "white",
                    }}
                  >
                    <GraphWrapper
                      data={RefrigerantConsumptionData}
                      dummyImage={RefrigerantConsumptionBreakdownDummy}
                    >
                      <div
                        style={{
                          textAlign: "center",
                          position: "relative",
                          padding: "2rem 2.2rem",
                        }}
                      >
                        <Typography
                          sx={{
                            fontFamily: "Inter",
                            fontSize: "1rem",
                            fontWeight: "600",
                            wordSpacing: "0px",
                            textAlign: "start",
                          }}
                        >
                          Refrigerant Consumption Breakdown
                        </Typography>
                        <RefrigerantConsumptionChart
                          data={RefrigerantConsumptionData}
                          width={700}
                          height={300}
                          type="scope-1"
                        />
                      </div>
                    </GraphWrapper>
                  </div>
                </div>
              </div>
            </div>
          ) : (
            <NoDataAvailableWrapper
              isPremium={false}
              title="No Data Available"
              desc="There’s nothing to display right now."
              reportid={id}
            >
              <img
                src={scope1BgDummy}
                style={{ width: "100%", height: "100%" }}
              />
            </NoDataAvailableWrapper>
          )}
          {user?.organization?.premiumPlan?.name === "OffSet" ||
          user?.organization?.premiumPlan?.name === "CarbonZero" ? (
            <div>
              {reportData?.scope2 ? (
                reportData?.scope2?.grand_total_emissions !== 0 ? (
                  <div style={{ display: "flex", flexDirection: "column" }}>
                    <div
                      style={{
                        display: "flex",
                        borderRadius: "16px",
                      }}
                    >
                      <ScopeData
                        title="Scope 2 Emissions: Our Purchased Power Print"
                        desc="Your carbon footprint includes indirect emissions from the electricity, desalinated water, chilled water, and heat you purchase to power your operations."
                        svgs={Scope2SVGs}
                        data={scope2Data}
                        type="scope-2"
                      />
                    </div>
                  </div>
                ) : (
                  <NoDataAvailableWrapper
                    isPremium={false}
                    title="No Data Available"
                    desc="There’s nothing to display right now."
                    reportid={id}
                  >
                    <img
                      src={scope2BgDummy}
                      style={{ width: "100%", height: "100%" }}
                    />
                  </NoDataAvailableWrapper>
                )
              ) : (
                <FillContentWrapper
                  isPremium={false}
                  title="Create Your Scope 2 Emissions Report"
                  desc="Enter the required data to generate and view your detailed emissions insights"
                  reportid={id}
                >
                  <img
                    src={scope2BgDummy}
                    style={{ width: "100%", height: "100%" }}
                  />
                </FillContentWrapper>
              )}
            </div>
          ) : (
            <PremiumContentWrapper
              isPremium={false}
              title="Unlock Scope 2 Emissions Reports"
              desc="Gain access to detailed Scope 2 emissions reports to track and manage indirect greenhouse gas emissions from purchased energy sources."
              reportid={id}
            >
              <img
                src={scope2BgDummy}
                style={{ width: "100%", height: "100%" }}
              />
            </PremiumContentWrapper>
          )}
          {user?.organization?.premiumPlan?.name === "CarbonZero" ? (
            <div>
              {reportData?.scope3 ? (
                reportData?.scope3?.grand_total_emissions !== 0 ? (
                  <div
                    style={{
                      display: "flex",
                      flexDirection: "column",
                      gap: "1rem",
                    }}
                  >
                    <div
                      style={{
                        borderRadius: "16px",
                      }}
                    >
                      <ScopeData
                        title="Scope 3 Emissions: Our Value Chain Vent"
                        desc="Your carbon footprint includes value chain emissions from your suppliers and customers."
                        svgs={Scope3SVGs}
                        data={scope3Data}
                        type="scope-3"
                      />
                    </div>

                    <div
                      style={{
                        width: "100%",
                        display: "flex",
                        flexDirection: "column",
                        gap: "1rem",
                      }}
                    >
                      <div
                        style={{
                          width: "100%",
                          padding: "2rem 2.2rem",
                          height: "350px",
                          display: "flex",
                          justifyContent: "center",
                          alignItems: "center",
                          borderRadius: "16px",
                          background: "white",
                        }}
                      >
                        <GraphWrapper
                          data={WasteEmissionData}
                          dummyImage={EmissionsByWasteCategoryDummy}
                        >
                          <div
                            style={{
                              textAlign: "center",
                              position: "relative",
                              width: "100%",
                              height: "100%",
                            }}
                          >
                            <Typography
                              sx={{
                                fontFamily: "Inter",
                                fontSize: "1rem",
                                fontWeight: "600",
                                wordSpacing: "0px",
                                textAlign: "start",
                              }}
                            >
                              Emissions by Waste category
                            </Typography>
                            <EmissionsByWasteChart
                              data={WasteEmissionData}
                              type="scope-3"
                            />
                          </div>
                        </GraphWrapper>
                      </div>
                      <div
                        style={{
                          display: "flex",
                          justifyContent: "space-between",
                          width: "100%",
                        }}
                      >
                        <div
                          style={{
                            width: "32.5%",
                            padding: "2rem 2.2rem",
                            height: "350px",
                            display: "flex",
                            justifyContent: "center",
                            alignItems: "center",
                            borderRadius: "16px",
                            background: "white",
                          }}
                        >
                          <GraphWrapper
                            data={BusinessTravelEmissionsBreakdown}
                            dummyImage={BusinessTravelEmissionsBreakdownDummy}
                          >
                            <div
                              style={{
                                textAlign: "center",
                                position: "relative",
                                width: "100%",
                                display: "flex",
                                flexDirection: "column",
                                gap: "2rem",
                              }}
                            >
                              <Typography
                                sx={{
                                  fontFamily: "Inter",
                                  fontSize: "1rem",
                                  fontWeight: "600",
                                  wordSpacing: "0px",
                                  textAlign: "start",
                                }}
                              >
                                Business Travel Emissions Breakdown{" "}
                              </Typography>
                              <div>
                                <FullCircleDonutChart
                                  data={BusinessTravelEmissionsBreakdown}
                                  width={260}
                                  height={260}
                                />
                              </div>
                            </div>
                          </GraphWrapper>
                        </div>
                        <div
                          style={{
                            width: "32.5%",
                            padding: "2rem 2.2rem",
                            height: "350px",
                            display: "flex",
                            justifyContent: "center",
                            alignItems: "center",
                            borderRadius: "16px",
                            background: "white",
                          }}
                        >
                          <GraphWrapper
                            data={WasteDisposalMethodsByCategoryData}
                            dummyImage={WasteDisposalMethodsByCategoryDummy}
                          >
                            <div
                              style={{
                                textAlign: "center",
                                position: "relative",
                                width: "100%",
                                display: "flex",
                                flexDirection: "column",
                                gap: "2rem",
                              }}
                            >
                              <Typography
                                sx={{
                                  fontFamily: "Inter",
                                  fontSize: "1rem",
                                  fontWeight: "600",
                                  wordSpacing: "0px",
                                  textAlign: "start",
                                }}
                              >
                                Waste Disposal Methods by Category{" "}
                              </Typography>
                              <div>
                                <FullCircleDonutChart
                                  data={WasteDisposalMethodsByCategoryData}
                                  width={260}
                                  height={260}
                                />
                              </div>
                            </div>
                          </GraphWrapper>
                        </div>
                        <div
                          style={{
                            width: "32.5%",
                            padding: "2rem 2.2rem",
                            height: "350px",
                            display: "flex",
                            justifyContent: "center",
                            alignItems: "center",
                            borderRadius: "16px",
                            background: "white",
                          }}
                        >
                          <GraphWrapper
                            data={ECEBreakdownByVehicleTypeData}
                            dummyImage={
                              EmployeeCommutingEmissionsBreakdownDummy
                            }
                          >
                            <div
                              style={{
                                textAlign: "center",
                                position: "relative",
                                width: "100%",
                                display: "flex",
                                flexDirection: "column",
                                gap: "0.5rem",
                              }}
                            >
                              <Typography
                                sx={{
                                  fontFamily: "Inter",
                                  fontSize: "1rem",
                                  fontWeight: "600",
                                  wordSpacing: "0px",
                                  textAlign: "start",
                                }}
                              >
                                Employee Commuting Emissions Breakdown by
                                Vehicle Type
                              </Typography>
                              <div>
                                <FullCircleDonutChart
                                  data={ECEBreakdownByVehicleTypeData}
                                  width={260}
                                  height={260}
                                />
                              </div>
                            </div>
                          </GraphWrapper>
                        </div>
                      </div>
                      <div
                        style={{
                          display: "flex",
                          justifyContent: "space-between",
                          width: "100%",
                          gap: "20px",
                        }}
                      >
                        {oilGasIndustryFlag[
                          user?.organization?.industry?.id
                        ] ? (
                          <div
                            style={{
                              width: "32.5%",
                              padding: "2rem 2.2rem",
                              height: "350px",
                              display: "flex",
                              justifyContent: "center",
                              alignItems: "center",
                              borderRadius: "16px",
                              background: "white",
                            }}
                          >
                            <GraphWrapper
                              data={FuelActivitiesEmissionData}
                              dummyImage={FuelRelatedActivitiesDummy}
                            >
                              <div
                                style={{
                                  textAlign: "center",
                                  position: "relative",
                                  width: "100%",
                                  height: "100%",
                                  zIndex: "200",
                                }}
                              >
                                <Typography
                                  sx={{
                                    fontFamily: "Inter",
                                    fontSize: "1rem",
                                    fontWeight: "600",
                                    wordSpacing: "0px",
                                    textAlign: "start",
                                  }}
                                >
                                  Fuel-Related Activities Emissions <br />{" "}
                                  Breakdown
                                </Typography>
                                <SemiCirclePieChart
                                  data={FuelActivitiesEmissionData}
                                  tooltipWidth={150}
                                />
                              </div>
                            </GraphWrapper>
                          </div>
                        ) : (
                          <></>
                        )}
                        <div
                          style={{
                            flex: "1",
                          }}
                        >
                          <GraphWrapper
                            data={EmissionUpstreamAssetsData}
                            dummyImage={EmissionFromUpstreamLeasedAssets}
                          ></GraphWrapper>
                          {EmissionUpstreamAssetsData.length > 0 && (
                            <div
                              style={{
                                textAlign: "center",
                                position: "relative",
                                width: "100%",
                                height: "100%",
                                background: "white",
                                padding: "0.5rem 0rem 0rem 0.5rem",
                              }}
                            >
                              <Typography
                                sx={{
                                  fontFamily: "Inter",
                                  fontSize: "1rem",
                                  fontWeight: "600",
                                  wordSpacing: "0px",
                                  textAlign: "start",
                                  marginBottom: "1.5rem",
                                }}
                              >
                                Emissions from Upstream Leased Assets
                              </Typography>
                              <StackedBarChart
                                data={EmissionUpstreamAssetsData}
                                height={250}
                              />
                            </div>
                          )}
                        </div>
                      </div>
                      <div
                        style={{
                          display: "flex",
                          flexDirection: "column",
                          gap: "1.5rem",
                          background: "white",
                          padding: "2.5rem 1rem",
                          borderRadius: "16px",
                        }}
                      >
                        <Typography
                          sx={{ fontSize: "1.2rem", fontWeight: "500" }}
                        >
                          Note: Our product currently focuses on specific Scope
                          3 KPIs, but additional factors will be rolled out
                          soon.
                        </Typography>
                        <div
                          style={{
                            display: "flex",
                            gap: "0.8rem",
                            flexWrap: "wrap",
                          }}
                        >
                          <Scope3Card
                            title="Upstream transportation and distribution"
                            value={0}
                          />
                          <Scope3Card
                            title="Downstream transportation and distribution"
                            value={0}
                          />
                          <Scope3Card
                            title="Processing of sold products"
                            value={0}
                          />
                          <Scope3Card title="Use of sold products" value={0} />
                          <Scope3Card
                            title="End-of-life treatment of sold products"
                            value={0}
                          />
                          <Scope3Card title="Franchises" value={0} />
                        </div>
                      </div>
                    </div>
                  </div>
                ) : (
                  <NoDataAvailableWrapper
                    isPremium={false}
                    title="No Data Available"
                    desc="There’s nothing to display right now."
                    reportid={id}
                  >
                    <img
                      src={scope3BgDummy}
                      style={{ width: "100%", height: "100%" }}
                    />
                  </NoDataAvailableWrapper>
                )
              ) : (
                <FillContentWrapper
                  isPremium={false}
                  title="Create Your Scope 3 Emissions Report"
                  desc="Enter the required data to generate and view your detailed emissions insights"
                  reportid={id}
                >
                  <img
                    src={scope3BgDummy}
                    style={{ width: "100%", height: "100%" }}
                  />
                </FillContentWrapper>
              )}
            </div>
          ) : (
            <PremiumContentWrapper
              isPremium={false}
              title="Unlock Scope 3 Emissions Reports"
              desc="Access comprehensive Scope 3 emissions reports to measure and manage your indirect emissions across the entire value chain, from suppliers to end consumers."
              reportid={id}
            >
              <img
                src={scope3BgDummy}
                style={{ width: "100%", height: "100%" }}
              />
              <div
                style={{
                  display: "flex",
                  flexDirection: "column",
                  gap: "1.5rem",
                  background: "white",
                  padding: "2.5rem 1rem",
                  borderRadius: "16px",
                }}
              >
                <Typography sx={{ fontSize: "1.2rem", fontWeight: "500" }}>
                  Note: Our product currently focuses on specific Scope 3 KPIs,
                  but additional factors will be rolled out soon.
                </Typography>
                <div
                  style={{ display: "flex", gap: "0.8rem", flexWrap: "wrap" }}
                >
                  <Scope3Card
                    title="Upstream transportation and distribution"
                    value={1780}
                  />
                  <Scope3Card
                    title="Downstream transportation and distribution"
                    value={150}
                  />
                  <Scope3Card title="Processing of sold products" value={160} />
                  <Scope3Card title="Use of sold products" value={400} />
                  <Scope3Card
                    title="End-of-life treatment of sold products"
                    value={0}
                  />
                  <Scope3Card title="Franchises" value={50} />
                </div>
              </div>
            </PremiumContentWrapper>
          )}
        </div>
      </div>
      <ConfirmEditReportModal
        open={openEditModal}
        setOpenModal={setOpenEditModal}
      />
      <ShareReportModal
        open={openShareModal}
        setOpenModal={setOpenShareModal}
        reportId={id}
      />
    </div>
  );
};

export default TotalEmissionsInventoryReport;
