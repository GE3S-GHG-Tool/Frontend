
        alert("File selected: " + file.name);
 

        <div>
 
</div>
 

      <div className="login-container-2">
   
       
      </div>
 
 <div
          style={{
            width: "80%",
            height: "16vh",
            borderRadius: "50%",
            margin: "0 auto",
            position: "absolute",
            bottom: "-10px", // Adjusted to be more visible
            left: "10%",
            background: "#598483",
            filter: "blur(10px)", // Adjusted blur to be less extreme
            opacity: 0.5, // Reduced opacity for better visibility
            zIndex: 0.9, // Changed to a positive value
          }}
        ></div>
 
<div className="login-container-2">
 

    backgroundColor: 'red', // Temporary color for testing
 

        <div
  style={{
    width: "80%",
    height: "16vh",
    borderRadius: "50%",
    margin: "0 auto",
    position: "absolute",
    bottom: "-10px", // Adjusted to be more visible
    left: "10%",
    background: "#598483",
    filter: "blur(10px)", // Adjusted blur to be less extreme
    opacity: 0.5, // Reduced opacity for better visibility
    zIndex: 0.9, // Changed to a positive value
  }}
></div>

 
 <div
            style={{
              width: "80%",
              height: "16vh",
              borderRadius: "50%",
              margin: "0 auto",
              position: "absolute",
              bottom: "-12px",
              left: "10%",
              background: "#598483",
              filter: "blur(15px)", 
              opacity: 0.8, 
              zIndex: -3,
            }}
          ></div>
 
.login-container-2 {
  position: relative;
  margin: 15vh auto;
  border: 1px solid var(--stroke-21, rgba(217, 217, 217, 0.4));
  background: #fff;
  /* box-shadow: 0px 40px 56px -50px rgba(89, 140, 135, 5); */
  width: 350px;
  padding: 35px;
  gap: 20px;
  display: flex;
  border-radius: 20px;
  flex-direction: column;
  height: auto;
  align-items: center;
  justify-content: center;
  text-align: center;
  overflow: hidden;
}
.login-container-2 div {
  display: flex;
  justify-content: center;
  flex-direction: column;
  gap: 22px;
}

.login-container-2 div h1 {
  font-size: 1.2rem;
  font-weight: 700;
  color: #00191d;
  text-align: center;
}

.login-container-2 div button {
  margin: 1.5vh 0;
  display: flex;
  padding: 1vh 2vw;
  justify-content: center;
  align-items: center;
  border-radius: 100px;
  background: var(--G-2, linear-gradient(102deg, #369d9c 0%, #28814d 100%));
  color: #ffffff;
  font-size: 1.1rem;
  height: 40px;
}

.input_login-2 {
  border-radius: 5px;
  background: #fff;
  height: 8vh;
}

.ge3s_logo-2 {
  width: 28%;
  margin: 0 auto;
}

.login-container-2 .password-container {
  position: relative;
  display: flex;
  align-items: center;
}

.login-container-2 .toggle-password {
  position: absolute;
  right: 10px;
  cursor: pointer;
}

.login-button-active {
  background: linear-gradient(102deg, #369d9c 0%, #28814d 100%);
  color: #ffffff;
  border: none;
  padding: 12px !important;
}

.login-button-disabled {
  background: linear-gradient(102deg, #e7e7e7 0%, #e7e7e7 100%) !important;
  color: #838383;
  cursor: not-allowed;
  border: none;
  padding: 12px !important;
}

.login-footer {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 1.5vh;
}

.forgot-password {
  color: #3cb477 !important;
  cursor: pointer;
  font-size: 1rem;
  margin-top: 0;
}

 
 // Adjusted position to fit within the container
 
 // Adjusted zIndex to ensure proper layering
 
// Reduced opacity
 
// Reduced blur for a lighter effect
 

  box-shadow: "0px 50px 50px -38px rgba(89, 132, 131, 0.65)";
 

  border: "1px solid rgba(217, 217, 217, 0.4)";
 


.login-container-2::before {
  content: "";
  position: absolute;
  top: -25px;
  left: -25px;
  right: -25px;
  bottom: -25px;
  border-radius: 651px;
  background: #598483;
  opacity: 0.8;
  filter: blur(25px);
  z-index: -1;
}

 

    // boxShadow: "0px 50px 50px -38px rgba(89, 132, 131, 0.65)",
 

            <div
              style={{
                width: "80%",
                height: "16vh",
                borderRadius: "60%",
                margin: "0 auto",
                position: "absolute",
                bottom: "-20px",
                left: "10%",
                background: "#598483",
                filter: "blur(15px)", 
                opacity: 0.6, 
                zIndex: -3,
              }}
            ></div>
 
<div
          style={{
            width: "80%",
            height: "16vh",
            borderRadius: "50%",
            margin: "0 auto",
            position: "absolute",
            bottom: "-12px",
            left: "10%",
            background: "#598483",
            filter: "blur(20px)",
            opacity: 0.8,
            zIndex: 0,
          }}
        ></div>
 
.login-container-2 {
  position: relative;
  margin: 15vh auto;
  border: 1px solid var(--stroke-21, rgba(217, 217, 217, 0.4));
  background: #fff;
  box-shadow: 0px 40px 56px -50px rgba(89, 140, 135, 5);
  /* box-shadow: "0px 50px 50px -38px rgba(89, 132, 131, 0.65)"; */
  width: 350px;
  padding: 35px;
  gap: 20px;
  display: flex;
  border-radius: 20px;
  flex-direction: column;
  height: auto;
  align-items: center;
  justify-content: center;
  text-align: center;
  overflow: hidden;
}

.login-container-2::before {
  content: "";
  position: absolute;
  top: -25px;
  left: -25px;
  right: -25px;
  bottom: -25px;
  border-radius: 651px;
  background: #598483;
  opacity: 0.8;
  filter: blur(25px);
  z-index: -1;
}
 

.login-container-2::before {
  content: "";
  position: absolute;
  top: -25px;
  left: -25px;
  right: -25px;
  bottom: -25px;
  border-radius: 651px;
  background: #598483;
  opacity: 0.8;
  filter: blur(25px);
  z-index: -1;
}
 
// Further reduced opacity
 
// Reduced blur amount
 
 <div
            style={{
              width: "80%",
              height: "16vh",
              borderRadius: "50%",
              margin: "0 auto",
              position: "absolute",
              bottom: "-20px",
              left: "10%",
              background: "#598483",
              filter: "blur(20px)",
              opacity: 0.8,
              zIndex: -3,
            }}
          ></div>
 

            <div
              style={{
                width: "80%",
                height: "16vh",
                borderRadius: "50%",
                margin: "0 auto",
                position: "absolute",
                bottom: "-20px",
                left: "10%",
                background: "#598483",
                filter: "blur(20px)",
                opacity: 0.7,
                zIndex: -9,
              }}
            ></div>
 
.login-container-2 {
  position: relative;
  margin: 15vh auto;
  border: 1px solid var(--stroke-21, rgba(217, 217, 217, 0.4));
  background: #fff;
  box-shadow: 0px 40px 56px -38px rgba(89, 132, 131, 0.65);
  /* box-shadow: "0px 50px 50px -38px rgba(89, 132, 131, 0.65)"; */
  width: 350px;
  padding: 35px;
  gap: 20px;
  display: flex;
  border-radius: 20px;
  flex-direction: column;
  height: auto;
  align-items: center;
  justify-content: center;
  text-align: center;
  overflow: hidden;
}

.login-container-2::before {
  content: "";
  position: absolute;
  top: -25px;
  left: -25px;
  right: -25px;
  bottom: -25px;
  border-radius: 651px;
  background: #598483;
  opacity: 0.8;
  filter: blur(25px);
  z-index: -1;
}

 
.login-container-2 {
  position: relative;
  margin: 15vh auto;
  border: 1px solid var(--stroke-21, rgba(217, 217, 217, 0.4));
  background: #fff;
  box-shadow: 0px 40px 56px -38px rgba(89, 132, 131, 0.65);
  /* box-shadow: "0px 50px 50px -38px rgba(89, 132, 131, 0.65)"; */
  width: 350px;
  padding: 35px;
  gap: 20px;
  display: flex;
  border-radius: 20px;
  flex-direction: column;
  height: auto;
  align-items: center;
  justify-content: center;
  text-align: center;
  overflow: hidden;
}
 

.login-container-2::before {
  content: "";
  position: absolute;
  top: -25px;
  left: -25px;
  right: -25px;
  bottom: -25px;
  border-radius: 651px;
  background: #598483;
  opacity: 0.8;
  filter: blur(25px);
  z-index: -1;
}
 
absolute
 

  position: absolute;
 
.login-container-2 {
  position: relative;
  margin: 15vh auto;
  border: 1px solid var(--stroke-21, rgba(217, 217, 217, 0.4));
  background: #fff;
  /* box-shadow: "0px 50px 50px -38px rgba(89, 132, 131, 0.65)"; */
  width: 350px;
  padding: 35px;
  gap: 20px;
  display: flex;
  border-radius: 20px;
  flex-direction: column;
  height: auto;
  align-items: center;
  justify-content: center;
  text-align: center;
  overflow: hidden;
}

.login-container-2::before {
  content: "";
  position: absolute;
  top: -25px;
  left: -25px;
  right: -25px;
  bottom: -25px;
  border-radius: 651px;
  background: #598483;
  opacity: 0.3;
  filter: blur(25px);
  z-index: -1;
}
 

  posi
 

  box-shadow: 0px 50px 50px -38px rgba(89, 132, 131, 0.65);
 
.login-container-2 {
  position: relative;
  margin: 15vh auto;
  border: 1px solid var(--stroke-21, rgba(217, 217, 217, 0.4));
  background: #fff;
  box-shadow: 0px 50px 50px -38px rgba(89, 132, 131, 0.65);
  /* box-shadow: "0px 50px 50px -38px rgba(89, 132, 131, 0.65)"; */
  width: 350px;
  padding: 35px;
  gap: 20px;
  display: flex;
  border-radius: 20px;
  flex-direction: column;
  height: auto;
  align-items: center;
  justify-content: center;
  text-align: center;
  overflow: hidden;
}
 

            <div
              style={{
                width: "80%",
                height: "16vh",
                borderRadius: "50%",
                margin: "0 auto",
                position: "absolute",
                bottom: "-20px",
                left: "10%",
                background: "#598483",
                filter: "blur(20px)",
                opacity: 0.8,
                zIndex: -1,
              }}
            ></div>
 

  const paperStyle = {
    height: "210px",
    padding: "60px",
    background: "#fff",
    maxWidth: "100%",
    width: "350px",
    border: "1px solid var(--stroke-21, rgba(217, 217, 217, 0.4))",
    borderRadius: "16px",
    // boxShadow: "6px 89px 56px -38px rgba(89, 132, 131, 0.65)",
    boxShadow: "0px 50px 50px -38px rgba(89, 132, 131, 0.65)",
    display: "flex",
    textAlign: "center",
    flexDirection: "column",
    gap: "20px",
    position: "relative",
    alignItems: "center",
    justifyContent: "center",
  };
 
import Wrapper from "../Wrapper/Wrapper";
import { Grid2, Paper, Typography } from "@mui/material";
import { Link } from "react-router-dom";
import Button from "@mui/material/Button";
function CreateAccountSuccessfully() {
  const paperStyle = {
    height: "210px",
    padding: "60px",
    background: "#fff",
    maxWidth: "100%",
    width: "350px",
    border: "1px solid var(--stroke-21, rgba(217, 217, 217, 0.4))",
    borderRadius: "16px",
    // boxShadow: "6px 89px 56px -38px rgba(89, 132, 131, 0.65)",
    boxShadow: "0px 50px 50px -38px rgba(89, 132, 131, 0.65)",
    display: "flex",
    textAlign: "center",
    flexDirection: "column",
    gap: "20px",
    position: "relative",
    alignItems: "center",
    justifyContent: "center",
  };

  return (
    <div>
      <Wrapper>
        <Grid2 container justifyContent="center">
          <Paper style={paperStyle}>
            <Grid2 style={{ position: "absolute", top: "23px", right: "25px" }}>
              <Link to="/login">
                <svg width="30" height="30" viewBox="0 0 32 32" fill="none">
                  <g id="X">
                    <path
                      id="Vector"
                      d="M25.7081 24.2925C25.801 24.3854 25.8747 24.4957 25.9249 24.6171C25.9752 24.7385 26.0011 24.8686 26.0011 25C26.0011 25.1314 25.9752 25.2615 25.9249 25.3829C25.8747 25.5043 25.801 25.6146 25.7081 25.7075C25.6151 25.8004 25.5048 25.8741 25.3835 25.9244C25.2621 25.9747 25.132 26.0006 25.0006 26.0006C24.8692 26.0006 24.7391 25.9747 24.6177 25.9244C24.4963 25.8741 24.386 25.8004 24.2931 25.7075L16.0006 17.4138L7.70806 25.7075C7.52042 25.8951 7.26592 26.0006 7.00056 26.0006C6.73519 26.0006 6.4807 25.8951 6.29306 25.7075C6.10542 25.5199 6 25.2654 6 25C6 24.7346 6.10542 24.4801 6.29306 24.2925L14.5868 16L6.29306 7.70751C6.10542 7.51987 6 7.26537 6 7.00001C6 6.73464 6.10542 6.48015 6.29306 6.29251C6.4807 6.10487 6.73519 5.99945 7.00056 5.99945C7.26592 5.99945 7.52042 6.10487 7.70806 6.29251L16.0006 14.5863L24.2931 6.29251C24.4807 6.10487 24.7352 5.99945 25.0006 5.99945C25.2659 5.99945 25.5204 6.10487 25.7081 6.29251C25.8957 6.48015 26.0011 6.73464 26.0011 7.00001C26.0011 7.26537 25.8957 7.51987 25.7081 7.70751L17.4143 16L25.7081 24.2925Z"
                      fill="black"
                    />
                  </g>
                </svg>
              </Link>
            </Grid2>
            <Grid2
              container
              direction="column"
              alignItems="center"
              justifyContent="center"
              gap={2}
              style={{ marginTop: "12px" }}
            >
              {" "}
              <svg width="80" height="95" viewBox="0 0 113 113" fill="none">
                <circle
                  cx="56.5"
                  cy="56.5"
                  r="56"
                  fill="url(#paint0_linear_939_5057)"
                />
                <path
                  d="M34.0957 56.3002L49.0854 71.29L78.9071 41.4683"
                  stroke="white"
                  strokeWidth="8.83606"
                />
                <defs>
                  <linearGradient
                    id="paint0_linear_939_5057"
                    x1="0.5"
                    y1="0.5"
                    x2="130.171"
                    y2="27.4392"
                    gradientUnits="userSpaceOnUse"
                  >
                    <stop stopColor="#51ADAC" />
                    <stop offset="1" stopColor="#4FA874" />
                  </linearGradient>
                </defs>
              </svg>
              <Typography
                style={{
                  color: "#000000",
                  fontFamily: "Inter",
                  fontSize: "20px",
                  fontWeight: 500,
                  lineHeight: "36px",
                  textAlign: "center",
                  letterSpacing: "-0.02em",
                  whiteSpace: "nowrap",
                  overflow: "hidden",
                  textOverflow: "ellipsis",
                }}
              >
                Your account has been created successfully
              </Typography>
              <Link to="/generate-reports">
                <Button
                  sx={{
                    width: "210px",
                    borderRadius: "32px",
                    justifyContent: "center",
                    alignItems: "center",
                    fontWeight: "500",
                    fontSize: "22px",
                    color: "#51ADAC",
                    height: "48px",
                    textTransform: "capitalize",
                    lineHeight: "33px",
                    padding: "10px 20px 10px 20px", // Adjust padding if needed
                    border: "1px solid #369D9C",
                    marginTop: "8px",
                  }}
                >
                  Continue
                </Button>
              </Link>
            </Grid2>
            <div
              style={{
                width: "80%",
                height: "16vh",
                borderRadius: "50%",
                margin: "0 auto",
                position: "absolute",
                bottom: "-20px",
                left: "10%",
                background: "#598483",
                filter: "blur(20px)",
                opacity: 0.8,
                zIndex: -1,
              }}
            ></div>
          </Paper>
        </Grid2>
      </Wrapper>
    </div>
  );
}

export default CreateAccountSuccessfully;

 
// Add ellipsis if the text overflows
 
 // Hide overflow content
 
// Keep text on one line
 
// Adjust letter spacing as specified
 
// Center align the text
 
// Set line height as per Figma design
 
// Changed to match the Figma font weight
 
// Adjusted to match the Figma font size
 
// Set the font family to Inter
 
// Ensure the correct color value as per design
 
import React from "react";
import Wrapper from "../Wrapper/Wrapper";
import { Button, Grid2, Paper, Typography } from "@mui/material";
import logo from "../../assets/images/ge3s_logo.png";
import TextField from "@mui/material/TextField";
import Radio from "@mui/material/Radio";
import { useState } from "react";
import { useNavigate } from "react-router-dom";
import { Visibility } from "@mui/icons-material";
import { VisibilityOff } from "@mui/icons-material";
import InputAdornment from "@mui/material/InputAdornment";
import IconButton from "@mui/material/IconButton";

function AccountCreationIntro() {
  const navigate = useNavigate();
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [confirmPassword, setConfirmPassword] = useState("");
  const [isTermsAccepted, setIsTermsAccepted] = useState(false);
  const [showPassword, setShowPassword] = useState(false);
  const [showConfirmPassword, setShowConfirmPassword] = useState(false);
  const handleClickShowPassword = () => setShowPassword(!showPassword);
  const handleClickShowConfirmPassword = () =>
    setShowConfirmPassword(!showConfirmPassword);
  const handleMouseDownPassword = (event) => event.preventDefault();
  const handleMouseDownConfirmPassword = (event) => event.preventDefault();
  const isFormValid = () => {
    return (
      email.trim() !== "" &&
      password.trim() !== "" &&
      confirmPassword.trim() !== "" &&
      password === confirmPassword &&
      isTermsAccepted
    );
  };
  const paperStyle = {
    height: "485px",
    width: "480px",
    border: "1px solid rgba(217, 217, 217, 0.4)",
    borderRadius: "20px",
    // boxShadow: "6px 89px 56px -38px rgba(89, 132, 131, 0.65)",
    boxShadow: "0px 50px 50px -38px rgba(89, 132, 131, 0.65)",
    display: "flex",
    flexDirection: "column",
    padding: "38px 47px",
    gap: "26px",
  };
  return (
    <div>
      <Wrapper>
        <Grid2>
          <Paper style={paperStyle}>
            <Grid2
              sx={{ display: "flex", flexDirection: "column", gap: "16px" }}
            >
              <Grid2 item>
                <img src={logo} height="57px" width="60px" alt="logo" />
              </Grid2>
              <Grid2 item>
                <Typography
                  variant="p"
                  fontSize="26px"
                  letterSpacing="-1"
                  width="416px"
                  fontWeight="600"
                  lineHeight="48px"
                >
                  Start creating your account
                </Typography>
              </Grid2>
            </Grid2>
            <Grid2
              sx={{ display: "flex", flexDirection: "column", gap: "4px" }}
            >
              <Typography
                variant="p"
                fontWeight="400"
                fontSize="14px"
                lineHeight="24px"
                color="#717171"
              >
                Verified Email Address
              </Typography>
              <TextField
                placeholder="email"
                size="small"
                required
                type="email"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                padding="10px 16px 10px 16px"
                border="1px solid #D9D9D9"
                sx={{
                  height: "42px", // Adjust this value as needed
                }}
              ></TextField>
            </Grid2>
            <Grid2
              sx={{ display: "flex", flexDirection: "column", gap: "26px" }}
            >
              <TextField
                placeholder="Password"
                size="small"
                required
                name="password"
                type={showPassword ? "text" : "password"}
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                InputProps={{
                  endAdornment: (
                    <InputAdornment position="end">
                      <IconButton
                        aria-label="toggle password visibility"
                        onClick={handleClickShowPassword}
                        onMouseDown={handleMouseDownPassword}
                        edge="end"
                      >
                        {showPassword ? <VisibilityOff /> : <Visibility />}
                      </IconButton>
                    </InputAdornment>
                  ),
                }}
                sx={{
                  height: "42px", // Adjust this value as needed
                }}
              ></TextField>
              <TextField
                placeholder="Re-Password"
                size="small"
                name="re-password"
                required
                value={confirmPassword} // Fixed value here
                onChange={(e) => setConfirmPassword(e.target.value)}
                type={showConfirmPassword ? "text" : "password"}
                InputProps={{
                  endAdornment: (
                    <InputAdornment position="end">
                      <IconButton
                        aria-label="toggle password visibility"
                        onClick={handleClickShowConfirmPassword}
                        onMouseDown={handleMouseDownConfirmPassword}
                        edge="end"
                      >
                        {showConfirmPassword ? (
                          <VisibilityOff />
                        ) : (
                          <Visibility />
                        )}
                      </IconButton>
                    </InputAdornment>
                  ),
                }}
                sx={{
                  height: "42px",
                }}
              ></TextField>
            </Grid2>
            <Grid2
              sx={{
                display: "flex",
                flexDirection: "row",
                alignItems: "center",
                gap: "2px",
                marginTop: "-16px",
                marginLeft: "-10px",
              }}
            >
              <Radio
                value="agree"
                required
                name="terms-radio"
                checked={isTermsAccepted}
                onChange={(e) => setIsTermsAccepted(e.target.checked)}
                sx={{
                  color: "#3CB457",
                  "&.Mui-checked": {
                    color: "#4FA874",
                  },
                }}
              />
              <Typography variant="p" fontWeight="400" fontSize="18px">
                I agree to the{" "}
              </Typography>
              <Typography
                variant="p"
                fontWeight="500"
                fontSize="18px"
                color="#3CB457"
              >
                Terms and Conditions.
              </Typography>
            </Grid2>
            <Grid2>
              <Button
                onClick={() => navigate("/create-account-successfully")}
                disabled={!isFormValid()}
                sx={{
                  width: "100%",
                  fontSize: "16px",
                  borderRadius: "32px",
                  justifyContent: "center",
                  alignItems: "center",
                  fontWeight: "600",
                  lineHeight: "12px",
                  padding: "20px 62px 20px 62px",
                  backgroundColor: "#E7E7E7",
                  // color: "#838383",
                  height: "42px",
                  textTransform: "capitalize",
                  background: isFormValid()
                    ? "linear-gradient(102deg, #369d9c 0%, #28814d 100%)"
                    : "linear-gradient(102deg, #e7e7e7 0%, #e7e7e7 100%)",
                  color: isFormValid ? "#ffffff" : "#838383",
                  border: isFormValid
                    ? "1px solid rgba(217, 217, 217, 0.4)"
                    : "none",
                  cursor: isFormValid ? "pointer" : "not-allowed",
                  "&:hover": {
                    background: isFormValid
                      ? "linear-gradient(102deg, #28814d 0%, #369d9c 100%)"
                      : "linear-gradient(102deg, #e7e7e7 0%, #e7e7e7 100%)",
                  },
                }}
              >
                Create account
              </Button>
            </Grid2>
          </Paper>
        </Grid2>
      </Wrapper>
    </div>
  );
}

export default AccountCreationIntro;

 
import React from "react";
import Wrapper from "../Wrapper/Wrapper";
import { Button, Grid2, Paper, Typography } from "@mui/material";
import logo from "../../assets/images/ge3s_logo.png";
import TextField from "@mui/material/TextField";
import Radio from "@mui/material/Radio";
import { useState } from "react";
import { useNavigate } from "react-router-dom";
import { Visibility } from "@mui/icons-material";
import { VisibilityOff } from "@mui/icons-material";
import InputAdornment from "@mui/material/InputAdornment";
import IconButton from "@mui/material/IconButton";

function AccountCreationIntro() {
  const navigate = useNavigate();
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [confirmPassword, setConfirmPassword] = useState("");
  const [isTermsAccepted, setIsTermsAccepted] = useState(false);
  const [showPassword, setShowPassword] = useState(false);
  const [showConfirmPassword, setShowConfirmPassword] = useState(false);
  const handleClickShowPassword = () => setShowPassword(!showPassword);
  const handleClickShowConfirmPassword = () =>
    setShowConfirmPassword(!showConfirmPassword);
  const handleMouseDownPassword = (event) => event.preventDefault();
  const handleMouseDownConfirmPassword = (event) => event.preventDefault();
  const isFormValid = () => {
    return (
      email.trim() !== "" &&
      password.trim() !== "" &&
      confirmPassword.trim() !== "" &&
      password === confirmPassword &&
      isTermsAccepted
    );
  };
  const paperStyle = {
    height: "485px",
    width: "480px",
    border: "1px solid rgba(217, 217, 217, 0.4)",
    borderRadius: "20px",
    // boxShadow: "6px 89px 56px -38px rgba(89, 132, 131, 0.65)",
    boxShadow: "0px 50px 50px -38px rgba(89, 132, 131, 0.65)",
    display: "flex",
    flexDirection: "column",
    padding: "38px 47px",
    gap: "26px",
  };
  return (
    <div>
      <Wrapper>
        <Grid2>
          <Paper style={paperStyle}>
            <Grid2
              sx={{ display: "flex", flexDirection: "column", gap: "16px" }}
            >
              <Grid2 item>
                <img src={logo} height="57px" width="60px" alt="logo" />
              </Grid2>
              <Grid2 item>
                <Typography
                  variant="p"
                  fontSize="26px"
                  letterSpacing="-1"
                  width="416px"
                  fontWeight="600"
                  lineHeight="48px"
                >
                  Start creating your account
                </Typography>
              </Grid2>
            </Grid2>
            <Grid2
              sx={{ display: "flex", flexDirection: "column", gap: "4px" }}
            >
              <Typography
                variant="p"
                fontWeight="400"
                fontSize="14px"
                lineHeight="24px"
                color="#717171"
              >
                Verified Email Address
              </Typography>
              <TextField
                placeholder="email"
                size="small"
                required
                type="email"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                padding="10px 16px 10px 16px"
                border="1px solid #D9D9D9"
                sx={{
                  height: "42px", // Adjust this value as needed
                }}
              ></TextField>
            </Grid2>
            <Grid2
              sx={{ display: "flex", flexDirection: "column", gap: "26px" }}
            >
              <TextField
                placeholder="Password"
                size="small"
                required
                name="password"
                type={showPassword ? "text" : "password"}
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                InputProps={{
                  endAdornment: (
                    <InputAdornment position="end">
                      <IconButton
                        aria-label="toggle password visibility"
                        onClick={handleClickShowPassword}
                        onMouseDown={handleMouseDownPassword}
                        edge="end"
                      >
                        {showPassword ? <VisibilityOff /> : <Visibility />}
                      </IconButton>
                    </InputAdornment>
                  ),
                }}
                sx={{
                  height: "42px", // Adjust this value as needed
                }}
              ></TextField>
              <TextField
                placeholder="Re-Password"
                size="small"
                name="re-password"
                required
                value={confirmPassword} // Fixed value here
                onChange={(e) => setConfirmPassword(e.target.value)}
                type={showConfirmPassword ? "text" : "password"}
                InputProps={{
                  endAdornment: (
                    <InputAdornment position="end">
                      <IconButton
                        aria-label="toggle password visibility"
                        onClick={handleClickShowConfirmPassword}
                        onMouseDown={handleMouseDownConfirmPassword}
                        edge="end"
                      >
                        {showConfirmPassword ? (
                          <VisibilityOff />
                        ) : (
                          <Visibility />
                        )}
                      </IconButton>
                    </InputAdornment>
                  ),
                }}
                sx={{
                  height: "42px",
                }}
              ></TextField>
            </Grid2>
            <Grid2
              sx={{
                display: "flex",
                flexDirection: "row",
                alignItems: "center",
                gap: "2px",
                marginTop: "-16px",
                marginLeft: "-10px",
              }}
            >
              <Radio
                value="agree"
                required
                name="terms-radio"
                checked={isTermsAccepted}
                onChange={(e) => setIsTermsAccepted(e.target.checked)}
                sx={{
                  color: "#3CB457",
                  "&.Mui-checked": {
                    color: "#4FA874",
                  },
                }}
              />
              <Typography variant="p" fontWeight="400" fontSize="18px">
                I agree to the{" "}
              </Typography>
              <Typography
                variant="p"
                fontWeight="500"
                fontSize="18px"
                color="#3CB457"
              >
                Terms and Conditions.
              </Typography>
            </Grid2>
            <Grid2>
              <Button
                onClick={() => navigate("/create-account-successfully")}
                disabled={!isFormValid()}
                sx={{
                  width: "100%",
                  fontSize: "16px",
                  borderRadius: "32px",
                  justifyContent: "center",
                  alignItems: "center",
                  fontWeight: "600",
                  lineHeight: "12px",
                  padding: "20px 62px 20px 62px",
                  backgroundColor: "#E7E7E7",
                  // color: "#838383",
                  height: "42px",
                  textTransform: "capitalize",
                  background: isFormValid()
                    ? "linear-gradient(102deg, #369d9c 0%, #28814d 100%)"
                    : "linear-gradient(102deg, #e7e7e7 0%, #e7e7e7 100%)",
                  color: isFormValid ? "#ffffff" : "#838383",
                  border: isFormValid
                    ? "1px solid rgba(217, 217, 217, 0.4)"
                    : "none",
                  cursor: isFormValid ? "pointer" : "not-allowed",
                  "&:hover": {
                    background: isFormValid
                      ? "linear-gradient(102deg, #28814d 0%, #369d9c 100%)"
                      : "linear-gradient(102deg, #e7e7e7 0%, #e7e7e7 100%)",
                  },
                }}
              >
                Create account
              </Button>
            </Grid2>
          </Paper>
        </Grid2>
      </Wrapper>
    </div>
  );
}

export default AccountCreationIntro;

 
import Wrapper from "../Wrapper/Wrapper";
import { Grid2, Paper, Typography } from "@mui/material";
import { Link } from "react-router-dom";
import Button from "@mui/material/Button";
function CreateAccountSuccessfully() {
  const paperStyle = {
    height: "210px",
    padding: "60px",
    background: "#fff",
    maxWidth: "100%",
    width: "350px",
   border: "1px solid rgba(217, 217, 217, 0.4)",
    borderRadius: "16px",
    // boxShadow: "6px 89px 56px -38px rgba(89, 132, 131, 0.65)",
    boxShadow: "0px 50px 50px -38px rgba(89, 132, 131, 0.65)",
    display: "flex",
    textAlign: "center",
    flexDirection: "column",
    gap: "20px",
    position: "relative",
    alignItems: "center",
    justifyContent: "center",
  };

  return (
    <div>
      <Wrapper>
        <Grid2 container justifyContent="center">
          <Paper style={paperStyle}>
            <Grid2 style={{ position: "absolute", top: "23px", right: "25px" }}>
              <Link to="/login">
                <svg width="30" height="30" viewBox="0 0 32 32" fill="none">
                  <g id="X">
                    <path
                      id="Vector"
                      d="M25.7081 24.2925C25.801 24.3854 25.8747 24.4957 25.9249 24.6171C25.9752 24.7385 26.0011 24.8686 26.0011 25C26.0011 25.1314 25.9752 25.2615 25.9249 25.3829C25.8747 25.5043 25.801 25.6146 25.7081 25.7075C25.6151 25.8004 25.5048 25.8741 25.3835 25.9244C25.2621 25.9747 25.132 26.0006 25.0006 26.0006C24.8692 26.0006 24.7391 25.9747 24.6177 25.9244C24.4963 25.8741 24.386 25.8004 24.2931 25.7075L16.0006 17.4138L7.70806 25.7075C7.52042 25.8951 7.26592 26.0006 7.00056 26.0006C6.73519 26.0006 6.4807 25.8951 6.29306 25.7075C6.10542 25.5199 6 25.2654 6 25C6 24.7346 6.10542 24.4801 6.29306 24.2925L14.5868 16L6.29306 7.70751C6.10542 7.51987 6 7.26537 6 7.00001C6 6.73464 6.10542 6.48015 6.29306 6.29251C6.4807 6.10487 6.73519 5.99945 7.00056 5.99945C7.26592 5.99945 7.52042 6.10487 7.70806 6.29251L16.0006 14.5863L24.2931 6.29251C24.4807 6.10487 24.7352 5.99945 25.0006 5.99945C25.2659 5.99945 25.5204 6.10487 25.7081 6.29251C25.8957 6.48015 26.0011 6.73464 26.0011 7.00001C26.0011 7.26537 25.8957 7.51987 25.7081 7.70751L17.4143 16L25.7081 24.2925Z"
                      fill="black"
                    />
                  </g>
                </svg>
              </Link>
            </Grid2>
            <Grid2
              container
              direction="column"
              alignItems="center"
              justifyContent="center"
              gap={2}
              style={{ marginTop: "12px" }}
            >
              {" "}
              <svg width="80" height="95" viewBox="0 0 113 113" fill="none">
                <circle
                  cx="56.5"
                  cy="56.5"
                  r="56"
                  fill="url(#paint0_linear_939_5057)"
                />
                <path
                  d="M34.0957 56.3002L49.0854 71.29L78.9071 41.4683"
                  stroke="white"
                  strokeWidth="8.83606"
                />
                <defs>
                  <linearGradient
                    id="paint0_linear_939_5057"
                    x1="0.5"
                    y1="0.5"
                    x2="130.171"
                    y2="27.4392"
                    gradientUnits="userSpaceOnUse"
                  >
                    <stop stopColor="#51ADAC" />
                    <stop offset="1" stopColor="#4FA874" />
                  </linearGradient>
                </defs>
              </svg>
              <Typography
                style={{
                  color: "#000000", // Ensure the correct color value as per design
                  fontFamily: "Inter", // Set the font family to Inter
                  fontSize: "20px", // Adjusted to match the Figma font size
                  fontWeight: 500, // Changed to match the Figma font weight
                  lineHeight: "36px", // Set line height as per Figma design
                  textAlign: "center", // Center align the text
                  letterSpacing: "-0.02em", // Adjust letter spacing as specified
                  whiteSpace: "nowrap", // Keep text on one line
                  overflow: "hidden", // Hide overflow content
                  textOverflow: "ellipsis", // Add ellipsis if the text overflows
                }}
              >
                Your account has been created successfully
              </Typography>
              <Link to="/generate-reports">
                <Button
                  sx={{
                    width: "210px",
                    borderRadius: "32px",
                    justifyContent: "center",
                    alignItems: "center",
                    fontWeight: "500",
                    fontSize: "22px",
                    color: "#51ADAC",
                    height: "48px",
                    textTransform: "capitalize",
                    lineHeight: "33px",
                    padding: "10px 20px 10px 20px", // Adjust padding if needed
                    border: "1px solid #369D9C",
                    marginTop: "8px",
                  }}
                >
                  Continue
                </Button>
              </Link>
            </Grid2>
            <div
            style={{
              width: "80%",
              height: "16vh",
              borderRadius: "50%",
              margin: "0 auto",
              position: "absolute",
              bottom: "-20px",
              left: "10%",
              background: "#598483",
              filter: "blur(20px)",
              opacity: 0.8,
              zIndex: -1,
            }}
          ></div>
          </Paper>
        </Grid2>
      </Wrapper>
    </div>
  );
}

export default CreateAccountSuccessfully;

 
import Wrapper from "../Wrapper/Wrapper";
import { Grid2, Paper, Typography } from "@mui/material";
import { Link } from "react-router-dom";
import Button from "@mui/material/Button";
function CreateAccountSuccessfully() {
  const paperStyle = {
    height: "210px",
    padding: "60px",
    background: "#fff",
    maxWidth: "100%",
    width: "350px",
   border: "1px solid rgba(217, 217, 217, 0.4)",
    borderRadius: "16px",
    // boxShadow: "6px 89px 56px -38px rgba(89, 132, 131, 0.65)",
    boxShadow: "0px 50px 50px -38px rgba(89, 132, 131, 0.65)",
    display: "flex",
    textAlign: "center",
    flexDirection: "column",
    gap: "20px",
    position: "relative",
    alignItems: "center",
    justifyContent: "center",
  };

  return (
    <div>
      <Wrapper>
        <Grid2 container justifyContent="center">
          <Paper style={paperStyle}>
            <Grid2 style={{ position: "absolute", top: "23px", right: "25px" }}>
              <Link to="/login">
                <svg width="30" height="30" viewBox="0 0 32 32" fill="none">
                  <g id="X">
                    <path
                      id="Vector"
                      d="M25.7081 24.2925C25.801 24.3854 25.8747 24.4957 25.9249 24.6171C25.9752 24.7385 26.0011 24.8686 26.0011 25C26.0011 25.1314 25.9752 25.2615 25.9249 25.3829C25.8747 25.5043 25.801 25.6146 25.7081 25.7075C25.6151 25.8004 25.5048 25.8741 25.3835 25.9244C25.2621 25.9747 25.132 26.0006 25.0006 26.0006C24.8692 26.0006 24.7391 25.9747 24.6177 25.9244C24.4963 25.8741 24.386 25.8004 24.2931 25.7075L16.0006 17.4138L7.70806 25.7075C7.52042 25.8951 7.26592 26.0006 7.00056 26.0006C6.73519 26.0006 6.4807 25.8951 6.29306 25.7075C6.10542 25.5199 6 25.2654 6 25C6 24.7346 6.10542 24.4801 6.29306 24.2925L14.5868 16L6.29306 7.70751C6.10542 7.51987 6 7.26537 6 7.00001C6 6.73464 6.10542 6.48015 6.29306 6.29251C6.4807 6.10487 6.73519 5.99945 7.00056 5.99945C7.26592 5.99945 7.52042 6.10487 7.70806 6.29251L16.0006 14.5863L24.2931 6.29251C24.4807 6.10487 24.7352 5.99945 25.0006 5.99945C25.2659 5.99945 25.5204 6.10487 25.7081 6.29251C25.8957 6.48015 26.0011 6.73464 26.0011 7.00001C26.0011 7.26537 25.8957 7.51987 25.7081 7.70751L17.4143 16L25.7081 24.2925Z"
                      fill="black"
                    />
                  </g>
                </svg>
              </Link>
            </Grid2>
            <Grid2
              container
              direction="column"
              alignItems="center"
              justifyContent="center"
              gap={2}
              style={{ marginTop: "12px" }}
            >
              {" "}
              <svg width="80" height="95" viewBox="0 0 113 113" fill="none">
                <circle
                  cx="56.5"
                  cy="56.5"
                  r="56"
                  fill="url(#paint0_linear_939_5057)"
                />
                <path
                  d="M34.0957 56.3002L49.0854 71.29L78.9071 41.4683"
                  stroke="white"
                  strokeWidth="8.83606"
                />
                <defs>
                  <linearGradient
                    id="paint0_linear_939_5057"
                    x1="0.5"
                    y1="0.5"
                    x2="130.171"
                    y2="27.4392"
                    gradientUnits="userSpaceOnUse"
                  >
                    <stop stopColor="#51ADAC" />
                    <stop offset="1" stopColor="#4FA874" />
                  </linearGradient>
                </defs>
              </svg>
              <Typography
                style={{
                  color: "#000000", // Ensure the correct color value as per design
                  fontFamily: "Inter", // Set the font family to Inter
                  fontSize: "20px", // Adjusted to match the Figma font size
                  fontWeight: 500, // Changed to match the Figma font weight
                  lineHeight: "36px", // Set line height as per Figma design
                  textAlign: "center", // Center align the text
                  letterSpacing: "-0.02em", // Adjust letter spacing as specified
                  whiteSpace: "nowrap", // Keep text on one line
                  overflow: "hidden", // Hide overflow content
                  textOverflow: "ellipsis", // Add ellipsis if the text overflows
                }}
              >
                Your account has been created successfully
              </Typography>
              <Link to="/generate-reports">
                <Button
                  sx={{
                    width: "210px",
                    borderRadius: "32px",
                    justifyContent: "center",
                    alignItems: "center",
                    fontWeight: "500",
                    fontSize: "22px",
                    color: "#51ADAC",
                    height: "48px",
                    textTransform: "capitalize",
                    lineHeight: "33px",
                    padding: "10px 20px 10px 20px", // Adjust padding if needed
                    border: "1px solid #369D9C",
                    marginTop: "8px",
                  }}
                >
                  Continue
                </Button>
              </Link>
            </Grid2>
            <div
            style={{
              width: "80%",
              height: "16vh",
              borderRadius: "50%",
              margin: "0 auto",
              position: "absolute",
              bottom: "-20px",
              left: "10%",
              background: "#598483",
              filter: "blur(20px)",
              opacity: 0.8,
              zIndex: -1,
            }}
          ></div>
          </Paper>
        </Grid2>
      </Wrapper>
    </div>
  );
}

export default CreateAccountSuccessfully;

 
 border: "1px solid var(--stroke-21, rgba(217, 217, 217, 0.4))",
 
import React from "react";
import Wrapper from "../Wrapper/Wrapper";
import { Button, Grid2, Paper, Typography } from "@mui/material";
import logo from "../../assets/images/ge3s_logo.png";
import TextField from "@mui/material/TextField";
import Radio from "@mui/material/Radio";
import { useState } from "react";
import { useNavigate } from "react-router-dom";
import { Visibility } from "@mui/icons-material";
import { VisibilityOff } from "@mui/icons-material";
import InputAdornment from "@mui/material/InputAdornment";
import IconButton from "@mui/material/IconButton";

function AccountCreationIntro() {
  const navigate = useNavigate();
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [confirmPassword, setConfirmPassword] = useState("");
  const [isTermsAccepted, setIsTermsAccepted] = useState(false);
  const [showPassword, setShowPassword] = useState(false);
  const [showConfirmPassword, setShowConfirmPassword] = useState(false);
  const handleClickShowPassword = () => setShowPassword(!showPassword);
  const handleClickShowConfirmPassword = () =>
    setShowConfirmPassword(!showConfirmPassword);
  const handleMouseDownPassword = (event) => event.preventDefault();
  const handleMouseDownConfirmPassword = (event) => event.preventDefault();
  const isFormValid = () => {
    return (
      email.trim() !== "" &&
      password.trim() !== "" &&
      confirmPassword.trim() !== "" &&
      password === confirmPassword &&
      isTermsAccepted
    );
  };
  const paperStyle = {
    height: "485px",
    width: "480px",
    border: "1px solid rgba(217, 217, 217, 0.4)",
    borderRadius: "20px",
    // boxShadow: "6px 89px 56px -38px rgba(89, 132, 131, 0.65)",
    boxShadow: "0px 50px 50px -38px rgba(89, 132, 131, 0.65)",
    display: "flex",
    flexDirection: "column",
    padding: "38px 47px",
    gap: "26px",
  };
  return (
    <div>
      <Wrapper>
        <Grid2>
          <Paper style={paperStyle}>
            <Grid2
              sx={{ display: "flex", flexDirection: "column", gap: "16px" }}
            >
              <Grid2 item>
                <img src={logo} height="57px" width="60px" alt="logo" />
              </Grid2>
              <Grid2 item>
                <Typography
                  variant="p"
                  fontSize="26px"
                  letterSpacing="-1"
                  width="416px"
                  fontWeight="600"
                  lineHeight="48px"
                >
                  Start creating your account
                </Typography>
              </Grid2>
            </Grid2>
            <Grid2
              sx={{ display: "flex", flexDirection: "column", gap: "4px" }}
            >
              <Typography
                variant="p"
                fontWeight="400"
                fontSize="14px"
                lineHeight="24px"
                color="#717171"
              >
                Verified Email Address
              </Typography>
              <TextField
                placeholder="email"
                size="small"
                required
                type="email"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                padding="10px 16px 10px 16px"
                border="1px solid #D9D9D9"
                sx={{
                  height: "42px", // Adjust this value as needed
                }}
              ></TextField>
            </Grid2>
            <Grid2
              sx={{ display: "flex", flexDirection: "column", gap: "26px" }}
            >
              <TextField
                placeholder="Password"
                size="small"
                required
                name="password"
                type={showPassword ? "text" : "password"}
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                InputProps={{
                  endAdornment: (
                    <InputAdornment position="end">
                      <IconButton
                        aria-label="toggle password visibility"
                        onClick={handleClickShowPassword}
                        onMouseDown={handleMouseDownPassword}
                        edge="end"
                      >
                        {showPassword ? <VisibilityOff /> : <Visibility />}
                      </IconButton>
                    </InputAdornment>
                  ),
                }}
                sx={{
                  height: "42px", // Adjust this value as needed
                }}
              ></TextField>
              <TextField
                placeholder="Re-Password"
                size="small"
                name="re-password"
                required
                value={confirmPassword} // Fixed value here
                onChange={(e) => setConfirmPassword(e.target.value)}
                type={showConfirmPassword ? "text" : "password"}
                InputProps={{
                  endAdornment: (
                    <InputAdornment position="end">
                      <IconButton
                        aria-label="toggle password visibility"
                        onClick={handleClickShowConfirmPassword}
                        onMouseDown={handleMouseDownConfirmPassword}
                        edge="end"
                      >
                        {showConfirmPassword ? (
                          <VisibilityOff />
                        ) : (
                          <Visibility />
                        )}
                      </IconButton>
                    </InputAdornment>
                  ),
                }}
                sx={{
                  height: "42px",
                }}
              ></TextField>
            </Grid2>
            <Grid2
              sx={{
                display: "flex",
                flexDirection: "row",
                alignItems: "center",
                gap: "2px",
                marginTop: "-16px",
                marginLeft: "-10px",
              }}
            >
              <Radio
                value="agree"
                required
                name="terms-radio"
                checked={isTermsAccepted}
                onChange={(e) => setIsTermsAccepted(e.target.checked)}
                sx={{
                  color: "#3CB457",
                  "&.Mui-checked": {
                    color: "#4FA874",
                  },
                }}
              />
              <Typography variant="p" fontWeight="400" fontSize="18px">
                I agree to the{" "}
              </Typography>
              <Typography
                variant="p"
                fontWeight="500"
                fontSize="18px"
                color="#3CB457"
              >
                Terms and Conditions.
              </Typography>
            </Grid2>
            <Grid2>
              <Button
                onClick={() => navigate("/create-account-successfully")}
                disabled={!isFormValid()}
                sx={{
                  width: "100%",
                  fontSize: "16px",
                  borderRadius: "32px",
                  justifyContent: "center",
                  alignItems: "center",
                  fontWeight: "600",
                  lineHeight: "12px",
                  padding: "20px 62px 20px 62px",
                  backgroundColor: "#E7E7E7",
                  // color: "#838383",
                  height: "42px",
                  textTransform: "capitalize",
                  background: isFormValid()
                    ? "linear-gradient(102deg, #369d9c 0%, #28814d 100%)"
                    : "linear-gradient(102deg, #e7e7e7 0%, #e7e7e7 100%)",
                  color: isFormValid ? "#ffffff" : "#838383",
                  border: isFormValid
                    ? "1px solid rgba(217, 217, 217, 0.4)"
                    : "none",
                  cursor: isFormValid ? "pointer" : "not-allowed",
                  "&:hover": {
                    background: isFormValid
                      ? "linear-gradient(102deg, #28814d 0%, #369d9c 100%)"
                      : "linear-gradient(102deg, #e7e7e7 0%, #e7e7e7 100%)",
                  },
                }}
              >
                Create account
              </Button>
            </Grid2>
          </Paper>
        </Grid2>
      </Wrapper>
    </div>
  );
}

export default AccountCreationIntro;

 
// Display uploaded image or default profile
 
// Ensure relative positioning to allow absolute child positioning
 
 const paperStyle = {
    padding: "2.45rem 3.5375rem",
    height: "440px",
    width: "430px",
    border: "1px solid rgba(217, 217, 217, 0.4)",
    // border: 1px solid rgba(217, 217, 217, 0.4);
    borderRadius: "28px",
    // boxShadow: "0px 50px 50px -38px rgba(89, 132, 131, 0.65)",
    // box-shadow: 0px 50px 50px -38px rgba(89, 132, 131, 0.65);
    display: "flex",
    flexDirection: "column",
    gap: "32px",
  };
 
 <div
          style={{
            width: "80%",
            height: "16vh",
            borderRadius: "50%",
            margin: "0 auto",
            position: "absolute",
            bottom: "-20px",
            left: "10%",
            background: "#598483",
            filter: "blur(20px)",
            opacity: 0.8,
            zIndex: -1,
          }}
        ></div>
 

      <Grid2 container justifyContent="center">
 

      <Grid2 container justifyContent="center">
 

    position:"reletive"
 

  // border: 1px solid var(--stroke-21, rgba(217, 217, 217, 0.4));
  // background: #fff;
  // box-shadow: 0px 50px 50px -38px rgba(89, 132, 131, 0.65);
 
1px solid rgba(217, 217, 217, 0.4)
 

  MenuItem,
 

  Box,
 

  MenuItem,
 

  Grid2,
 

  Box,
 

  DialogTitle,
 

  DialogActions,
 

import down_arrow from "../../../../assets/images/down_arrow.svg";
import trash_logo from "../../../../assets/images/TrashS.svg";
 

import ProsessEmissonVenting from "./ProsessEmissonVenting";
 

  // Initialize fields with one empty row
  const [fields, setFields] = useState([{ fuel: "", quantity: "", unit: "" }]);
  const handleChange = (index, event) => {
    const { name, value } = event.target;
    const updatedFields = [...fields];
    updatedFields[index][name] = value;
    setFields(updatedFields);

    // Check if the current row is complete
    const isRowComplete =
      updatedFields[index].fuel &&
      updatedFields[index].quantity &&
      updatedFields[index].unit;

    // If the current row is complete and it’s the last row, add a new row
    if (isRowComplete && index === fields.length - 1) {
      setFields([...updatedFields, { fuel: "", quantity: "", unit: "" }]);
    }
  };

  const handleDelete = (index) => {
    const updatedFields = fields.filter((_, i) => i !== index);

    // Add a new empty row if there are no rows left
    if (updatedFields.length === 0) {
      updatedFields.push({ fuel: "", quantity: "", unit: "" });
    }

    setFields(updatedFields);
  };
 

            {/* <Grid2
              container
              spacing={2}
              sx={{
                border:
                  "1px solid var(--stroke-21, rgba(217, 217, 217, 0.40));",
                flexDirection: "column",
                display: "flex",
                padding: "18px",
                borderRadius: "8px",
              }}
            >
              {fields.map((field, index) => (
                <Grid2 item xs={12} key={index}>
                  <Box
                    sx={{
                      display: "flex",
                      alignItems: "flex-start",
                      gap: "20px",
                      flexWrap: "wrap",
                    }}
                  >
                    <Box
                      sx={{
                        display: "flex",
                        flexDirection: "column",
                        gap: "4px",
                        alignItems: "flex-start",
                      }}
                    >
                      <Typography
                        variant="body2"
                        fontSize="12px"
                        fontWeight="400"
                        lineHeight="19.6px"
                      >
                        Type of Process Emission
                      </Typography>
                      <TextField
                        select
                        name="fuel"
                        value={field.fuel}
                        onChange={(e) => handleChange(index, e)}
                        sx={{
                          width: "252px",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          position: "reletive",
                          "& .MuiSelect-icon": {
                            display: "none",
                          },
                          "& .MuiInputBase-input": {
                            padding: "10px 14px",
                            height: "8px",
                          },
                        }}
                        SelectProps={{
                          displayEmpty: true,
                        }}
                      >
                        <MenuItem value="" disabled>
                          <Grid2
                            flexDirection="row"
                            display="flex"
                            justifyContent="space-between"
                            alignItems="center"
                          >
                            <Typography
                              fontSize="13px"
                              fontWeight="500"
                              lineHeight="22.4px"
                              color="#B0B0B0"
                            >
                              Waste Gas Disposal
                            </Typography>
                            <img
                              src={down_arrow}
                              width="12px"
                              height="7px"
                              alt="Logo"
                              style={{
                                position: "absolute",
                                marginLeft: "210px",
                              }}
                            />
                          </Grid2>
                        </MenuItem>
                        <MenuItem value="Fuel">Process and Vented</MenuItem>
                        <MenuItem value="Fuel2">Fugitive</MenuItem>
                        <MenuItem value="Fuel3">Waste Gas Disposal</MenuItem>
                      </TextField>
                    </Box>

                    {field.fuel && (
                      <>
                        <Box
                          sx={{
                            display: "flex",
                            flexDirection: "column",
                            gap: "4px",
                            alignItems: "flex-start",
                          }}
                        >
                          <Typography
                            variant="body2"
                            fontSize="12px"
                            fontWeight="400"
                            lineHeight="19.6px"
                          >
                            Category of Waste gas disposal
                          </Typography>
                          <TextField
                            name="quantity"
                            value={field.quantity}
                            placeholder="Quantity"
                            onChange={(e) => handleChange(index, e)}
                            sx={{
                              width: "252px",
                              position: "relative",
                              borderRadius: "5px",
                              border: "1px solid #D9D9D966",
                              "& .MuiInputBase-input": {
                                padding: "10px 14px",
                                height: "auto",
                              },
                            }}
                          />
                        </Box>

                        <Box
                          sx={{
                            display: "flex",
                            flexDirection: "column",
                            gap: "4px",
                            alignItems: "flex-start",
                          }}
                        >
                          <Typography
                            variant="body2"
                            fontSize="12px"
                            fontWeight="400"
                            lineHeight="19.6px"
                          >
                            Category for Flaring
                          </Typography>
                          <TextField
                            select
                            name="unit"
                            value={field.unit}
                            onChange={(e) => handleChange(index, e)}
                            sx={{
                              width: "252px",
                              borderRadius: "5px",
                              border: "1px solid #D9D9D966",
                              "& .MuiSelect-icon": {
                                display: "none",
                              },
                              "& .MuiInputBase-input": {
                                padding: "10px 14px 10px 14px",
                                height: "8px",
                              },
                            }}
                            SelectProps={{
                              displayEmpty: true,
                            }}
                          >
                            <MenuItem value="" disabled>
                              <Grid2
                                flexDirection="row"
                                display="flex"
                                justifyContent="space-between"
                                alignItems="center"
                              >
                                <Typography
                                  fontSize="13px"
                                  fontWeight="500"
                                  lineHeight="22.4px"
                                  color="#B0B0B0"
                                >
                                  Flaring
                                </Typography>
                                <img
                                  src={down_arrow}
                                  width="12px"
                                  height="7px"
                                  alt="Logo"
                                  style={{
                                    position: "absolute",
                                    marginLeft: "210px",
                                  }}
                                />
                              </Grid2>
                            </MenuItem>
                            <MenuItem value="Unit1">Flaring</MenuItem>
                            <MenuItem value="Unit1">
                              Sweet Gas Processing
                            </MenuItem>
                            <MenuItem value="Unit1">
                              Conventional Oil Production
                            </MenuItem>
                          </TextField>
                        </Box>
                      </>
                    )}
                    {field.quantity || field.unit ? (
                      <Box
                        sx={{
                          display: "flex",
                          alignItems: "center",
                          justifyContent: "center",
                          flexDirection: "column",
                          gap: "8px",
                          cursor: "pointer",
                        }}
                      >
                        <img
                          onClick={() => handleDelete(index)}
                          src={trash_logo}
                          alt="Delete"
                          style={{
                            width: "20px",
                            height: "55px",
                            marginTop: "6px",
                            marginRight: "15px",
                          }}
                        />
                      </Box>
                    ) : null}
                  </Box>
                </Grid2>
              ))}

              <Grid2
                sx={{
                  display: "flex",
                  flexDirection: "column",
                  gap: "4px",
                  alignItems: "flex-start",
                }}
              >
                <Typography
                  variant="body2"
                  fontSize="12px"
                  fontWeight="400"
                  lineHeight="19.6px"
                >
                  Quantity of gas production (m3)
                </Typography>
                <TextField
                  placeholder="Quantity of Gas"
                  type="number"
                  sx={{
                    width: "252px",
                    borderRadius: "5px",
                    border: "1px solid #D9D9D966",
                    "& .MuiInputBase-input": {
                      padding: "10px 14px",
                      height: "auto",
                    },
                  }}
                ></TextField>
              </Grid2>
            </Grid2> */}
 

  DialogTitle,
  DialogContent,
  DialogActions,
  Button,
 

import React, { useState } from "react";
 

import emisson_logo from "../../../../assets/images/emisson_logo.svg"
 

import x_logo from "../../../../assets/images/X_logo.svg"
import ProsessEmissonVenting from "./ProsessEmissonVenting";
import Gas2PopupEmission from "./Gas2PopupEmission";
 

import x_logo from from '../../../../'
 

import x_logo from "../../../../assets/images/";
 

import emisson_logo from "../../../../assets/images/";
 

import trash_logo from "../../../../assets/images/";
 

import down_arrow from "../../../../assets/images/";
 
const [gas2Fields, setGas2Fields] = useState([
    { fuel: "", quantity: "", unit: "" },
  ]);
 
  const [fields, setFields] = useState([{ fuel: "", quantity: "", unit: "" }]);

 

  const handleGas2Change = (index, event) => {
    const newFields = [...gas2Fields];
    newFields[index][event.target.name] = event.target.value;
    setGas2Fields(newFields);
  };
  const handleDeleteGas2 = (index) => {
    const newFields = gas2Fields.filter((_, i) => i !== index);
    setGas2Fields(newFields);
  };

 

            {/* <Grid2
              container
              spacing={2}
              sx={{
                border:
                  "1px solid var(--stroke-21, rgba(217, 217, 217, 0.40));",
                flexDirection: "column",
                display: "flex",
                padding: "18px",
                borderRadius: "8px",
              }}
            >
              {gas2Fields.map((field, index) => (
                <Grid2 item xs={12} key={index}>
                  <Box
                    sx={{
                      display: "flex",
                      alignItems: "flex-start",
                      gap: "20px",
                      flexWrap: "wrap",
                    }}
                  >
                    <Box
                      sx={{
                        display: "flex",
                        flexDirection: "column",
                        gap: "4px",
                        alignItems: "flex-start",
                      }}
                    >
                      <Typography
                        variant="body2"
                        fontSize="12px"
                        fontWeight="400"
                        lineHeight="19.6px"
                      >
                        Type of Process Emission
                      </Typography>
                      <TextField
                        select
                        name="fuel"
                        value={field.fuel}
                        onChange={(e) => handleGas2Change(index, e)}
                        sx={{
                          width: "252px",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          position: "relative",
                          "& .MuiSelect-icon": {
                            display: "none",
                          },
                          "& .MuiInputBase-input": {
                            padding: "10px 14px",
                            height: "8px",
                          },
                        }}
                        SelectProps={{
                          displayEmpty: true,
                        }}
                      >
                        <MenuItem value="" disabled>
                          <Grid2
                            flexDirection="row"
                            display="flex"
                            justifyContent="space-between"
                            alignItems="center"
                          >
                            <Typography
                              fontSize="13px"
                              fontWeight="500"
                              lineHeight="22.4px"
                              color="#B0B0B0"
                            >
                              Waste Gas Disposal
                            </Typography>
                            <img
                              src={down_arrow}
                              width="12px"
                              height="7px"
                              alt="Logo"
                              style={{
                                position: "absolute",
                                marginLeft: "210px",
                              }}
                            />
                          </Grid2>
                        </MenuItem>
                        <MenuItem value="Fuel">Process and Vented</MenuItem>
                        <MenuItem value="Fuel2">Fugitive</MenuItem>
                        <MenuItem value="Fuel3">Waste Gas Disposal</MenuItem>
                      </TextField>
                    </Box>

                    {field.fuel && (
                      <>
                        <Box
                          sx={{
                            display: "flex",
                            flexDirection: "column",
                            gap: "4px",
                            alignItems: "flex-start",
                          }}
                        >
                          <Typography
                            variant="body2"
                            fontSize="12px"
                            fontWeight="400"
                            lineHeight="19.6px"
                          >
                            Category of Waste gas disposal
                          </Typography>
                          <TextField
                            name="quantity"
                            value={field.quantity}
                            placeholder="Quantity"
                            onChange={(e) => handleGas2Change(index, e)}
                            sx={{
                              width: "252px",
                              borderRadius: "5px",
                              border: "1px solid #D9D9D966",
                              position: "reletive",
                              "& .MuiInputBase-input": {
                                padding: "10px 14px",
                                height: "auto",
                              },
                            }}
                          />
                        </Box>

                        <Box
                          sx={{
                            display: "flex",
                            flexDirection: "column",
                            gap: "4px",
                            alignItems: "flex-start",
                          }}
                        >
                          <Typography
                            variant="body2"
                            fontSize="12px"
                            fontWeight="400"
                            lineHeight="19.6px"
                          >
                            Category for Flaring
                          </Typography>
                          <TextField
                            select
                            name="unit"
                            value={field.unit}
                            onChange={(e) => handleGas2Change(index, e)}
                            sx={{
                              width: "252px",
                              borderRadius: "5px",
                              border: "1px solid #D9D9D966",
                              "& .MuiSelect-icon": {
                                display: "none",
                              },
                              "& .MuiInputBase-input": {
                                padding: "10px 14px 10px 14px",
                                height: "8px",
                              },
                            }}
                            SelectProps={{
                              displayEmpty: true,
                            }}
                          >
                            <MenuItem value="" disabled>
                              <Grid2
                                flexDirection="row"
                                display="flex"
                                justifyContent="space-between"
                                alignItems="center"
                              >
                                <Typography
                                  fontSize="13px"
                                  fontWeight="500"
                                  lineHeight="22.4px"
                                  color="#B0B0B0"
                                >
                                  Flaring
                                </Typography>
                                <img
                                  src={down_arrow}
                                  width="12px"
                                  height="7px"
                                  alt="Logo"
                                  style={{
                                    position: "absolute",
                                    marginLeft: "210px",
                                  }}
                                />
                              </Grid2>
                            </MenuItem>
                            <MenuItem value="Unit1">Flaring</MenuItem>
                            <MenuItem value="Unit2">
                              Sweet Gas Processing
                            </MenuItem>
                            <MenuItem value="Unit3">
                              Conventional Oil Production
                            </MenuItem>
                          </TextField>
                        </Box>
                      </>
                    )}
                    {field.quantity || field.unit ? (
                      <Box
                        sx={{
                          display: "flex",
                          alignItems: "center",
                          justifyContent: "center",
                          flexDirection: "column",
                          gap: "8px",
                          cursor: "pointer",
                        }}
                      >
                        <img
                          onClick={() => handleDeleteGas2(index)}
                          src={trash_logo}
                          alt="Delete"
                          style={{
                            width: "20px",
                            height: "55px",
                            marginTop: "6px",
                            marginRight: "15px",
                          }}
                        />
                      </Box>
                    ) : null}
                  </Box>
                </Grid2>
              ))}

              <Grid2
                sx={{
                  display: "flex",
                  flexDirection: "column",
                  gap: "4px",
                  alignItems: "flex-start",
                }}
              >
                <Typography
                  variant="body2"
                  fontSize="12px"
                  fontWeight="400"
                  lineHeight="19.6px"
                >
                  Quantity of gas production (m3)
                </Typography>
                <TextField
                  placeholder="Quantity of Gas"
                  type="number"
                  sx={{
                    width: "252px",
                    borderRadius: "5px",
                    border: "1px solid #D9D9D966",
                    "& .MuiInputBase-input": {
                      padding: "10px 14px",
                      height: "auto",
                    },
                  }}
                />
              </Grid2>
            </Grid2> */}
 

import emisson_logo from "../../../../assets/";
 

import trash_logo from "../../../../assets/";
 

import React, { useState } from "react";
 
 const handleGas2Change = (index, event) => {
    const newFields = [...gas2Fields];
    newFields[index][event.target.name] = event.target.value;
    setGas2Fields(newFields);
  };
  const handleDeleteGas2 = (index) => {
    const newFields = gas2Fields.filter((_, i) => i !== index);
    setGas2Fields(newFields);
  };
 

  const [gas2Fields, setGas2Fields] = useState([
    { fuel: "", quantity: "", unit: "" },
  ]);
 
"../../../../assets/images/X_logo.svg
 
../../../../assets/images/emisson_logo.svg
 
../../../../assets/images/TrashS.svg
 
../../../../assets/images/down_arrow.svg
 

    border: 1px solid rgba(217, 217, 217, 0.4);
 
border: "1px solid rgba(217, 217, 217, 0.4)",
 

                sx={{alignItems:"center"}}
 
Grid
 
import React, { useState } from "react";
import {
  Avatar,
  Button,
  Grid,
  Paper,
  TextField,
  Typography,
} from "@mui/material";
import Wrapper from "../Wrapper/Wrapper";
import upload from "../../assets/images/Upload.svg";
import logo from "../../assets/images/ge3s_logo.png";
import profile from "../../assets/images/profile.svg"; // Ensure this path is correct
import { useNavigate } from "react-router-dom";

function AccountCreationHeader() {
  // State to store the uploaded image URL
  const [uploadedImage, setUploadedImage] = useState(null);
  const [name, setName] = useState("");
  const navigate = useNavigate();

  // Handles image upload and sets the uploaded image URL to display in Avatar
  const handleButtonClick = () => {
    const fileInput = document.createElement("input");
    fileInput.type = "file";
    fileInput.accept = "image/*"; // Accept only image files
    fileInput.onchange = (event) => {
      const file = event.target.files[0];
      if (file) {
        const imageUrl = URL.createObjectURL(file); // Create URL for the selected image
        setUploadedImage(imageUrl); // Set the image URL to display in Avatar
        alert("File selected: " + file.name);
      }
    };
    fileInput.click();
  };

  // Input condition check
  const isFormValid = name.trim().length >= 5;

  const paperStyle = {
    padding: "2.45rem 3.5375rem",
    height: "440px",
    width: "430px",
    border: "1px solid rgba(217, 217, 217, 0.4)",
    borderRadius: "28px",
    boxShadow: "6px 89px 56px -38px rgba(89, 132, 131, 0.65)",
    display: "flex",
    flexDirection: "column",
    gap: "32px",
  };

  return (
    <Wrapper>
      <Grid container justifyContent="center">
        <Paper style={paperStyle}>
          {/* Header Grid */}
          <Grid
            align="center"
            sx={{ display: "flex", flexDirection: "column", gap: "16px" }}
          >
            <Grid item>
              <Avatar src={logo} style={{ height: "55px", width: "58px" }} />
            </Grid>
            <Grid item>
              <Typography
                variant="h2"
                style={{
                  fontSize: "1.5rem",
                  fontWeight: "600",
                  lineHeight: "3rem",
                  width: "380px",
                  height: "48px",
                  color: "rgba(0, 25, 29, 1)",
                  letterSpacing: "-1",
                  fontFamily: "Inter, sans-serif",
                }}
              >
                Start creating your account
              </Typography>
            </Grid>
          </Grid>
          {/* Profile section grid */}
          <Grid sx={{ display: "flex", flexDirection: "column", gap: "22px" }}>
            <Avatar
              src={uploadedImage || profile} // Display uploaded image or default profile
              style={{ height: "80px", width: "80px", objectFit: "cover" }}
            />
            <Button
              onClick={handleButtonClick}
              style={{
                border: "1px solid rgba(217, 217, 217, 0.4)",
                width: "165px",
                height: "40px",
                gap: "10px",
                display: "flex",
                flexDirection: "row",
                lineHeight: "16.63px",
                justifyContent: "center",
                alignItems: "center",
              }}
            >
              <img src={upload} alt="upload icon" />
              <Typography
                sx={{ textTransform: "capitalize", color: "#717171" }}
              >
                Upload Photo
              </Typography>
            </Button>
            <TextField
              placeholder="Full Name"
              size="small"
              value={name}
              onChange={(e) => setName(e.target.value)}
            ></TextField>
          </Grid2>
          {/* Submit button Grid2 */}
          <Grid2>
            <Button
              onClick={() => navigate("/account-Intro")}
              disabled={!isFormValid}
              sx={{
                width: "100%",
                fontSize: "14px",
                borderRadius: "32px",
                justifyContent: "center",
                alignItems: "center",
                fontWeight: "600",
                lineHeight: "16px",
                height: "40px",
                mt: "10px",
                textTransform: "capitalize",
                background: isFormValid
                  ? "linear-gradient(102deg, #369d9c 0%, #28814d 100%)"
                  : "linear-gradient(102deg, #e7e7e7 0%, #e7e7e7 100%)",
                color: isFormValid ? "#ffffff" : "#838383",
                border: isFormValid
                  ? "1px solid rgba(217, 217, 217, 0.4)"
                  : "none",
                cursor: isFormValid ? "pointer" : "not-allowed",
                "&:hover": {
                  background: isFormValid
                    ? "linear-gradient(102deg, #28814d 0%, #369d9c 100%)"
                    : "linear-gradient(102deg, #e7e7e7 0%, #e7e7e7 100%)",
                },
              }}
            >
              Create account
            </Button>
          </Grid>
        </Paper>
      </Grid>
    </Wrapper>
  );
}

export default AccountCreationHeader;

 
import React, { useState } from "react";
import {
  Avatar,
  Button,
  Grid2,
  Paper,
  TextField,
  Typography,
} from "@mui/material";
import Wrapper from "../Wrapper/Wrapper";
import upload from "../../assets/images/Upload.svg";
import logo from "../../assets/images/ge3s_logo.png";
import profile from "../../assets/images/profile.svg"; // Ensure this path is correct
import { useNavigate } from "react-router-dom";

function AccountCreationHeader() {
  const [name, setName] = useState("");
  const navigate = useNavigate();
  const isFormValid = name.trim().length >= 5;

  // State to store the uploaded image URL
  const [uploadedImage, setUploadedImage] = useState(null);
  const [name, setName] = useState("");
  const navigate = useNavigate();

  // Handles image upload and sets the uploaded image URL to display in Avatar
  const handleButtonClick = () => {
    const fileInput = document.createElement("input");
    fileInput.type = "file";
    fileInput.accept = "image/*"; // Accept only image files
    fileInput.onchange = (event) => {
      const file = event.target.files[0];
      if (file) {
        const imageUrl = URL.createObjectURL(file); // Create URL for the selected image
        setUploadedImage(imageUrl); // Set the image URL to display in Avatar
        alert("File selected: " + file.name);
      }
    };
    fileInput.click();
  };

  // Input condition check
  const isFormValid = name.trim().length >= 5;

  const paperStyle = {
    padding: "2.45rem 3.5375rem",
    height: "440px",
    width: "430px",
    border: "1px solid rgba(217, 217, 217, 0.4)",
    borderRadius: "28px",
    boxShadow: "6px 89px 56px -38px rgba(89, 132, 131, 0.65)",
    display: "flex",
    flexDirection: "column",
    gap: "32px",
  };

  return (
    <Wrapper>
      <Grid2 container justifyContent="center">
        <Paper style={paperStyle}>
          {/* Header Grid2 */}
          <Grid2
            align="center"
            sx={{ display: "flex", flexDirection: "column", gap: "16px" }}
          >
            <Grid2 item>
              <Avatar src={logo} style={{ height: "55px", width: "58px" }} />
            </Grid2>
            <Grid2 item>
              <Typography
                variant="h2"
                style={{
                  fontSize: "1.5rem",
                  fontWeight: "600",
                  lineHeight: "3rem",
                  width: "380px",
                  height: "48px",
                  color: "rgba(0, 25, 29, 1)",
                  letterSpacing: "-1",
                  fontFamily: "Inter, sans-serif",
                }}
              >
                Start creating your account
              </Typography>
            </Grid2>
          </Grid2>
          {/* Profile section Grid2 */}
          <Grid2 sx={{ display: "flex", flexDirection: "column", gap: "22px" }}>
            <Avatar
              src={uploadedImage || profile} // Display uploaded image or default profile
              style={{ height: "80px", width: "80px", objectFit: "cover" }}
            />
            <Button
              onClick={handleButtonClick}
              style={{
                border: "1px solid rgba(217, 217, 217, 0.4)",
                width: "165px",
                height: "40px",
                gap: "10px",
                display: "flex",
                flexDirection: "row",
                lineHeight: "16.63px",
                justifyContent: "center",
                alignItems: "center",
              }}
            >
              <img src={upload} alt="upload icon" />
              <Typography
                sx={{ textTransform: "capitalize", color: "#717171" }}
              >
                Upload Photo
              </Typography>
            </Button>
            <TextField
              placeholder="Full Name"
              size="small"
              value={name}
              onChange={(e) => setName(e.target.value)}
            />
          </Grid2>
          {/* Submit button Grid2 */}
          <Grid2>
            <Button
              onClick={() => navigate("/account-Intro")}
              disabled={!isFormValid}
              sx={{
                width: "100%",
                fontSize: "14px",
                borderRadius: "32px",
                justifyContent: "center",
                alignItems: "center",
                fontWeight: "600",
                lineHeight: "16px",
                height: "40px",
                mt: "10px",
                textTransform: "capitalize",
                background: isFormValid
                  ? "linear-gradient(102deg, #369d9c 0%, #28814d 100%)"
                  : "linear-gradient(102deg, #e7e7e7 0%, #e7e7e7 100%)",
                color: isFormValid ? "#ffffff" : "#838383",
                border: isFormValid
                  ? "1px solid rgba(217, 217, 217, 0.4)"
                  : "none",
                cursor: isFormValid ? "pointer" : "not-allowed",
                "&:hover": {
                  background: isFormValid
                    ? "linear-gradient(102deg, #28814d 0%, #369d9c 100%)"
                    : "linear-gradient(102deg, #e7e7e7 0%, #e7e7e7 100%)",
                },
              }}
            >
              Create account
            </Button>
          </Grid2>
        </Paper>
      </Grid2>
    </Wrapper>
  );
}

export default AccountCreationHeader;

 
height: "485px",
    width: "480px",
    border: "1px solid rgba(217, 217, 217, 0.4)",
    borderRadius: "20px",
    boxShadow: "6px 89px 56px -38px rgba(89, 132, 131, 0.65)",
    display: "flex",
    flexDirection: "column",
    padding: "38px 47px 38px 47px",
    gap: "26px",
 
const paperStyle = {
    height: "485px",
    width: "480px",
    border: "1px solid rgba(217, 217, 217, 0.4)",
    borderRadius: "20px",
    boxShadow: "6px 89px 56px -38px rgba(89, 132, 131, 0.65)",
    display: "flex",
    flexDirection: "column",
    padding: "38px 47px 38px 47px",
    gap: "26px",
  };
 
/* Place behind the main content */
 
/* Blur effect */
 
 /* Border opacity */
 
 /* Border color */
 
/* Large border radius */
 
/* Adjust to cover the border area */
 
/* Adjust to cover the border area */
 
/* Adjust to cover the border area */
 
/* Adjust to cover the border area */
 
/* Ensure the pseudo-element doesn’t overflow */
 
/* Center text */
 
/* Center items vertically */
 
 /* Center items horizontally */
 
/* Height */
 
/* Gap between elements */
 
 /* Width */
 
/* Background color */
 
/* .login-container-2 {
  position: relative;
  margin: 15vh auto;
  border-radius: 20px;
  border: 1px solid var(--stroke-21, rgba(217, 217, 217, 0.4));
  background: var(--White, #fff);
  box-shadow: 6px 89px 56px -38px rgba(89, 132, 131, 0.65);
  width: 30vw;
  padding: 35px;
  gap: 24px;
  display: flex;
  flex-direction: column;
  height: auto;
} */
 

  padding: 60px; /* Padding */
 

  border-radius: 16px; /* Maintain the main border-radius */
 
210px; /* Height */
 
.login-container-2 {
  position: relative;
  margin: 15vh auto;
  border-radius: 20px;
  border: 1px solid var(--stroke-21, rgba(217, 217, 217, 0.4));
  background: var(--White, #fff);
  box-shadow: 6px 89px 56px -38px rgba(89, 132, 131, 0.65);
  width: 30vw;
  padding: 35px;
  gap: 24px;
  display: flex;
  flex-direction: column;
  height: auto;
}
 
.login-container-2 {
  position: relative;
  margin: 15vh auto;
  border-radius: 20px;
  border: 1px solid var(--stroke-21, rgba(217, 217, 217, 0.4));
  background: var(--White, #fff);
  box-shadow: 6px 89px 56px -38px rgba(89, 132, 131, 0.65);
  width: 30vw;
  padding: 35px;
  gap: 24px;
  display: flex;
  flex-direction: column;
  height: auto;
}
 
210px; /* Updated height */
 
.login-container-2 {
  position: relative;
  margin: 15vh auto;
  border-radius: 20px;
  border: 1px solid var(--stroke-21, rgba(217, 217, 217, 0.4));
  background: var(--White, #fff);
  box-shadow: 6px 89px 56px -38px rgba(89, 132, 131, 0.65);
  width: 30vw;
  padding: 35px;
  gap: 24px;
  display: flex;
  flex-direction: column;
  height: auto;
}
 
.login-container-2 {
  position: relative;
  margin: 15vh auto;
  border-radius: 20px;
  border: 1px solid var(--stroke-21, rgba(217, 217, 217, 0.4));
  background: var(--White, #fff);
  box-shadow: 6px 89px 56px -38px rgba(89, 132, 131, 0.65);
  width: 30vw;
  padding: 35px;
  gap: 24px;
  display: flex;
  flex-direction: column;
  height: auto;
}
 
 // Centers child elements vertically
 
// Centers child elements horizontally
 
        // Allows for absolutely positioned children relative to this element
 
// Sets a gap of 20px between child elements
 
 // Aligns children elements vertically
 
// Centers text horizontally within the element
 
 // Sets the display to flex for layout
 
// Adds a shadow effect
 
// Rounds the corners of the element with a 16px radius
 
/ Creates a light grey border with 40% opacity
 
// Sets the width of the element to 350px
 
// Ensures the element doesn't exceed the width of its container
 
 // Sets padding of 60px on all sides
 
 // Sets the height of the element to 210px
 
 const paperStyle = {
    height: "210px",
    padding: "60px 60px 60px 60px", // Updated padding
    maxWidth: "100%",
    width: "350px",
    border: "1px solid rgba(217, 217, 217, 0.4)",
    borderRadius: "16px",
    boxShadow: "6px 89px 56px -38px rgba(89, 132, 131, 0.65)",
    display: "flex",
    textAlign: "center",
    flexDirection: "column",
    gap: "20px",
    position: "relative",
    alignItems: "center",
    justifyContent: "center",
  };
 
 // Sets a gap of 32px between flex items
 
 // Aligns flex children vertically in a column
 
 // Sets the display to flex, allowing for flexible box layouts
 
// Applies a shadow effect with specified offsets and color
 
// Rounds the corners of the element with a 28px radius
 
// Creates a light grey border with 40% opacity
 
// Sets the width of the element to 430px
 
  // Sets the height of the element to 440px
 
// Sets top/bottom padding to 2.45rem and left/right padding to 3.5375rem
 
const paperStyle = {
    padding: "2.45rem 3.5375rem",
    height: "440px",
    width: "430px",
    border: "1px solid rgba(217, 217, 217, 0.4)",
    borderRadius: "28px",
    boxShadow: "6px 89px 56px -38px rgba(89, 132, 131, 0.65)",
    display: "flex",
    flexDirection: "column",
    gap: "32px",
  };
 
padding: "2.45rem 3.5375rem",
    height: "440px",
    width: "430px",
    border: "1px solid rgba(217, 217, 217, 0.4)",
    borderRadius: "28px",
    boxShadow: "6px 89px 56px -38px rgba(89, 132, 131, 0.65)",
    display: "flex",
    flexDirection: "column",
    gap: "32px",
 
box-shadow: 
 
6px 89px 56px -38px rgba(89, 132, 131, 0.65)
 

    boxShadow: "6px 89px 56px -38px rgba(89, 132, 131, 0.65)",
 
Grid
 
// import React from "react";
// import {
//   Avatar,
//   Button,
//   Grid2,
//   Paper,
//   TextField,
//   Typography,
// } from "@mui/material";
// import Wrapper from "../Wrapper/Wrapper";
// import upload from "../../assets/images/Upload.svg";
// import logo from "../../assets/images/ge3s_logo.png";
// import profile from "../../assets/images/profile.svg";
// import { useState } from "react";
// import { useNavigate } from "react-router-dom";

// function AccountCreationHeader() {
//   // Opens a file picker and shows the selected file name.
//   const handleButtonClick = () => {
//     const fileInput = document.createElement("input");
//     fileInput.type = "file";
//     fileInput.onchange = (event) => {
//       const file = event.target.files[0];
//       if (file) {
//         alert("File selected: " + file.name);
//       }
//     };
//     fileInput.click();
//   };
//   const [name, setName] = useState("");
//   const navigate = useNavigate();
//   // input condition check
//   const isFormValid = name.trim().length >= 5;

//   const paperStyle = {
//     padding: "2.45rem 3.5375rem",
//     height: "440px", // Roughly 60% of the viewport height (adjust as needed)
//     width: "430px", // Roughly 40% of the viewport width (adjust as needed)
//     border: "1px solid rgba(217, 217, 217, 0.4)",
//     borderRadius: "28px",
//     boxShadow: "6px 89px 56px -38px rgba(89, 132, 131, 0.65)",
//     display: "flex",
//     flexDirection: "column",
//     gap: "32px",
//   };
//   return (
//     <Wrapper>
//       <Grid2>
//         <Paper style={paperStyle}>
//           {/* Header Grid */}
//           <Grid2
//             align="center"
//             sx={{ display: "flex", flexDirection: "column", gap: "16px" }}
//           >
//             <Grid2 item>
//               <Avatar
//                 src={logo}
//                 style={{ height: "55px", width: "58px" }}
//               ></Avatar>
//             </Grid2>
//             <Grid2 item>
//               <Typography
//                 variant="h2"
//                 style={{
//                   fontSize: "1.5rem",
//                   fontWeight: "600",
//                   lineHeight: "3rem",
//                   width: "380px",
//                   height: "48px",
//                   color: "rgba(0, 25, 29, 1)",
//                   letter: "-1",
//                   fontFamily: "Inter, sans-serif",
//                 }}
//               >
//                 Start creating your account
//               </Typography>
//             </Grid2>
//           </Grid2>
//           {/* profile section grid */}
//           <Grid2 sx={{ display: "flex", flexDirection: "column", gap: "22px" }}>
//             <Avatar
//               src={profile}
//               style={{ height: "80px", width: "80px" }}
//             ></Avatar>
//             <Button
//               onClick={handleButtonClick}
//               style={{
//                 border: "1px solid ",
//                 width: "165px",
//                 height: "40px",
//                 gap: "10px",
//                 display: "flex",
//                 flexDirection: "row",
//                 lineHeight: "16.63px",
//                 border: "1px solid rgba(217, 217, 217, 0.4)",
//                 justifyContent: "center",
//                 alignItems: "center",
//               }}
//             >
//               <img src={upload}></img>
//               <Typography
//                 sx={{ textTransform: "capitalize", color: "#717171" }}
//               >
//                 Upload Photo
//               </Typography>
//             </Button>
//             <TextField
//               placeholder="Full Name"
//               size="small"
//               value={name}
//               onChange={(e) => setName(e.target.value)}
//             ></TextField>
//           </Grid2>
//           {/* Submit buttun grid */}
//           <Grid2>
//             <Button
//               onClick={() => navigate("/account-Intro")}
//               disabled={!isFormValid}
//               sx={{
//                 width: "100%",
//                 fontSize: "14px",
//                 borderRadius: "32px",
//                 justifyContent: "center",
//                 alignItems: "center",
//                 fontWeight: "600",
//                 lineHeight: "16px",
//                 height: "40px",
//                 mt: "10px",
//                 textTransform: "capitalize",
//                 background: isFormValid
//                   ? "linear-gradient(102deg, #369d9c 0%, #28814d 100%)"
//                   : "linear-gradient(102deg, #e7e7e7 0%, #e7e7e7 100%)",
//                 color: isFormValid ? "#ffffff" : "#838383",
//                 border: isFormValid
//                   ? "1px solid rgba(217, 217, 217, 0.4)"
//                   : "none",
//                 cursor: isFormValid ? "pointer" : "not-allowed",
//                 "&:hover": {
//                   background: isFormValid
//                     ? "linear-gradient(102deg, #28814d 0%, #369d9c 100%)"
//                     : "linear-gradient(102deg, #e7e7e7 0%, #e7e7e7 100%)",
//                 },
//               }}
//             >
//               Create account
//             </Button>
//           </Grid2>
//         </Paper>
//       </Grid2>
//     </Wrapper>
//   );
// }

// export default AccountCreationHeader;


 

import Profi
 
import React from "react";
import {
  Avatar,
  Button,
  Grid2,
  Paper,
  TextField,
  Typography,
} from "@mui/material";
import Wrapper from "../Wrapper/Wrapper";
import upload from "../../assets/images/Upload.svg";
import logo from "../../assets/images/ge3s_logo.png";
import profile from "../../assets/images/profile.svg";
import { useState } from "react";
import { useNavigate } from "react-router-dom";

function AccountCreationHeader() {
  // Opens a file picker and shows the selected file name.
  const handleButtonClick = () => {
    const fileInput = document.createElement("input");
    fileInput.type = "file";
    fileInput.onchange = (event) => {
      const file = event.target.files[0];
      if (file) {
        alert("File selected: " + file.name);
      }
    };
    fileInput.click();
  };
  const [name, setName] = useState("");
  const navigate = useNavigate();
  // input condition check
  const isFormValid = name.trim().length >= 5;

  const paperStyle = {
    padding: "2.45rem 3.5375rem",
    height: "440px", // Roughly 60% of the viewport height (adjust as needed)
    width: "430px", // Roughly 40% of the viewport width (adjust as needed)
    border: "1px solid rgba(217, 217, 217, 0.4)",
    borderRadius: "28px",
    boxShadow: "6px 89px 56px -38px rgba(89, 132, 131, 0.65)",
    display: "flex",
    flexDirection: "column",
    gap: "32px",
  };
  return (
    <Wrapper>
      <Grid2>
        <Paper style={paperStyle}>
          {/* Header Grid */}
          <Grid2
            align="center"
            sx={{ display: "flex", flexDirection: "column", gap: "16px" }}
          >
            <Grid2 item>
              <Avatar
                src={logo}
                style={{ height: "55px", width: "58px" }}
              ></Avatar>
            </Grid2>
            <Grid2 item>
              <Typography
                variant="h2"
                style={{
                  fontSize: "1.5rem",
                  fontWeight: "600",
                  lineHeight: "3rem",
                  width: "380px",
                  height: "48px",
                  color: "rgba(0, 25, 29, 1)",
                  letter: "-1",
                  fontFamily: "Inter, sans-serif",
                }}
              >
                Start creating your account
              </Typography>
            </Grid2>
          </Grid2>
          {/* profile section grid */}
          <Grid2 sx={{ display: "flex", flexDirection: "column", gap: "22px" }}>
            <Avatar
              src={profile}
              style={{ height: "80px", width: "80px" }}
            ></Avatar>
            <Button
              onClick={handleButtonClick}
              style={{
                border: "1px solid ",
                width: "165px",
                height: "40px",
                gap: "10px",
                display: "flex",
                flexDirection: "row",
                lineHeight: "16.63px",
                border: "1px solid rgba(217, 217, 217, 0.4)",
                justifyContent: "center",
                alignItems: "center",
              }}
            >
              <img src={upload}></img>
              <Typography
                sx={{ textTransform: "capitalize", color: "#717171" }}
              >
                Upload Photo
              </Typography>
            </Button>
            <TextField
              placeholder="Full Name"
              size="small"
              value={name}
              onChange={(e) => setName(e.target.value)}
            ></TextField>
          </Grid2>
          {/* Submit buttun grid */}
          <Grid2>
            <Button
              onClick={() => navigate("/account-Intro")}
              disabled={!isFormValid}
              sx={{
                width: "100%",
                fontSize: "14px",
                borderRadius: "32px",
                justifyContent: "center",
                alignItems: "center",
                fontWeight: "600",
                lineHeight: "16px",
                height: "40px",
                mt: "10px",
                textTransform: "capitalize",
                background: isFormValid
                  ? "linear-gradient(102deg, #369d9c 0%, #28814d 100%)"
                  : "linear-gradient(102deg, #e7e7e7 0%, #e7e7e7 100%)",
                color: isFormValid ? "#ffffff" : "#838383",
                border: isFormValid
                  ? "1px solid rgba(217, 217, 217, 0.4)"
                  : "none",
                cursor: isFormValid ? "pointer" : "not-allowed",
                "&:hover": {
                  background: isFormValid
                    ? "linear-gradient(102deg, #28814d 0%, #369d9c 100%)"
                    : "linear-gradient(102deg, #e7e7e7 0%, #e7e7e7 100%)",
                },
              }}
            >
              Create account
            </Button>
          </Grid2>
        </Paper>
      </Grid2>
    </Wrapper>
  );
}

export default AccountCreationHeader;

 

                        position="reletive"
 

                        position="reletive"
 

                              marginLeft: "18px", // Adjust margin as needed
 

                            left="0"
 
 <Box
                    sx={{
                      display: "flex",
                      flexDirection: "column", // Arrange label and input in a column
                      gap: "4px", // Space between label and input
                      alignItems: "flex-start", // Ensure alignment is consistent
                    }}
                  >
                    <Typography
                      variant="body2"
                      fontSize="12px"
                      fontWeight="400"
                      lineHeight="19.6px"
                    >
                      Fuel Type
                    </Typography>
                    <TextField
                      select
                      name="fuel"
                      value={field.fuel}
                      onChange={(e) => handleChange(index, e)}
                      sx={{
                        width: "332.5px",
                        borderRadius: "5px",
                        border: "1px solid #D9D9D966",
                        "& .MuiSelect-icon": {
                          display: "none",
                        },
                        "& .MuiInputBase-input": {
                          padding: "10px 14px 10px 14px", // Add consistent padding
                          height: "8px",
                        },
                      }}
                      SelectProps={{
                        displayEmpty: true,
                      }}
                    >
                      <MenuItem value="" disabled>
                        <Grid2
                          flexDirection="row"
                          display="flex"
                          justifyContent="space-between"
                          alignItems="center"
                        >
                          <Typography
                            fontSize="13px"
                            fontWeight="500"
                            lineHeight="22.4px"
                            color="#B0B0B0"
                          >
                            Select Type
                          </Typography>
                          <img
                            src={down_arrow}
                            width="12px"
                            height="7px"
                            alt="Logo"
                            style={{
                              marginLeft: "18px", // Adjust margin as needed
                            }}
                          />
                        </Grid2>
                      </MenuItem>
                      <MenuItem value="Fuel">Gasoline/Petrol</MenuItem>
                      <MenuItem value="Fuel2">LPG</MenuItem>
                      <MenuItem value="Fuel3">CNG</MenuItem>
                    </TextField>
                  </Box>
 
 <Box
                    sx={{
                      display: "flex",
                      flexDirection: "column", // Arrange label and input in a column
                      gap: "4px", // Space between label and input
                      alignItems: "flex-start", // Ensure alignment is consistent
                    }}
                  >
                    <Typography
                      variant="body2"
                      fontSize="12px"
                      fontWeight="400"
                      lineHeight="19.6px"
                    >
                      Fuel Type
                    </Typography>
                    <TextField
                      select
                      name="fuel"
                      value={field.fuel}
                      onChange={(e) => handleChange(index, e)}
                      sx={{
                        width: "332.5px",
                        borderRadius: "5px",
                        border: "1px solid #D9D9D966",
                        "& .MuiSelect-icon": {
                          display: "none",
                        },
                        "& .MuiInputBase-input": {
                          padding: "10px 14px 10px 14px", // Add consistent padding
                          height: "8px",
                        },
                      }}
                      SelectProps={{
                        displayEmpty: true,
                      }}
                    >
                      <MenuItem value="" disabled>
                        <Grid2
                          flexDirection="row"
                          display="flex"
                          justifyContent="space-between"
                          alignItems="center"
                        >
                          <Typography
                            fontSize="13px"
                            fontWeight="500"
                            lineHeight="22.4px"
                            color="#B0B0B0"
                          >
                            Select Type
                          </Typography>
                          <img
                            src={down_arrow}
                            width="12px"
                            height="7px"
                            alt="Logo"
                            style={{
                              marginLeft: "20px", // Adjust margin as needed
                            }}
                          />
                        </Grid2>
                      </MenuItem>
                      <MenuItem value="Fuel">Gasoline/Petrol</MenuItem>
                      <MenuItem value="Fuel2">LPG</MenuItem>
                      <MenuItem value="Fuel3">CNG</MenuItem>
                    </TextField>
                  </Box>
 
 <Box
                    sx={{
                      display: "flex",
                      flexDirection: "column", // Arrange label and input in a column
                      gap: "4px", // Space between label and input
                      alignItems: "flex-start", // Ensure alignment is consistent
                    }}
                  >
                    <Typography
                      variant="body2"
                      fontSize="12px"
                      fontWeight="400"
                      lineHeight="19.6px"
                    >
                      Fuel Type
                    </Typography>
                    <TextField
                      select
                      name="fuel"
                      value={field.fuel}
                      onChange={(e) => handleChange(index, e)}
                      sx={{
                        width: "332.5px",
                        borderRadius: "5px",
                        border: "1px solid #D9D9D966",
                        "& .MuiSelect-icon": {
                          display: "none",
                        },
                        "& .MuiInputBase-input": {
                          padding: "10px 14px 10px 14px", // Add consistent padding
                          height: "8px",
                        },
                      }}
                      SelectProps={{
                        displayEmpty: true,
                      }}
                    >
                      <MenuItem value="" disabled>
                        <Grid2
                          flexDirection="row"
                          display="flex"
                          justifyContent="space-between"
                          alignItems="center"
                        >
                          <Typography
                            fontSize="13px"
                            fontWeight="500"
                            lineHeight="22.4px"
                            color="#B0B0B0"
                          >
                            Select Type
                          </Typography>
                          <img
                            src={down_arrow}
                            width="12px"
                            height="7px"
                            alt="Logo"
                            style={{
                              marginLeft: "20px", // Adjust margin as needed
                            }}
                          />
                        </Grid2>
                      </MenuItem>
                      <MenuItem value="Fuel">Gasoline/Petrol</MenuItem>
                      <MenuItem value="Fuel2">LPG</MenuItem>
                      <MenuItem value="Fuel3">CNG</MenuItem>
                    </TextField>
                  </Box>
 
<Box
                    sx={{
                      display: "flex",
                      flexDirection: "column", // Arrange label and input in a column
                      gap: "4px", // Space between label and input
                      alignItems: "flex-start", // Ensure alignment is consistent
                    }}
                  >
                    <Typography
                      variant="body2"
                      fontSize="12px"
                      fontWeight="400"
                      lineHeight="19.6px"
                    >
                      Fuel Type
                    </Typography>
                    <TextField
                      select
                      name="fuel"
                      value={field.fuel}
                      onChange={(e) => handleChange(index, e)}
                      sx={{
                        width: "332.5px",
                        borderRadius: "5px",
                        border: "1px solid #D9D9D966",
                        "& .MuiSelect-icon": {
                          display: "none",
                        },
                        "& .MuiInputBase-input": {
                          padding: "10px 14px 10px 14px", // Add consistent padding
                          height: "8px",
                        },
                      }}
                      SelectProps={{
                        displayEmpty: true,
                      }}
                    >
                      <MenuItem value="" disabled>
                        <Grid2
                          flexDirection="row"
                          display="flex"
                          justifyContent="space-between"
                          alignItems="center"
                        >
                          <Typography
                            fontSize="13px"
                            fontWeight="500"
                            lineHeight="22.4px"
                            color="#B0B0B0"
                          >
                            Select Type
                          </Typography>
                          <img
                            src={down_arrow}
                            width="12px"
                            height="7px"
                            alt="Logo"
                            style={{
                              marginLeft: "8px", // Adjust margin as needed
                            }}
                          />
                        </Grid2>
                      </MenuItem>
                      <MenuItem value="Fuel">Gasoline/Petrol</MenuItem>
                      <MenuItem value="Fuel2">LPG</MenuItem>
                      <MenuItem value="Fuel3">CNG</MenuItem>
                    </TextField>
                  </Box>
 
alignItems: "flex-start", // Ensure alignment is consistent
 
<TextField
                      select
                      name="fuel"
                      value={field.fuel}
                      onChange={(e) => handleChange(index, e)}
                      sx={{
                        width: "332.5px",
                        borderRadius: "5px",
                        border: "1px solid #D9D9D966",
                        "& .MuiSelect-icon": {
                          display: "none",
                        },
                        "& .MuiInputBase-input": {
                          padding: "10px 14px 10px 14px", // Add consistent padding
                          height: "8px",
                        },
                      }}
                      SelectProps={{
                        displayEmpty: true,
                      }}
                    >
                      <MenuItem value="" disabled>
                        <Grid2
                          flexDirection="row"
                          display="flex"
                          justifyContent="space-between"
                          alignItems="center"
                        >
                          <Typography
                            fontSize="13px"
                            fontWeight="500"
                            lineHeight="22.4px"
                            color="#B0B0B0"
                          >
                            Select Type
                          </Typography>
                          <img
                            src={down_arrow}
                            width="12px"
                            height="7px"
                            alt="Logo"
                          />
                        </Grid2>
                      </MenuItem>
                      <MenuItem value="Fuel">Gasoline/Petrol</MenuItem>
                      <MenuItem value="Fuel2">LPG</MenuItem>
                      <MenuItem value="Fuel3">CNG</MenuItem>
                    </TextField>
 
<TextField
                      select
                      name="fuel"
                      value={field.fuel}
                      onChange={(e) => handleChange(index, e)}
                      sx={{
                        width: "332.5px",
                        borderRadius: "5px",
                        border: "1px solid #D9D9D966",
                        "& .MuiSelect-icon": {
                          display: "none",
                        },
                        "& .MuiInputBase-input": {
                          padding: "10px 14px 10px 14px", // Add consistent padding
                          height: "8px",
                        },
                      }}
                      SelectProps={{
                        displayEmpty: true,
                      }}
                    >
                      <MenuItem value="" disabled>
                        <Grid2
                          flexDirection="row"
                          display="flex"
                          justifyContent="space-between"
                          alignItems="center"
                        >
                          <Typography
                            fontSize="13px"
                            fontWeight="500"
                            lineHeight="22.4px"
                            color="#B0B0B0"
                          >
                            Select Type
                          </Typography>
                          <img
                            src={down_arrow}
                            width="12px"
                            height="7px"
                            alt="Logo"
                          />
                        </Grid2>
                      </MenuItem>
                      <MenuItem value="Fuel">Gasoline/Petrol</MenuItem>
                      <MenuItem value="Fuel2">LPG</MenuItem>
                      <MenuItem value="Fuel3">CNG</MenuItem>
                    </TextField>
 
<TextField
                      select
                      name="fuel"
                      value={field.fuel}
                      onChange={(e) => handleChange(index, e)}
                      sx={{
                        width: "332.5px",
                        borderRadius: "5px",
                        border: "1px solid #D9D9D966",
                        "& .MuiSelect-icon": {
                          display: "none",
                        },
                        "& .MuiInputBase-input": {
                          padding: "10px 14px 10px 14px", // Add consistent padding
                          height: "8px",
                        },
                      }}
                      SelectProps={{
                        displayEmpty: true,
                      }}
                    >
                      <MenuItem value="" disabled>
                        <Grid2
                          flexDirection="row"
                          display="flex"
                          justifyContent="space-between"
                          alignItems="center"
                        >
                          <Typography
                            fontSize="13px"
                            fontWeight="500"
                            lineHeight="22.4px"
                            color="#B0B0B0"
                          >
                            Select Type
                          </Typography>
                          <img
                            src={down_arrow}
                            width="12px"
                            height="7px"
                            alt="Logo"
                          />
                        </Grid2>
                      </MenuItem>
                      <MenuItem value="Fuel">Gasoline/Petrol</MenuItem>
                      <MenuItem value="Fuel2">LPG</MenuItem>
                      <MenuItem value="Fuel3">CNG</MenuItem>
                    </TextField>
 

                            marginLeft="20px"
 

            <Grid2
              container
              spacing={2}
              sx={{
                border:
                  "1px solid var(--stroke-21, rgba(217, 217, 217, 0.40));",
                flexDirection: "column",
                display: "flex",
                padding: "18px",
                borderRadius: "8px",
              }}
            >
              {fields.map((field, index) => (
                <Grid2 item xs={12} key={index}>
                  <Box
                    sx={{
                      display: "flex",
                      alignItems: "flex-start",
                      gap: "20px",
                      flexWrap: "wrap",
                    }}
                  >
                    <Box
                      sx={{
                        display: "flex",
                        flexDirection: "column",
                        gap: "4px",
                        alignItems: "flex-start",
                      }}
                    >
                      <Typography
                        variant="body2"
                        fontSize="12px"
                        fontWeight="400"
                        lineHeight="19.6px"
                      >
                        Type of Process Emission
                      </Typography>
                      <TextField
                        select
                        name="fuel"
                        value={field.fuel}
                        onChange={(e) => handleChange(index, e)}
                        sx={{
                          width: "252px",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          "& .MuiSelect-icon": {
                            display: "none",
                          },
                          "& .MuiInputBase-input": {
                            padding: "10px 14px",
                            height: "8px",
                          },
                        }}
                        SelectProps={{
                          displayEmpty: true,
                        }}
                      >
                        <MenuItem value="" disabled>
                          <Grid2
                            flexDirection="row"
                            display="flex"
                            justifyContent="space-between"
                            alignItems="center"
                          >
                            <Typography
                              fontSize="13px"
                              fontWeight="500"
                              lineHeight="22.4px"
                              color="#B0B0B0"
                            >
                              Waste Gas Disposal
                            </Typography>
                            <img
                              src={down_arrow}
                              width="12px"
                              height="7px"
                              alt="Logo"
                            />
                          </Grid2>
                        </MenuItem>
                        <MenuItem value="Fuel">Process and Vented</MenuItem>
                        <MenuItem value="Fuel2">Fugitive</MenuItem>
                        <MenuItem value="Fuel3">Waste Gas Disposal</MenuItem>
                      </TextField>
                    </Box>

                    {field.fuel && (
                      <>
                        <Box
                          sx={{
                            display: "flex",
                            flexDirection: "column",
                            gap: "4px",
                            alignItems: "flex-start",
                          }}
                        >
                          <Typography
                            variant="body2"
                            fontSize="12px"
                            fontWeight="400"
                            lineHeight="19.6px"
                          >
                            Category of Waste gas disposal
                          </Typography>
                          <TextField
                            name="quantity"
                            value={field.quantity}
                            placeholder="Quantity"
                            onChange={(e) => handleChange(index, e)}
                            sx={{
                              width: "252px",
                              borderRadius: "5px",
                              border: "1px solid #D9D9D966",
                              "& .MuiInputBase-input": {
                                padding: "10px 14px",
                                height: "auto",
                              },
                            }}
                          />
                        </Box>

                        <Box
                          sx={{
                            display: "flex",
                            flexDirection: "column",
                            gap: "4px",
                            alignItems: "flex-start",
                          }}
                        >
                          <Typography
                            variant="body2"
                            fontSize="12px"
                            fontWeight="400"
                            lineHeight="19.6px"
                          >
                            Category for Flaring
                          </Typography>
                          <TextField
                            select
                            name="unit"
                            value={field.unit}
                            onChange={(e) => handleChange(index, e)}
                            sx={{
                              width: "252px",
                              borderRadius: "5px",
                              border: "1px solid #D9D9D966",
                              "& .MuiSelect-icon": {
                                display: "none",
                              },
                              "& .MuiInputBase-input": {
                                padding: "10px 14px 10px 14px",
                                height: "8px",
                              },
                            }}
                            SelectProps={{
                              displayEmpty: true,
                            }}
                          >
                            <MenuItem value="" disabled>
                              <Grid2
                                flexDirection="row"
                                display="flex"
                                justifyContent="space-between"
                                alignItems="center"
                              >
                                <Typography
                                  fontSize="13px"
                                  fontWeight="500"
                                  lineHeight="22.4px"
                                  color="#B0B0B0"
                                >
                                  Flaring
                                </Typography>
                                <img
                                  src={down_arrow}
                                  width="12px"
                                  height="7px"
                                  alt="Logo"
                                />
                              </Grid2>
                            </MenuItem>
                            <MenuItem value="Unit1">Flaring</MenuItem>
                            <MenuItem value="Unit2">
                              Sweet Gas Processing
                            </MenuItem>
                            <MenuItem value="Unit3">
                              Conventional Oil Production
                            </MenuItem>
                          </TextField>
                        </Box>
                      </>
                    )}
                    {field.quantity || field.unit ? (
                      <Box
                        sx={{
                          display: "flex",
                          alignItems: "center",
                          justifyContent: "center",
                          flexDirection: "column",
                          gap: "8px",
                          cursor: "pointer",
                        }}
                      >
                        <img
                          onClick={() => handleDelete(index)}
                          src={trash_logo}
                          alt="Delete"
                          style={{
                            width: "20px",
                            height: "55px",
                            marginTop: "6px",
                            marginRight: "15px",
                          }}
                        />
                      </Box>
                    ) : null}
                  </Box>
                </Grid2>
              ))}

              <Grid2
                sx={{
                  display: "flex",
                  flexDirection: "column",
                  gap: "4px",
                  alignItems: "flex-start",
                }}
              >
                <Typography
                  variant="body2"
                  fontSize="12px"
                  fontWeight="400"
                  lineHeight="19.6px"
                >
                  Quantity of gas production (m3)
                </Typography>
                <TextField
                  placeholder="Quantity of Gas"
                  type="number"
                  sx={{
                    width: "252px",
                    borderRadius: "5px",
                    border: "1px solid #D9D9D966",
                    "& .MuiInputBase-input": {
                      padding: "10px 14px",
                      height: "auto",
                    },
                  }}
                />
              </Grid2>
            </Grid2>
 
<Grid2
              container
              spacing={2}
              sx={{
                border:
                  "1px solid var(--stroke-21, rgba(217, 217, 217, 0.40));",
                flexDirection: "column",
                display: "flex",
                padding: "18px",
                borderRadius: "8px",
              }}
            >
              {fields.map((field, index) => (
                <Grid2 item xs={12} key={index}>
                  <Box
                    sx={{
                      display: "flex",
                      alignItems: "flex-start",
                      gap: "20px",
                      flexWrap: "wrap",
                    }}
                  >
                    <Box
                      sx={{
                        display: "flex",
                        flexDirection: "column",
                        gap: "4px",
                        alignItems: "flex-start",
                      }}
                    >
                      <Typography
                        variant="body2"
                        fontSize="12px"
                        fontWeight="400"
                        lineHeight="19.6px"
                      >
                        Type of Process Emission
                      </Typography>
                      <TextField
                        select
                        name="fuel"
                        value={field.fuel}
                        onChange={(e) => handleChange(index, e)}
                        sx={{
                          width: "252px",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          "& .MuiSelect-icon": {
                            display: "none",
                          },
                          "& .MuiInputBase-input": {
                            padding: "10px 14px",
                            height: "8px",
                          },
                        }}
                        SelectProps={{
                          displayEmpty: true,
                        }}
                      >
                        <MenuItem value="" disabled>
                          <Grid2
                            flexDirection="row"
                            display="flex"
                            justifyContent="space-between"
                            alignItems="center"
                          >
                            <Typography
                              fontSize="13px"
                              fontWeight="500"
                              lineHeight="22.4px"
                              color="#B0B0B0"
                            >
                              Waste Gas Disposal
                            </Typography>
                            <img
                              src={down_arrow}
                              width="12px"
                              height="7px"
                              alt="Logo"
                            />
                          </Grid2>
                        </MenuItem>
                        <MenuItem value="Fuel">Process and Vented</MenuItem>
                        <MenuItem value="Fuel2">Fugitive</MenuItem>
                        <MenuItem value="Fuel3">Waste Gas Disposal</MenuItem>
                      </TextField>
                    </Box>

                    {field.fuel && (
                      <>
                        <Box
                          sx={{
                            display: "flex",
                            flexDirection: "column",
                            gap: "4px",
                            alignItems: "flex-start",
                          }}
                        >
                          <Typography
                            variant="body2"
                            fontSize="12px"
                            fontWeight="400"
                            lineHeight="19.6px"
                          >
                            Category of Waste gas disposal
                          </Typography>
                          <TextField
                            name="quantity"
                            value={field.quantity}
                            placeholder="Quantity"
                            onChange={(e) => handleChange(index, e)}
                            sx={{
                              width: "252px",
                              borderRadius: "5px",
                              border: "1px solid #D9D9D966",
                              "& .MuiInputBase-input": {
                                padding: "10px 14px",
                                height: "auto",
                              },
                            }}
                          />
                        </Box>

                        <Box
                          sx={{
                            display: "flex",
                            flexDirection: "column",
                            gap: "4px",
                            alignItems: "flex-start",
                          }}
                        >
                          <Typography
                            variant="body2"
                            fontSize="12px"
                            fontWeight="400"
                            lineHeight="19.6px"
                          >
                            Category for Flaring
                          </Typography>
                          <TextField
                            select
                            name="unit"
                            value={field.unit}
                            onChange={(e) => handleChange(index, e)}
                            sx={{
                              width: "252px",
                              borderRadius: "5px",
                              border: "1px solid #D9D9D966",
                              "& .MuiSelect-icon": {
                                display: "none",
                              },
                              "& .MuiInputBase-input": {
                                padding: "10px 14px 10px 14px",
                                height: "8px",
                              },
                            }}
                            SelectProps={{
                              displayEmpty: true,
                            }}
                          >
                            <MenuItem value="" disabled>
                              <Grid2
                                flexDirection="row"
                                display="flex"
                                justifyContent="space-between"
                                alignItems="center"
                              >
                                <Typography
                                  fontSize="13px"
                                  fontWeight="500"
                                  lineHeight="22.4px"
                                  color="#B0B0B0"
                                >
                                  Flaring
                                </Typography>
                                <img
                                  src={down_arrow}
                                  width="12px"
                                  height="7px"
                                  alt="Logo"
                                />
                              </Grid2>
                            </MenuItem>
                            <MenuItem value="Unit1">Flaring</MenuItem>
                            <MenuItem value="Unit2">
                              Sweet Gas Processing
                            </MenuItem>
                            <MenuItem value="Unit3">
                              Conventional Oil Production
                            </MenuItem>
                          </TextField>
                        </Box>
                      </>
                    )}
                    {field.quantity || field.unit ? (
                      <Box
                        sx={{
                          display: "flex",
                          alignItems: "center",
                          justifyContent: "center",
                          flexDirection: "column",
                          gap: "8px",
                          cursor: "pointer",
                        }}
                      >
                        <img
                          onClick={() => handleDelete(index)}
                          src={trash_logo}
                          alt="Delete"
                          style={{
                            width: "20px",
                            height: "55px",
                            marginTop: "6px",
                            marginRight: "15px",
                          }}
                        />
                      </Box>
                    ) : null}
                  </Box>
                </Grid2>
              ))}

              <Grid2
                sx={{
                  display: "flex",
                  flexDirection: "column",
                  gap: "4px",
                  alignItems: "flex-start",
                }}
              >
                <Typography
                  variant="body2"
                  fontSize="12px"
                  fontWeight="400"
                  lineHeight="19.6px"
                >
                  Quantity of gas production (m3)
                </Typography>
                <TextField
                  placeholder="Quantity of Gas"
                  type="number"
                  sx={{
                    width: "252px",
                    borderRadius: "5px",
                    border: "1px solid #D9D9D966",
                    "& .MuiInputBase-input": {
                      padding: "10px 14px",
                      height: "auto",
                    },
                  }}
                />
              </Grid2>
            </Grid2>
 

  const handleGasProductionChange = (event) => {
    setGasProduction(event.target.value);
  };
 
  const [gasProduction, setGasProduction] = useState(""); // New state for gas production quantity

 
<Grid2
              container
              spacing={2}
              sx={{
                border:
                  "1px solid var(--stroke-21, rgba(217, 217, 217, 0.40));",
                flexDirection: "column",
                display: "flex",
                padding: "18px",
                borderRadius: "8px",
              }}
            >
              {fields.map((field, index) => (
                <Grid2 item xs={12} key={index}>
                  <Box
                    sx={{
                      display: "flex",
                      alignItems: "flex-start",
                      gap: "20px",
                      flexWrap: "wrap",
                    }}
                  >
                    <Box
                      sx={{
                        display: "flex",
                        flexDirection: "column",
                        gap: "4px",
                        alignItems: "flex-start",
                      }}
                    >
                      <Typography
                        variant="body2"
                        fontSize="12px"
                        fontWeight="400"
                        lineHeight="19.6px"
                      >
                        Type of Process Emission
                      </Typography>
                      <TextField
                        select
                        name="fuel"
                        value={field.fuel}
                        onChange={(e) => handleChange(index, e)}
                        sx={{
                          width: "252px",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          "& .MuiSelect-icon": {
                            display: "none",
                          },
                          "& .MuiInputBase-input": {
                            padding: "10px 14px",
                            height: "8px",
                          },
                        }}
                        SelectProps={{
                          displayEmpty: true,
                        }}
                      >
                        <MenuItem value="" disabled>
                          <Grid2
                            flexDirection="row"
                            display="flex"
                            justifyContent="space-between"
                            alignItems="center"
                          >
                            <Typography
                              fontSize="13px"
                              fontWeight="500"
                              lineHeight="22.4px"
                              color="#B0B0B0"
                            >
                              Waste Gas Disposal
                            </Typography>
                            <img
                              src={down_arrow}
                              width="12px"
                              height="7px"
                              alt="Logo"
                            />
                          </Grid2>
                        </MenuItem>
                        <MenuItem value="Fuel">Process and Vented</MenuItem>
                        <MenuItem value="Fuel2">Fugitive</MenuItem>
                        <MenuItem value="Fuel3">Waste Gas Disposal</MenuItem>
                      </TextField>
                    </Box>

                    {field.fuel && (
                      <>
                        <Box
                          sx={{
                            display: "flex",
                            flexDirection: "column",
                            gap: "4px",
                            alignItems: "flex-start",
                          }}
                        >
                          <Typography
                            variant="body2"
                            fontSize="12px"
                            fontWeight="400"
                            lineHeight="19.6px"
                          >
                            Category of Waste gas disposal
                          </Typography>
                          <TextField
                            name="quantity"
                            value={field.quantity}
                            placeholder="Quantity"
                            onChange={(e) => handleChange(index, e)}
                            sx={{
                              width: "252px",
                              borderRadius: "5px",
                              border: "1px solid #D9D9D966",
                              "& .MuiInputBase-input": {
                                padding: "10px 14px",
                                height: "auto",
                              },
                            }}
                          />
                        </Box>

                        <Box
                          sx={{
                            display: "flex",
                            flexDirection: "column",
                            gap: "4px",
                            alignItems: "flex-start",
                          }}
                        >
                          <Typography
                            variant="body2"
                            fontSize="12px"
                            fontWeight="400"
                            lineHeight="19.6px"
                          >
                            Category for Flaring
                          </Typography>
                          <TextField
                            select
                            name="unit"
                            value={field.unit}
                            onChange={(e) => handleChange(index, e)}
                            sx={{
                              width: "252px",
                              borderRadius: "5px",
                              border: "1px solid #D9D9D966",
                              "& .MuiSelect-icon": {
                                display: "none",
                              },
                              "& .MuiInputBase-input": {
                                padding: "10px 14px 10px 14px",
                                height: "8px",
                              },
                            }}
                            SelectProps={{
                              displayEmpty: true,
                            }}
                          >
                            <MenuItem value="" disabled>
                              <Grid2
                                flexDirection="row"
                                display="flex"
                                justifyContent="space-between"
                                alignItems="center"
                              >
                                <Typography
                                  fontSize="13px"
                                  fontWeight="500"
                                  lineHeight="22.4px"
                                  color="#B0B0B0"
                                >
                                  Flaring
                                </Typography>
                                <img
                                  src={down_arrow}
                                  width="12px"
                                  height="7px"
                                  alt="Logo"
                                />
                              </Grid2>
                            </MenuItem>
                            <MenuItem value="Unit1">Flaring</MenuItem>
                            <MenuItem value="Unit1">
                              Sweet Gas Processing
                            </MenuItem>
                            <MenuItem value="Unit1">
                              Conventional Oil Production
                            </MenuItem>
                          </TextField>
                        </Box>
                      </>
                    )}
                    {field.quantity || field.unit ? (
                      <Box
                        sx={{
                          display: "flex",
                          alignItems: "center",
                          justifyContent: "center",
                          flexDirection: "column",
                          gap: "8px",
                          cursor: "pointer",
                        }}
                      >
                        <img
                          onClick={() => handleDelete(index)}
                          src={trash_logo}
                          alt="Delete"
                          style={{
                            width: "20px",
                            height: "55px",
                            marginTop: "6px",
                            marginRight: "15px",
                          }}
                        />
                      </Box>
                    ) : null}
                  </Box>
                </Grid2>
              ))}

              <Grid2
                sx={{
                  display: "flex",
                  flexDirection: "column",
                  gap: "4px",
                  alignItems: "flex-start",
                }}
              >
                <Typography
                  variant="body2"
                  fontSize="12px"
                  fontWeight="400"
                  lineHeight="19.6px"
                >
                  Quantity of gas production (m3)
                </Typography>
                <TextField
                  placeholder="Quantity of Gas"
                  type="number"
                  sx={{
                    width: "252px",
                    borderRadius: "5px",
                    border: "1px solid #D9D9D966",
                    "& .MuiInputBase-input": {
                      padding: "10px 14px",
                      height: "auto",
                    },
                  }}
                ></TextField>
              </Grid2>
            </Grid2>
 

  // Initialize fields with one empty row
  const [fields, setFields] = useState([{ fuel: "", quantity: "", unit: "" }]);
  const [gasProductionFields, setGasProductionFields] = useState([{ quantity: "" }]);

  const handleChange = (index, event) => {
    const { name, value } = event.target;
    const updatedFields = [...fields];
    updatedFields[index][name] = value;
    setFields(updatedFields);

    // Check if the current row is complete
    const isRowComplete =
      updatedFields[index].fuel &&
      updatedFields[index].quantity &&
      updatedFields[index].unit;

    // If the current row is complete and it’s the last row, add a new row
    if (isRowComplete && index === fields.length - 1) {
      setFields([...updatedFields, { fuel: "", quantity: "", unit: "" }]);
    }
  };

  const handleDelete = (index) => {
    const updatedFields = fields.filter((_, i) => i !== index);

    // Add a new empty row if there are no rows left
    if (updatedFields.length === 0) {
      updatedFields.push({ fuel: "", quantity: "", unit: "" });
    }

    setFields(updatedFields);
  };
  const handleChangeGasProduction = (index, event) => {
    const { name, value } = event.target;
    const updatedGasProduction = [...gasProductionFields];
    updatedGasProduction[index][name] = value;
    setGasProductionFields(updatedGasProduction);
  };

 
 <Grid2
              sx={{ display: "flex", flexDirection: "column", gap: "4px" }}
            >
              <div
                style={{
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "space-between",
                  gap: "6px",
                  width: "100%",
                }}
              >
                <div
                  style={{ display: "flex", alignItems: "center", gap: "6px" }}
                >
                  <img
                    src={emisson_logo}
                    height="15px"
                    width="10px"
                    alt="fuel-logo"
                  />
                  <h2
                    style={{
                      fontSize: "16px",
                      fontWeight: "600",
                      lineHeight: "28px",
                      color: "#000000",
                      margin: 0,
                    }}
                  >
                    Process Emission
                  </h2>
                </div>
                <img
                  src={x_logo}
                  onClick={onClose}
                  alt="dot-icon"
                  height="24px"
                  width="24px"
                  style={{
                    marginBottom: "30px",
                    marginRight: "25px",
                    position: "absolute",
                    right: "0",
                    cursor: "pointer",
                  }}
                />
              </div>
              <Typography
                fontSize="12px"
                fontWeight="400"
                lineHeight="22.4px"
                color="#717171"
              >
                Record the type of industrial process and the quantity of
                product processed to calculate emissions directly related to
                production activities.
              </Typography>
            </Grid2>

            <Grid2
              container
              spacing={2}
              sx={{
                border:
                  "1px solid var(--stroke-21, rgba(217, 217, 217, 0.40));",
                flexDirection: "column",
                display: "flex",
                padding: "18px",
                borderRadius: "8px",
              }}
            >
              {fields.map((field, index) => (
                <Grid2 item xs={12} key={index}>
                  <Box
                    sx={{
                      display: "flex",
                      alignItems: "flex-start",
                      gap: "20px",
                      flexWrap: "wrap",
                    }}
                  >
                    <Box
                      sx={{
                        display: "flex",
                        flexDirection: "column",
                        gap: "4px",
                        alignItems: "flex-start",
                      }}
                    >
                      <Typography
                        variant="body2"
                        fontSize="12px"
                        fontWeight="400"
                        lineHeight="19.6px"
                      >
                        Type of Process Emission
                      </Typography>
                      <TextField
                        select
                        name="fuel"
                        value={field.fuel}
                        onChange={(e) => handleChange(index, e)}
                        sx={{
                          width: "252px",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          "& .MuiSelect-icon": {
                            display: "none",
                          },
                          "& .MuiInputBase-input": {
                            padding: "10px 14px",
                            height: "8px",
                          },
                        }}
                        SelectProps={{
                          displayEmpty: true,
                        }}
                      >
                        <MenuItem value="" disabled>
                          <Grid2
                            flexDirection="row"
                            display="flex"
                            justifyContent="space-between"
                            alignItems="center"
                          >
                            <Typography
                              fontSize="13px"
                              fontWeight="500"
                              lineHeight="22.4px"
                              color="#B0B0B0"
                            >
                              Waste Gas Disposal
                            </Typography>
                            <img
                              src={down_arrow}
                              width="12px"
                              height="7px"
                              alt="Logo"
                            />
                          </Grid2>
                        </MenuItem>
                        <MenuItem value="Fuel">Process and Vented</MenuItem>
                        <MenuItem value="Fuel2">Fugitive</MenuItem>
                        <MenuItem value="Fuel3">Waste Gas Disposal</MenuItem>
                      </TextField>
                    </Box>

                    {field.fuel && (
                      <>
                        <Box
                          sx={{
                            display: "flex",
                            flexDirection: "column",
                            gap: "4px",
                            alignItems: "flex-start",
                          }}
                        >
                          <Typography
                            variant="body2"
                            fontSize="12px"
                            fontWeight="400"
                            lineHeight="19.6px"
                          >
                            Category of Waste gas disposal
                          </Typography>
                          <TextField
                            name="quantity"
                            value={field.quantity}
                            placeholder="Quantity"
                            onChange={(e) => handleChange(index, e)}
                            sx={{
                              width: "252px",
                              borderRadius: "5px",
                              border: "1px solid #D9D9D966",
                              "& .MuiInputBase-input": {
                                padding: "10px 14px",
                                height: "auto",
                              },
                            }}
                          />
                        </Box>

                        <Box
                          sx={{
                            display: "flex",
                            flexDirection: "column",
                            gap: "4px",
                            alignItems: "flex-start",
                          }}
                        >
                          <Typography
                            variant="body2"
                            fontSize="12px"
                            fontWeight="400"
                            lineHeight="19.6px"
                          >
                            Category for Flaring
                          </Typography>
                          <TextField
                            select
                            name="unit"
                            value={field.unit}
                            onChange={(e) => handleChange(index, e)}
                            sx={{
                              width: "252px",
                              borderRadius: "5px",
                              border: "1px solid #D9D9D966",
                              "& .MuiSelect-icon": {
                                display: "none",
                              },
                              "& .MuiInputBase-input": {
                                padding: "10px 14px 10px 14px",
                                height: "8px",
                              },
                            }}
                            SelectProps={{
                              displayEmpty: true,
                            }}
                          >
                            <MenuItem value="" disabled>
                              <Grid2
                                flexDirection="row"
                                display="flex"
                                justifyContent="space-between"
                                alignItems="center"
                              >
                                <Typography
                                  fontSize="13px"
                                  fontWeight="500"
                                  lineHeight="22.4px"
                                  color="#B0B0B0"
                                >
                                  Flaring
                                </Typography>
                                <img
                                  src={down_arrow}
                                  width="12px"
                                  height="7px"
                                  alt="Logo"
                                />
                              </Grid2>
                            </MenuItem>
                            <MenuItem value="Unit1">Flaring</MenuItem>
                            <MenuItem value="Unit1">
                              Sweet Gas Processing
                            </MenuItem>
                            <MenuItem value="Unit1">
                              Conventional Oil Production
                            </MenuItem>
                          </TextField>
                        </Box>
                      </>
                    )}
                    {field.quantity || field.unit ? (
                      <Box
                        sx={{
                          display: "flex",
                          alignItems: "center",
                          justifyContent: "center",
                          flexDirection: "column",
                          gap: "8px",
                          cursor: "pointer",
                        }}
                      >
                        <img
                          onClick={() => handleDelete(index)}
                          src={trash_logo}
                          alt="Delete"
                          style={{
                            width: "20px",
                            height: "55px",
                            marginTop: "6px",
                            marginRight: "15px",
                          }}
                        />
                      </Box>
                    ) : null}
                  </Box>
                </Grid2>
              ))}

              <Grid2
                sx={{
                  display: "flex",
                  flexDirection: "column",
                  gap: "4px",
                  alignItems: "flex-start",
                }}
              >
                <Typography
                  variant="body2"
                  fontSize="12px"
                  fontWeight="400"
                  lineHeight="19.6px"
                >
                  Quantity of gas production (m3)
                </Typography>
                <TextField
                  placeholder="Quantity of Gas"
                  type="number"
                  sx={{
                    width: "252px",
                    borderRadius: "5px",
                    border: "1px solid #D9D9D966",
                    "& .MuiInputBase-input": {
                      padding: "10px 14px",
                      height: "auto",
                    },
                  }}
                ></TextField>
              </Grid2>
            </Grid2>

 

              justifyContent: "flex-end",
 
overflow: "hidden", // Scroll bar ko hide karne ke liye
 

          <Grid2
        sx={{
          padding: "25px 70px 0px 70px",
          width: "100%",
          height: "125px",
          display: "flex",
          flexDirection: "row",
          marginLeft:"50px",
          gap: "10px",
          overflow: "hidden",
          justifyContent: "flex-end", // This moves the buttons to the right
        }}
      >
        <Button
          sx={{
            borderRadius: "32px",
            border: "1px solid #28814D",
            height: "38px",
            fontWeight: "400",
            fontSize: "12px",
            width: "100px",
            textTransform: "capitalize",
            color: "#28814D",
          }}
        >
          Cancel
        </Button>
        <Button
          sx={{
            borderRadius: "32px",
            height: "38px",
            fontWeight: "400",
            fontSize: "12px",
            width: "100px",
            background: "#369D9C",
            textTransform: "capitalize",
            color: "#FFFFFF",
          }}
        >
          Proceed
        </Button>
      </Grid2>
 

            ml:"40px"
 

            padding: "8px 18px",
 

            ml:"40px"
 
 <Button
          sx={{
            borderRadius: "32px",
            border: "1px solid #28814D",
            height: "38px",
            fontWeight: "400",
            fontSize: "12px",
            width: "100px",
            textTransform: "capitalize",
            color: "#28814D",
            ml:"40px"
          }}
        >
          Cancel
        </Button>
        <Button
          sx={{
            borderRadius: "32px",
            padding: "8px 18px",
            height: "38px",
            fontWeight: "400",
            fontSize: "12px",
            width: "100px",
            background: "#369D9C",
            textTransform: "capitalize",
            color: "#FFFFFF",
            ml:"40px"
          }}
        >
          Proceed
        </Button>
 

            mr:"80px",
 

            position:"absolute",
 

            marginLeft:"20px"
 

            position:"absolute",
 

            // left:"0"
 

            margin
 

            padding: "8px 18px",
 
width: "262px"
 
  sx={{
                  display: "flex",
                  flexDirection: "column",
                  gap: "4px",
                  alignItems: "flex-start",
 
    sx={{
                  display: "flex",
                  flexDirection: "column",
                  gap: "4px",
                  alignItems: "flex-start",
                }}
 

import ProcessLastEmisson from "./ProcessLastEmission";
 
ProsessEmissonVenting
 

      <Grid2
        sx={{
          display: "flex",
          flexDirection: "column",
          gap: "4px",
          alignItems: "flex-start",
          mt:"20px"
        }}
      >
        <Typography
          variant="body2"
          fontSize="12px"
          fontWeight="400"
          lineHeight="19.6px"
        >
          Quantity of gas production (m3)
        </Typography>
        <TextField
          placeholder="Quantity of Gas"
          type="number"
          sx={{
            width: "272px",
            borderRadius: "5px",
            border: "1px solid #D9D9D966",
            "& .MuiInputBase-input": {
              padding: "10px 14px",
              height: "auto",
            },
          }}
        ></TextField>
      </Grid2>
 
import React from 'react'

function ProcessLastEmission() {
  return (
    <div>
      
    </div>
  )
}

export default ProcessLastEmission

 
 <TextField
                  placeholder="Quantity of Gas"
                  type="number"
                  sx={{
                    width: "262px", // Reduced the width from 250px to 150px
                    borderRadius: "5px",
                    border: "1px solid #D9D9D966",
                    "& .MuiInputBase-input": {
                      padding: "6px 12px",
                      height: "auto",
                    },
                  }}
                />
 

              <TextField
                placeholder="Quantity of Gas"
                type="number"
                sx={{
                  width: "262px",
                  borderRadius: "5px",
                  border: "1px solid #D9D9D966",
                  "& .MuiInputBase-input": {
                    padding: "8px 14px",
                    height: "auto",
                  },
                }}
              ></TextField>
 

              <TextField
                placeholder="Quantity of Gas"
                type="number"
                sx={{
                  width: "262px",
                  borderRadius: "5px",
                  border: "1px solid #D9D9D966",
                  "& .MuiInputBase-input": {
                    padding: "8px 14px",
                    height: "auto",
                  },
                }}
              ></TextField>
 

              <TextField
                placeholder="Quantity of Gas"
                type="number"
                sx={{
                  width: "250px",
                  borderRadius: "5px",
                  border: "1px solid #D9D9D966",
                  "& .MuiInputBase-input": {
                    padding: "6px 12px",
                    height: "auto",
                  },
                }}
              ></TextField>
 

              <TextField
                placeholder="Quantity of Gas"
                type="number"
                sx={{
                  width: "250px",
                  borderRadius: "5px",
                  border: "1px solid #D9D9D966",
                  "& .MuiInputBase-input": {
                    padding: "6px 12px",
                    height: "auto",
                  },
                }}
              >
 
 <TextField
                placeholder="Quantity of Gas"
                type="number"
                sx={{
                  width: "250px",
                  borderRadius: "5px",
                  border: "1px solid #D9D9D966",
                  "& .MuiInputBase-input": {
                    padding: "6px 12px",
                    height: "auto",
                  },
                }}
 
<Grid2
            sx={{
              width: "100%",
              display: "flex",
              flexDirection: "column",
              mt:"25px",
            }}
          >
            <ProsessEmissonVenting></ProsessEmissonVenting>
          </Grid2>
 

                flexDirection:"column",
 
xs={12} key={index}
 
item xs={12} key={index}
 

              gap:"30px"
 

              mt:""
 

            sx={{
              width: "100%",
              display: "flex",
              flexDirection: "column",
              gap: "30px",
            }}
 

            height: "89vh",
 

            height: "89vh",
 

            height: "89vh",
 
container spacing={4}
 

              gap: "30px",
 
ProcessEmission/
 
sx={{display:""}}
 

import React, { useState } from "react";
 


    // Add a new empty row if there are no rows left
 


    // If the current row is complete and it’s the last row, add a new row
 


    // Check if the current row is complete
 

  // Initialize fields with one empty row
 
../../../../assets/images/emission_logo.svg
 
../../../../assets/images/refri_logo.svg
 
refri_logo
 
Refrigerant Data
 
../../../assets/images/X_logo.svg
 
../../../assets/images/refri_logo.svg
 
../../../assets/images/TrashS.svg
 
../../../assets/images/down_arrow.svg
 
../../../assets/images/emisson_logo.svg
 

import porces_Logo from "../../../assets/images/emisson_logo.svg";
 

                sx={{
                 
                }}
 
 width: "272px",
                  borderRadius: "5px",
                  border: "1px solid #D9D9D966",
                  "& .MuiSelect-icon": {
                    display: "none",
                  },
                  "& .MuiInputBase-input": {
                    padding: "10px 14px 10px 14px",
                    height: "8px",
                  },
 
sx={{
                  width: "272px",
                  
                  borderRadius: "5px",
                  border: "1px solid #D9D9D966",
                  "& .MuiSelect-icon": {
                    display: "none",
                  },
                  "& .MuiInputBase-input": {
                    padding: "10px 14px 10px 14px",
                    height: "8px",
                  },
                }}
 

                display: "flex",
                alignItems: "flex-start",
                gap: "20px",
                flexWrap: "wrap",
                flexDirection:"column"
 

                Type of Process Emission
 

                                  Select Unit
 

                            <MenuItem value="Unit2">Unit2</MenuItem>
                            <MenuItem value="Unit3">Unit3</MenuItem>
 

                              Select Type
 

                              Select Type
 

        <DialogActions>
          <Button  color="primary">
            Close
          </Button>
        </DialogActions>
 

                            Unit
 

                            Unit
 

                                  Select Unit
 

                            Quantity
 
Types of Refrigerant
 

                Input the type and amount of refrigerant used to account for
                emissions from refrigerant Consumption.
 
"../../../assets/images/x_logo.svg"
 

import x_logo from "../../../assets/images/x_logo.svg
 
cross_logo
 

import cross_logo from "../../../assets/images/cross_logo.svg"
 
 <svg width="80" height="95" viewBox="0 0 113 113" fill="none">
                <circle
                  cx="56.5"
                  cy="56.5"
                  r="56"
                  fill="url(#paint0_linear_939_5057)"
                />
                <path
                  d="M34.0957 56.3002L49.0854 71.29L78.9071 41.4683"
                  stroke="white"
                  strokeWidth="8.83606"
                />
                <defs>
                  <linearGradient
                    id="paint0_linear_939_5057"
                    x1="0.5"
                    y1="0.5"
                    x2="130.171"
                    y2="27.4392"
                    gradientUnits="userSpaceOnUse"
                  >
                    <stop stopColor="#51ADAC" />
                    <stop offset="1" stopColor="#4FA874" />
                  </linearGradient>
                </defs>
              </svg>
 

import refri_logo from "../../../assets/images/refri_logo.svg";
 

                <img src={cross_logo} alt="dot-icon" height="24px" width="24px" />
 

import refri_logo from "../../../assets/images/refri_logo.svg";
 

import dot_Icon from "../../../assets/images/DotsThreeVertical.svg";
 

          // height:"550px",
 

          // width: "1100px",
 

        <DialogTitle>Add More Data</DialogTitle>
 

import trash from "../../../assets/images/TrashS.svg";
 
// Set a maximum height
 
// Adjust the height as needed
 
/ Set a maximum width
 
 // Adjust the width as needed
 

        onClose={onClose}
 

        open={open}
 
style={{width:"100%", height:"60vh"}
 
// ProcessEmissionReports.js
import React, { useState } from "react";
import {
  DialogTitle,
  DialogContent,
  DialogActions,
  Button,
  Typography,
  Box,
  TextField,
  MenuItem,
  Grid2
} from "@mui/material";
import down_arrow from "../../../assets/images/down_arrow.svg";
import trash from "../../../assets/images/TrashS.svg";
import refri_logo from "../../../assets/images/refri_logo.svg";
import dot_Icon from "../../../assets/images/DotsThreeVertical.svg";

function ProcessEmissionReports({ onClose }) {
  // Initialize fields with one empty row
  const [fields, setFields] = useState([{ fuel: "", quantity: "", unit: "" }]);

  const handleChange = (index, event) => {
    const { name, value } = event.target;
    const updatedFields = [...fields];
    updatedFields[index][name] = value;
    setFields(updatedFields);

    // Check if the current row is complete
    const isRowComplete =
      updatedFields[index].fuel &&
      updatedFields[index].quantity &&
      updatedFields[index].unit;

    // If the current row is complete and it’s the last row, add a new row
    if (isRowComplete && index === fields.length - 1) {
      setFields([...updatedFields, { fuel: "", quantity: "", unit: "" }]);
    }
  };

  const handleDelete = (index) => {
    const updatedFields = fields.filter((_, i) => i !== index);

    // Add a new empty row if there are no rows left
    if (updatedFields.length === 0) {
      updatedFields.push({ fuel: "", quantity: "", unit: "" });
    }

    setFields(updatedFields);
  };

  return (
    <div>
     <Grid2
          sx={{
            padding: "25px 45px",
            width: "1100px",
            bgcolor: "#ffffff",
            display: "flex",
            height:"550px",
            flexDirection: "column",
            gap: "30px",
            borderRadius: "16px",
          }}
        >
      <DialogTitle>Add More Data</DialogTitle>
      <DialogContent>
       
          <Grid2
            sx={{
              width: "100%",
              display: "flex",
              flexDirection: "column",
              gap: "30px",
            }}
          >
            <Grid2 sx={{ display: "flex", flexDirection: "column", gap: "4px" }}>
              <div
                style={{
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "space-between",
                  gap: "6px",
                  width: "100%",
                }}
              >
                <div style={{ display: "flex", alignItems: "center", gap: "6px" }}>
                  <img src={refri_logo} height="15px" width="10px" alt="fuel-logo" />
                  <h2
                    style={{
                      fontSize: "16px",
                      fontWeight: "600",
                      lineHeight: "28px",
                      color: "#000000",
                      margin: 0,
                    }}
                  >
                    Refrigerant Data
                  </h2>
                </div>
                <img src={dot_Icon} alt="dot-icon" height="24px" width="24px" />
              </div>
              <Typography fontSize="12px" fontWeight="400" lineHeight="22.4px" color="#717171">
                Input the type and amount of refrigerant used to account for emissions from refrigerant Consumption.
              </Typography>
            </Grid2>

            <Grid2 container spacing={2}>
              {fields.map((field, index) => (
                <Grid2 item xs={12} key={index}>
                  <Box
                    sx={{
                      display: "flex",
                      alignItems: "flex-start",
                      gap: "20px",
                      flexWrap: "wrap",
                    }}
                  >
                    <Box
                      sx={{
                        display: "flex",
                        flexDirection: "column",
                        gap: "4px",
                        alignItems: "flex-start",
                      }}
                    >
                      <Typography variant="body2" fontSize="12px" fontWeight="400" lineHeight="19.6px">
                        Types of Refrigerant
                      </Typography>
                      <TextField
                        select
                        name="fuel"
                        value={field.fuel}
                        onChange={(e) => handleChange(index, e)}
                        sx={{
                          width: "332.5px",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          "& .MuiSelect-icon": {
                            display: "none",
                          },
                          "& .MuiInputBase-input": {
                            padding: "10px 14px",
                            height: "8px",
                          },
                        }}
                        SelectProps={{
                          displayEmpty: true,
                        }}
                      >
                        <MenuItem value="" disabled>
                          <Grid2
                            flexDirection="row"
                            display="flex"
                            justifyContent="space-between"
                            alignItems="center"
                          >
                            <Typography fontSize="13px" fontWeight="500" lineHeight="22.4px" color="#B0B0B0">
                              Select Type
                            </Typography>
                            <img src={down_arrow} width="12px" height="7px" alt="Logo" />
                          </Grid2>
                        </MenuItem>
                        <MenuItem value="Fuel">Fuel</MenuItem>
                        <MenuItem value="Fuel2">Fuel2</MenuItem>
                        <MenuItem value="Fuel3">Fuel3</MenuItem>
                      </TextField>
                    </Box>

                    {field.fuel && (
                      <>
                        <Box
                          sx={{
                            display: "flex",
                            flexDirection: "column",
                            gap: "4px",
                            alignItems: "flex-start",
                          }}
                        >
                          <Typography variant="body2" fontSize="12px" fontWeight="400" lineHeight="19.6px">
                            Quantity
                          </Typography>
                          <TextField
                            name="quantity"
                            value={field.quantity}
                            placeholder="Quantity"
                            onChange={(e) => handleChange(index, e)}
                            sx={{
                              width: "332.5px",
                              borderRadius: "5px",
                              border: "1px solid #D9D9D966",
                              "& .MuiInputBase-input": {
                                padding: "10px 14px",
                                height: "auto",
                              },
                            }}
                          />
                        </Box>

                        <Box
                          sx={{
                            display: "flex",
                            flexDirection: "column",
                            gap: "4px",
                            alignItems: "flex-start",
                          }}
                        >
                          <Typography variant="body2" fontSize="12px" fontWeight="400" lineHeight="19.6px">
                            Unit
                          </Typography>
                          <TextField
                            select
                            name="unit"
                            value={field.unit}
                            onChange={(e) => handleChange(index, e)}
                            sx={{
                              width: "332.5px",
                              borderRadius: "5px",
                              border: "1px solid #D9D9D966",
                              "& .MuiSelect-icon": {
                                display: "none",
                              },
                              "& .MuiInputBase-input": {
                                padding: "10px 14px 10px 14px",
                                height: "8px",
                              },
                            }}
                            SelectProps={{
                              displayEmpty: true,
                            }}
                          >
                            <MenuItem value="" disabled>
                              <Grid2
                                flexDirection="row"
                                display="flex"
                                justifyContent="space-between"
                                alignItems="center"
                              >
                                <Typography fontSize="13px" fontWeight="500" lineHeight="22.4px" color="#B0B0B0">
                                  Select Unit
                                </Typography>
                                <img src={down_arrow} width="12px" height="7px" alt="Logo" />
                              </Grid2>
                            </MenuItem>
                            <MenuItem value="Unit1">Unit1</MenuItem>
                            <MenuItem value="Unit2">Unit2</MenuItem>
                            <MenuItem value="Unit3">Unit3</MenuItem>
                          </TextField>
                        </Box>
                      </>
                    )}
                    {field.quantity || field.unit ? (
                      <Box
                        sx={{
                          display: "flex",
                          alignItems: "center",
                          justifyContent: "center",
                          flexDirection: "column",
                          gap: "8px",
                          cursor: "pointer",
                        }}
                      >
                        <img
                          onClick={() => handleDelete(index)}
                          src={trash}
                          alt="Delete"
                          style={{
                            width: "20px",
                            height: "55px",
                            marginTop: "6px",
                            marginRight: "15px",
                          }}
                        />
                      </Box>
                    ) : null}
                  </Box>
                </Grid2>
              ))}
            </Grid2>
          </Grid2>
      </DialogContent>
      <DialogActions>
        <Button onClick={onClose} color="primary">
          Close
        </Button>
      </DialogActions>
      </Grid2>
    </div>
  );
}

export default ProcessEmissionReports;

 
// ProcessEmissionReports.js
import React, { useState } from "react";
import {
  DialogTitle,
  DialogContent,
  DialogActions,
  Button,
  Typography,
  Box,
  TextField,
  MenuItem,
  Grid2
} from "@mui/material";
import down_arrow from "../../../assets/images/down_arrow.svg";
import trash from "../../../assets/images/TrashS.svg";
import refri_logo from "../../../assets/images/refri_logo.svg";
import dot_Icon from "../../../assets/images/DotsThreeVertical.svg";

function ProcessEmissionReports({ onClose }) {
  // Initialize fields with one empty row
  const [fields, setFields] = useState([{ fuel: "", quantity: "", unit: "" }]);

  const handleChange = (index, event) => {
    const { name, value } = event.target;
    const updatedFields = [...fields];
    updatedFields[index][name] = value;
    setFields(updatedFields);

    // Check if the current row is complete
    const isRowComplete =
      updatedFields[index].fuel &&
      updatedFields[index].quantity &&
      updatedFields[index].unit;

    // If the current row is complete and it’s the last row, add a new row
    if (isRowComplete && index === fields.length - 1) {
      setFields([...updatedFields, { fuel: "", quantity: "", unit: "" }]);
    }
  };

  const handleDelete = (index) => {
    const updatedFields = fields.filter((_, i) => i !== index);

    // Add a new empty row if there are no rows left
    if (updatedFields.length === 0) {
      updatedFields.push({ fuel: "", quantity: "", unit: "" });
    }

    setFields(updatedFields);
  };

  return (
    <div>
     <Grid2
          sx={{
            padding: "25px 45px",
            width: "1100px",
            bgcolor: "#ffffff",
            display: "flex",
            height:"550px",
            flexDirection: "column",
            gap: "30px",
            borderRadius: "16px",
          }}
        >
      <DialogTitle>Add More Data</DialogTitle>
      <DialogContent>
       
          <Grid2
            sx={{
              width: "100%",
              display: "flex",
              flexDirection: "column",
              gap: "30px",
            }}
          >
            <Grid2 sx={{ display: "flex", flexDirection: "column", gap: "4px" }}>
              <div
                style={{
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "space-between",
                  gap: "6px",
                  width: "100%",
                }}
              >
                <div style={{ display: "flex", alignItems: "center", gap: "6px" }}>
                  <img src={refri_logo} height="15px" width="10px" alt="fuel-logo" />
                  <h2
                    style={{
                      fontSize: "16px",
                      fontWeight: "600",
                      lineHeight: "28px",
                      color: "#000000",
                      margin: 0,
                    }}
                  >
                    Refrigerant Data
                  </h2>
                </div>
                <img src={dot_Icon} alt="dot-icon" height="24px" width="24px" />
              </div>
              <Typography fontSize="12px" fontWeight="400" lineHeight="22.4px" color="#717171">
                Input the type and amount of refrigerant used to account for emissions from refrigerant Consumption.
              </Typography>
            </Grid2>

            <Grid2 container spacing={2}>
              {fields.map((field, index) => (
                <Grid2 item xs={12} key={index}>
                  <Box
                    sx={{
                      display: "flex",
                      alignItems: "flex-start",
                      gap: "20px",
                      flexWrap: "wrap",
                    }}
                  >
                    <Box
                      sx={{
                        display: "flex",
                        flexDirection: "column",
                        gap: "4px",
                        alignItems: "flex-start",
                      }}
                    >
                      <Typography variant="body2" fontSize="12px" fontWeight="400" lineHeight="19.6px">
                        Types of Refrigerant
                      </Typography>
                      <TextField
                        select
                        name="fuel"
                        value={field.fuel}
                        onChange={(e) => handleChange(index, e)}
                        sx={{
                          width: "332.5px",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          "& .MuiSelect-icon": {
                            display: "none",
                          },
                          "& .MuiInputBase-input": {
                            padding: "10px 14px",
                            height: "8px",
                          },
                        }}
                        SelectProps={{
                          displayEmpty: true,
                        }}
                      >
                        <MenuItem value="" disabled>
                          <Grid2
                            flexDirection="row"
                            display="flex"
                            justifyContent="space-between"
                            alignItems="center"
                          >
                            <Typography fontSize="13px" fontWeight="500" lineHeight="22.4px" color="#B0B0B0">
                              Select Type
                            </Typography>
                            <img src={down_arrow} width="12px" height="7px" alt="Logo" />
                          </Grid2>
                        </MenuItem>
                        <MenuItem value="Fuel">Fuel</MenuItem>
                        <MenuItem value="Fuel2">Fuel2</MenuItem>
                        <MenuItem value="Fuel3">Fuel3</MenuItem>
                      </TextField>
                    </Box>

                    {field.fuel && (
                      <>
                        <Box
                          sx={{
                            display: "flex",
                            flexDirection: "column",
                            gap: "4px",
                            alignItems: "flex-start",
                          }}
                        >
                          <Typography variant="body2" fontSize="12px" fontWeight="400" lineHeight="19.6px">
                            Quantity
                          </Typography>
                          <TextField
                            name="quantity"
                            value={field.quantity}
                            placeholder="Quantity"
                            onChange={(e) => handleChange(index, e)}
                            sx={{
                              width: "332.5px",
                              borderRadius: "5px",
                              border: "1px solid #D9D9D966",
                              "& .MuiInputBase-input": {
                                padding: "10px 14px",
                                height: "auto",
                              },
                            }}
                          />
                        </Box>

                        <Box
                          sx={{
                            display: "flex",
                            flexDirection: "column",
                            gap: "4px",
                            alignItems: "flex-start",
                          }}
                        >
                          <Typography variant="body2" fontSize="12px" fontWeight="400" lineHeight="19.6px">
                            Unit
                          </Typography>
                          <TextField
                            select
                            name="unit"
                            value={field.unit}
                            onChange={(e) => handleChange(index, e)}
                            sx={{
                              width: "332.5px",
                              borderRadius: "5px",
                              border: "1px solid #D9D9D966",
                              "& .MuiSelect-icon": {
                                display: "none",
                              },
                              "& .MuiInputBase-input": {
                                padding: "10px 14px 10px 14px",
                                height: "8px",
                              },
                            }}
                            SelectProps={{
                              displayEmpty: true,
                            }}
                          >
                            <MenuItem value="" disabled>
                              <Grid2
                                flexDirection="row"
                                display="flex"
                                justifyContent="space-between"
                                alignItems="center"
                              >
                                <Typography fontSize="13px" fontWeight="500" lineHeight="22.4px" color="#B0B0B0">
                                  Select Unit
                                </Typography>
                                <img src={down_arrow} width="12px" height="7px" alt="Logo" />
                              </Grid2>
                            </MenuItem>
                            <MenuItem value="Unit1">Unit1</MenuItem>
                            <MenuItem value="Unit2">Unit2</MenuItem>
                            <MenuItem value="Unit3">Unit3</MenuItem>
                          </TextField>
                        </Box>
                      </>
                    )}
                    {field.quantity || field.unit ? (
                      <Box
                        sx={{
                          display: "flex",
                          alignItems: "center",
                          justifyContent: "center",
                          flexDirection: "column",
                          gap: "8px",
                          cursor: "pointer",
                        }}
                      >
                        <img
                          onClick={() => handleDelete(index)}
                          src={trash}
                          alt="Delete"
                          style={{
                            width: "20px",
                            height: "55px",
                            marginTop: "6px",
                            marginRight: "15px",
                          }}
                        />
                      </Box>
                    ) : null}
                  </Box>
                </Grid2>
              ))}
            </Grid2>
          </Grid2>
      </DialogContent>
      <DialogActions>
        <Button onClick={onClose} color="primary">
          Close
        </Button>
      </DialogActions>
      </Grid2>
    </div>
  );
}

export default ProcessEmissionReports;

 

      <></>
 

        </Grid2>
 
Grid
 
// ProcessEmissionReports.js
import React from "react";
import {
  DialogTitle,
  DialogContent,
  DialogActions,
  Button,
  Typography,
} from "@mui/material";

function ProcessEmissionReports({ onClose }) {
  return (
    <div>
      <DialogTitle>Add More Data</DialogTitle>
      <DialogContent>
        <Typography>
          This is where you can add more data or forms for user input.
        </Typography>
        {/* Add form fields or other elements as needed */}
      </DialogContent>
      <DialogActions>
        <Button onClick={onClose} color="primary">
          Close
        </Button>
      </DialogActions>
    </div>
  );
}

export default ProcessEmissionReports;

 

      {/* Popup Dialog Component */}
      <Dialog open={open} onClose={handleClose}>
        <ProcessEmissionReports />
      </Dialog>
 
 <Grid2>
            <Button
              sx={{
                borderRadius: "32px",
                border: "1px solid #28814D",
                padding: "8px 18px 8px 18px",
                height: "38px",
                fontWeight: "400",
                fontSize: "12px",
                width: "100px",
                textTransform: "capitalize",
                color: "#28814D",
              }}
              onClick={handleClickOpen}
            >
              Add More
            </Button>
          </Grid2>
 

      <Dialog open={open} onClose={handleClose}>
        <DialogTitle>Add More Data</DialogTitle>
        <DialogContent>
          <Typography>
            This is where you can add more data or forms for user input.
          </Typography>
          {/* Add form fields or other elements as needed */}
        </DialogContent>
        <DialogActions>
          <Button onClick={handleClose} color="primary">
            Close
          </Button>
        </DialogActions>
      </Dialog>
 
 Grid, Button,
 

    </div>
 

import { TextField, MenuItem } from "@mui/material";
import down_arrow from "../../../assets/images/down_arrow.svg";
import Box from "@mui/material/Box";
import trash from "../../../assets/images/TrashS.svg";
 

            border: "1px solid #28814D",
 

            color:"white",
 

          Add Data
 
Add Data
 
<Grid2
        sx={{
          padding: "25px 70px 0px 70px",
          width: "100%",
          height: "125px",
          display: "flex",
          flexDirection: "row",
          gap:"10px",
        }}
      >
        <Button
          sx={{
            borderRadius: "32px",
            border: "1px solid #28814D",
            padding: "8px 18px 8px 18px",
            height: "38px",
            fontWeight: "400",
            fontSize: "12px",
            width: "100px",
            textTransform: "capitalize",
            color: "#28814D",
          }}
        >
          Add Data
        </Button>
        <Button
          sx={{
            borderRadius: "32px",
            border: "1px solid #28814D",
            padding: "8px 18px 8px 18px",
            height: "38px",
            fontWeight: "400",
            fontSize: "12px",
            width: "100px",
            textTransform: "capitalize",
            color: "#28814D",
          }}
        >
          Add Data
        </Button>
      </Grid2>
 

          left:"0"
 

          marginRight:"0"
 

          bgcolor: "#ffffff",
 

                Oil and Gas Exploration
 
as-driven Pneumatic Controllers and Pumps
 

              Well Completion
 
ven Pneumatic Controller CH4 Emission in Gas Processing Segment
 

              Offshore 
 

        <table
          style={{
            width: "100%",
            borderCollapse: "collapse",
            borderRadius: "5px",
            overflow: "hidden",
            tableLayout: "fixed", // Ensures equal column width
          }}
        >
          <tr style={{ border: "1px solid  #EEEEEE" }}>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                padding: "10px",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Type of Process Emission
              </Typography>
            </td>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                padding: "10px",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Category
              </Typography>
            </td>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                padding: "10px",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Sub Category
              </Typography>
            </td>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                padding: "10px",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Sub Sub Category
              </Typography>
            </td>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                padding: "10px",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Sub Sub Sub Category
              </Typography>
            </td>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                padding: "10px",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Quantity
              </Typography>
            </td>
          </tr>
        </table>
 

                Quantity
 
Sub Sub Sub Category
 
Sub Sub Category
 
 Sub Category
 
Category
 
Type of Process Emission
 

              12 10^3*m3
 

              Refining 
 
<table
          style={{
            width: "100%",
            borderCollapse: "collapse",
            borderRadius: "5px",
            overflow: "hidden",
            tableLayout: "fixed", // Ensures equal column width
          }}
        >
          <tr style={{border:"1px solid  #EEEEEE"}}>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                padding: "10px",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Type of Process Emission
              </Typography>
            </td>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                padding: "10px",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Category
              </Typography>
            </td>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                padding: "10px",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Sub Category
              </Typography>
            </td>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                padding: "10px",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Sub Sub Category
              </Typography>
            </td>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                padding: "10px",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Sub Sub Sub Category
              </Typography>
            </td>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                padding: "10px",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Quantity
              </Typography>
            </td>
          </tr>
        </table>
 
  <table
          style={{
            width: "100%",
            borderCollapse: "collapse",
            borderRadius: "5px",
            overflow: "hidden",
            tableLayout: "fixed", // Ensures equal column width
          }}
        >
          <tr>
            <th
              style={{
                textAlign: "left",
                fontWeight: "bold",
                background: "#E6F8F2",
                padding: "10px",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Type of Process Emission
              </Typography>
            </th>
            <th
              style={{
                textAlign: "left",
                fontWeight: "bold",
                backgroundColor: "rgba(200, 200, 200, 0.5)",
                padding: "10px",
                background: "#E6F8F2",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Category
              </Typography>
            </th>
            <th
              style={{
                textAlign: "left",
                fontWeight: "bold",
                backgroundColor: "rgba(200, 200, 200, 0.5)",
                padding: "10px",
                background: "#E6F8F2",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Sub Category
              </Typography>
            </th>
            <th
              style={{
                textAlign: "left",
                fontWeight: "bold",
                backgroundColor: "rgba(200, 200, 200, 0.5)",
                padding: "10px",
                background: "#E6F8F2",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Sub Sub Category
              </Typography>
            </th>
            <th
              style={{
                textAlign: "left",
                fontWeight: "bold",
                backgroundColor: "rgba(200, 200, 200, 0.5)",
                padding: "10px",
                background: "#E6F8F2",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Sub Sub Sub Category
              </Typography>
            </th>
            <th
              style={{
                textAlign: "left",
                fontWeight: "bold",
                backgroundColor: "rgba(200, 200, 200, 0.5)",
                padding: "10px",
                marginRight: "10px",
                background: "#E6F8F2",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Quantity
              </Typography>
            </th>
          </tr>
        </table>
 

                Quantity
 
Sub Sub Sub Category
 

              Natural Gas Processing
 

              Oil and Gas Exploration
 
Sub Sub Category
 
Sub Category
 
Categor
 
Type of Process Emission
 

        <table
          style={{
            width: "100%",
            borderCollapse: "collapse",
            borderRadius: "5px",
            overflow: "hidden",
            tableLayout: "fixed", // Ensures equal column width
          }}
        >
          <tr>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                background: "#E6F8F2",
                padding: "10px",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Type of Process Emission
              </Typography>
            </td>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                backgroundColor: "rgba(200, 200, 200, 0.5)",
                padding: "10px",
                background: "#E6F8F2",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Category
              </Typography>
            </td>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                backgroundColor: "rgba(200, 200, 200, 0.5)",
                padding: "10px",
                background: "#E6F8F2",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Sub Category
              </Typography>
            </td>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                backgroundColor: "rgba(200, 200, 200, 0.5)",
                padding: "10px",
                background: "#E6F8F2",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Sub Sub Category
              </Typography>
            </td>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                backgroundColor: "rgba(200, 200, 200, 0.5)",
                padding: "10px",
                background: "#E6F8F2",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Sub Sub Sub Category
              </Typography>
            </td>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                backgroundColor: "rgba(200, 200, 200, 0.5)",
                padding: "10px",
                marginRight: "10px",
                background: "#E6F8F2",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Quantity
              </Typography>
            </td>
          </tr>
        </table>
 

        <table
          style={{
            width: "100%",
            borderCollapse: "collapse",
            borderRadius: "5px",
            overflow: "hidden",
            tableLayout: "fixed", // Ensures equal column width
          }}
        >
          <tr>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                background: "#E6F8F2",
                padding: "10px",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Type of Process Emission
              </Typography>
            </td>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                backgroundColor: "rgba(200, 200, 200, 0.5)",
                padding: "10px",
                background: "#E6F8F2",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Category
              </Typography>
            </td>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                backgroundColor: "rgba(200, 200, 200, 0.5)",
                padding: "10px",
                background: "#E6F8F2",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Sub Category
              </Typography>
            </td>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                backgroundColor: "rgba(200, 200, 200, 0.5)",
                padding: "10px",
                background: "#E6F8F2",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Sub Sub Category
              </Typography>
            </td>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                backgroundColor: "rgba(200, 200, 200, 0.5)",
                padding: "10px",
                background: "#E6F8F2",
                marginRight: "10px",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Sub Sub Sub Category
              </Typography>
            </td>
            <td
              style={{
                textAlign: "left",
                fontWeight: "bold",
                backgroundColor: "rgba(200, 200, 200, 0.5)",
                padding: "10px",
                marginRight: "10px",
                background: "#E6F8F2",
              }}
            >
              <Typography fontWeight="400" fontSize="10px">
                Quantity
              </Typography>
            </td>
          </tr>
        </table>
 

                backgroundColor: "rgba(200, 200, 200, 0.5)",
 

                backgroundColor: "rgba(200, 200, 200, 0.5)",
 

                backgroundColor: "rgba(200, 200, 200, 0.5)",
 

                backgroundColor: "rgba(200, 200, 200, 0.5)",
 

                backgroundColor: "rgba(200, 200, 200, 0.5)",
 
black
 

            ,
 

                background: "#E6F8F2",
 

                background: "#E6F8F2",
 

                background: "#E6F8F2",
 

                background: "#E6F8F2",
 

                background: "#E6F8F2",
 

                background: "#E6F8F2",
 

                    background: "#E6F8F2",
 

              background: "#ffffff",
 
    <Grid2
            sx={{
              display: "flex",
              flexDirection: "column",
              border: "1px solid #EEEEEE",
              padding: "9px",
              borderRadius: "8px",
              background: "#ffffff",
            }}
          >
            <table
              style={{
                width: "100%",
                borderCollapse: "collapse",
                borderRadius: "5px",
                overflow: "hidden",
                tableLayout: "fixed", // Ensures equal column width
              }}
            >
              <tr>
                <th
                  style={{
                    textAlign: "left",
                    fontWeight: "bold",
                    background: "#E6F8F2",
                    padding: "10px",
                    marginRight: "10px",
                  }}
                >
                  <Typography fontWeight="400" fontSize="10px">
                    Type of Process Emission
                  </Typography>
                </th>
                <th
                  style={{
                    textAlign: "left",
                    fontWeight: "bold",
                    background: "#E6F8F2",
                    padding: "10px",
                    marginRight: "10px",
                  }}
                >
                  <Typography fontWeight="400" fontSize="10px">
                    Category
                  </Typography>
                </th>
                <th
                  style={{
                    textAlign: "left",
                    fontWeight: "bold",
                    background: "#E6F8F2",
                    padding: "10px",
                    marginRight: "10px",
                  }}
                >
                  <Typography fontWeight="400" fontSize="10px">
                    Sub Category
                  </Typography>
                </th>
                <th
                  style={{
                    textAlign: "left",
                    fontWeight: "bold",
                    background: "#E6F8F2",
                    padding: "10px",
                    marginRight: "10px",
                  }}
                >
                  <Typography fontWeight="400" fontSize="10px">
                    Sub Sub Category
                  </Typography>
                </th>
                <th
                  style={{
                    textAlign: "left",
                    fontWeight: "bold",
                    background: "#E6F8F2",
                    padding: "10px",
                    marginRight: "10px",
                  }}
                >
                  <Typography fontWeight="400" fontSize="10px">
                    Sub Sub Sub Category
                  </Typography>
                </th>
                <th
                  style={{
                    textAlign: "left",
                    fontWeight: "bold",
                    background: "#E6F8F2",
                    padding: "10px",
                    marginRight: "10px",
                  }}
                >
                  <Typography fontWeight="400" fontSize="10px">
                    Quantity
                  </Typography>
                </th>
              </tr>

              {/* Dummy Data Rows */}
              <tr>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Emission Type 1
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Category A
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Sub Cat 1
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Sub Sub Cat 1
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Sub Sub Sub Cat 1
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>100</td>
              </tr>
              <tr>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Emission Type 2
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Category B
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Sub Cat 2
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Sub Sub Cat 2
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Sub Sub Sub Cat 2
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>200</td>
              </tr>
              <tr>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Emission Type 3
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Category C
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Sub Cat 3
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Sub Sub Cat 3
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Sub Sub Sub Cat 3
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>300</td>
              </tr>
              <tr>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Emission Type 4
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Category D
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Sub Cat 4
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Sub Sub Cat 4
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Sub Sub Sub Cat 4
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>400</td>
              </tr>
              <tr>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Emission Type 5
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Category E
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Sub Cat 5
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Sub Sub Cat 5
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>
                  Sub Sub Sub Cat 5
                </td>
                <td style={{ padding: "10px", marginRight: "10px" }}>500</td>
              </tr>
            </table>
          </Grid2>
 

              gap:"16px",
 
<Grid2
            sx={{
              display: "flex",
              flexDirection: "column",
              border: "1px solid #EEEEEE",
              padding: "9px",
              borderRadius: "8px",
              background: "#ffffff",
            }}
          >
            <table
              style={{
                width: "100%",
                borderCollapse: "collapse",
                borderRadius: "5px",
                overflow: "hidden",
                tableLayout: "fixed", // Ensures equal column width
              }}
            >
              <tr>
                <th
                  style={{
                    textAlign: "left",
                    fontWeight: "bold",
                    background: "#E6F8F2",
                    padding: "10px",
                    marginRight: "10px",
                  }}
                >
                  <Typography fontWeight="400" fontSize="10px">
                    Type of Process Emission
                  </Typography>
                </th>
                <th
                  style={{
                    textAlign: "left",
                    fontWeight: "bold",
                    backgroundColor: "rgba(200, 200, 200, 0.5)",
                    padding: "10px",
                    background: "#E6F8F2",
                    marginRight: "10px",
                  }}
                >
                  <Typography fontWeight="400" fontSize="10px">
                    Category
                  </Typography>
                </th>
                <th
                  style={{
                    textAlign: "left",
                    fontWeight: "bold",
                    backgroundColor: "rgba(200, 200, 200, 0.5)",
                    padding: "10px",
                    background: "#E6F8F2",
                    marginRight: "10px",
                  }}
                >
                  <Typography fontWeight="400" fontSize="10px">
                    Sub Category
                  </Typography>
                </th>
                <th
                  style={{
                    textAlign: "left",
                    fontWeight: "bold",
                    backgroundColor: "rgba(200, 200, 200, 0.5)",
                    padding: "10px",
                    background: "#E6F8F2",
                    marginRight: "10px",
                  }}
                >
                  <Typography fontWeight="400" fontSize="10px">
                    Sub Sub Category
                  </Typography>
                </th>
                <th
                  style={{
                    textAlign: "left",
                    fontWeight: "bold",
                    backgroundColor: "rgba(200, 200, 200, 0.5)",
                    padding: "10px",
                    background: "#E6F8F2",
                    marginRight: "10px",
                  }}
                >
                  <Typography fontWeight="400" fontSize="10px">
                    Sub Sub Sub Category
                  </Typography>
                </th>
                <th
                  style={{
                    textAlign: "left",
                    fontWeight: "bold",
                    backgroundColor: "rgba(200, 200, 200, 0.5)",
                    padding: "10px",
                    marginRight: "10px",
                    background: "#E6F8F2",
                  }}
                >
                  <Typography fontWeight="400" fontSize="10px">
                    Quantity
                  </Typography>
                </th>
              </tr>
            </table>
          </Grid2>
 
Input the type and amount of refrigerant used to account for
                emissions from refrigerant Consumption.
 

                gap:"4px",
 

import Button from 
 

      backgroundColor: " #E6F8F2",
 

          backgroundColor: "rgba(200, 200, 200, 0.5)",
 
background:
 
rgba(240, 240, 240, 0.8)
 
  <Grid2 sx={{ display: "flex", flexDirection: "column",border:"1px solid #EEEEEE",padding:"9px 9px 9px 9px", borderRadius:"8px", background:"#ffffff"}}>
            <table
              style={{
                width: "100%",
                borderCollapse: "collapse",
                borderRadius: "5px",
                overflow: "hidden",
                backgroundColor: "rgba(240, 240, 240, 0.8)",
              }}
            >
              <tr>
                <th
                  style={{
                    textAlign: "left",
                    fontWeight: "bold",
                    backgroundColor: "rgba(200, 200, 200, 0.5)",
                  }}
                >
                  <Typography fontWeight="400" fontSize="10px">
                    Type of Process Emission
                  </Typography>
                </th>
                <th
                  style={{
                    textAlign: "left",
                    fontWeight: "bold",
                    backgroundColor: "rgba(200, 200, 200, 0.5)",
                  }}
                >
                  <Typography fontWeight="400" fontSize="10px">
                    Category
                  </Typography>
                </th>
                <th
                  style={{  
                    textAlign: "left",
                    fontWeight: "bold",
                    backgroundColor: "rgba(200, 200, 200, 0.5)",
                  }}
                >
                  <Typography fontWeight="400" fontSize="10px">
                    Sub Category
                  </Typography>
                </th>
                <th
                  style={{
                    textAlign: "left",
                    fontWeight: "bold",
                    backgroundColor: "rgba(200, 200, 200, 0.5)",
                  }}
                >
                  <Typography fontWeight="400" fontSize="10px">
                    Sub Sub Category
                  </Typography>
                </th>
                <th
                  style={{
                    padding: "10px",
                    textAlign: "left",
                    fontWeight: "bold",
                    backgroundColor: "rgba(200, 200, 200, 0.5)",
                  }}
                >
                  <Typography fontWeight="400" fontSize="10px">
                    Sub Sub Sub Category
                  </Typography>
                </th>
                <th
                  style={{
                    padding: "10px",
                    textAlign: "left",
                    fontWeight: "bold",
                    backgroundColor: "rgba(200, 200, 200, 0.5)",
                  }}
                >
                  <Typography fontWeight="400" fontSize="10px">
                    Quantity
                  </Typography>
                </th>
              </tr>
            </table>
          </Grid2>
 

                    width:"150px"
 

                    padding: "10px",
 

                    padding: "10px",
 

                    padding: "10px",
 

                    padding: "10px",
 
 gap: "16px"
 
 none
 
<table border="1">
              <tr>
                <th>Type of Process Emisssion</th>
                <th>Category</th>
                <th>Sub category </th>
                <th>Sub Sub category </th>
                <th>Sub Sub Sub category </th>
                <th>Quantity</th>
              </tr>
            </table>
 
<table border="1">
              <tr>
                <th>Type of Process Emisssion</th>
                <th>Category</th>
                <th>Sub category </th>
                <th>Sub Sub category </th>
                <th>Sub Sub Sub category </th>
                <th>Quantity</th>
              </tr>
            </table>
 

import refri_logo from "../../../assets/images/refri_logo.svg";
 

                  Refrigerant Data
 
 <Grid2 container spacing={2}>
            {fields.map((field, index) => (
              <Grid2 item xs={12} key={index}>
                <Box
                  sx={{
                    display: "flex",
                    alignItems: "flex-start", // Align items at the start for better column alignment
                    gap: "20px", // Space between each input group
                    flexWrap: "wrap", // Allow wrapping if necessary
                  }}
                >
                  {/* Fuel Type Input */}
                  <Box
                    sx={{
                      display: "flex",
                      flexDirection: "column", // Arrange label and input in a column
                      gap: "4px", // Space between label and input
                      alignItems: "flex-start", // Ensure alignment is consistent
                    }}
                  >
                    <Typography
                      variant="body2"
                      fontSize="12px"
                      fontWeight="400"
                      lineHeight="19.6px"
                    >
                      Types of Refrigerant
                    </Typography>
                    <TextField
                      select
                      name="fuel"
                      value={field.fuel}
                      onChange={(e) => handleChange(index, e)}
                      sx={{
                        width: "332.5px",
                        borderRadius: "5px",
                        border: "1px solid #D9D9D966",
                        "& .MuiSelect-icon": {
                          display: "none",
                        },
                        "& .MuiInputBase-input": {
                          padding: "10px 14px 10px 14px", // Add consistent padding
                          height: "8px",
                        },
                      }}
                      SelectProps={{
                        displayEmpty: true,
                      }}
                    >
                      <MenuItem value="" disabled>
                        <Grid2
                          flexDirection="row"
                          display="flex"
                          justifyContent="space-between"
                          alignItems="center"
                        >
                          <Typography
                            fontSize="13px"
                            fontWeight="500"
                            lineHeight="22.4px"
                            color="#B0B0B0"
                          >
                            Select Type
                          </Typography>
                          <img
                            src={down_arrow}
                            width="12px"
                            height="7px"
                            alt="Logo"
                          />
                        </Grid2>
                      </MenuItem>
                      <MenuItem value="Fuel">R22</MenuItem>
                      <MenuItem value="Fuel2">R134a</MenuItem>
                      <MenuItem value="Fuel3">HFC-245fa</MenuItem>
                    </TextField>
                  </Box>

                  {/* Show Quantity and Unit inputs only if Fuel Type is selected */}
                  {field.fuel && (
                    <>
                      {/* Quantity Input */}
                      <Box
                        sx={{
                          display: "flex",
                          flexDirection: "column", // Arrange label and input in a column
                          gap: "4px", // Space between label and input
                          alignItems: "flex-start", // Ensure alignment is consistent
                        }}
                      >
                        <Typography
                          variant="body2"
                          fontSize="12px"
                          fontWeight="400"
                          lineHeight="19.6px"
                        >
                          Quantity
                        </Typography>
                        <TextField
                          name="quantity"
                          value={field.quantity}
                          placeholder="Quantity"
                          onChange={(e) => handleChange(index, e)}
                          sx={{
                            width: "332.5px",
                            borderRadius: "5px",
                            border: "1px solid #D9D9D966",
                            "& .MuiInputBase-input": {
                              padding: "10px 14px", // Add consistent padding
                              height: "auto", // Allow height to adjust automatically
                            },
                          }}
                        />
                      </Box>

                      {/* Unit Input */}
                      <Box
                        sx={{
                          display: "flex",
                          flexDirection: "column", // Arrange label and input in a column
                          gap: "4px", // Space between label and input
                          alignItems: "flex-start", // Ensure alignment is consistent
                        }}
                      >
                        <Typography
                          variant="body2"
                          fontSize="12px"
                          fontWeight="400"
                          lineHeight="19.6px"
                        >
                          Unit
                        </Typography>
                        <TextField
                          select
                          name="unit"
                          value={field.unit}
                          onChange={(e) => handleChange(index, e)}
                          sx={{
                            width: "332.5px",
                            borderRadius: "5px",
                            border: "1px solid #D9D9D966",
                            "& .MuiSelect-icon": {
                              display: "none", // Hide the select icon to match the fuel field
                            },
                            "& .MuiInputBase-input": {
                              padding: "10px 14px 10px 14px", // Add consistent padding
                              height: "8px", // Ensure consistent input height
                            },
                          }}
                          SelectProps={{
                            displayEmpty: true,
                          }}
                        >
                          <MenuItem value="" disabled>
                            <Grid2
                              flexDirection="row"
                              display="flex"
                              justifyContent="space-between"
                              alignItems="center"
                            >
                              <Typography
                                fontSize="13px"
                                fontWeight="500"
                                lineHeight="22.4px"
                                color="#B0B0B0"
                              >
                                Select Type
                              </Typography>
                              <img
                                src={down_arrow}
                                width="12px"
                                height="7px"
                                alt="Logo"
                              />
                            </Grid2>
                          </MenuItem>
                          <MenuItem value="Fuel">Fuel</MenuItem>
                          <MenuItem value="Fuel2">Fuel2</MenuItem>
                          <MenuItem value="Fuel3">Fuel3</MenuItem>
                        </TextField>
                      </Box>
                    </>
                  )}
                  {field.quantity || field.unit ? (
                    <Box
                      sx={{
                        display: "flex",
                        alignItems: "center",
                        justifyContent: "center",
                        flexDirection: "column",
                        gap: "8px",
                        cursor: "pointer",
                      }}
                    >
                      <img
                        onClick={() => handleDelete(index)}
                        src={trash} // Path to your SVG delete icon
                        alt="Delete"
                        style={{
                          width: "20px",
                          height: "55px",
                          marginTop: "6px",
                          marginRight: "15px",
                        }} // Adjust the size as needed
                      />
                    </Box>
                  ) : null}
                </Box>
              </Grid2>
            ))}
          </Grid2>
 

import { useState } from "react";
 
../../../assets/images/DotsThreeVertical.svg
 
import { Grid2 } from "@mui/material";
import React from "react";
import Typography from "@mui/material/Typography";
import fuelLogo from "../../../assets/images/fuel_logo.svg";
import dot_Icon from "../../../assets/images/DotsThreeVertical.svg";
import { TextField, MenuItem } from "@mui/material";
import { useState } from "react";
import down_arrow from "../../../assets/images/down_arrow.svg";
import Box from "@mui/material/Box";
import trash from "../../../assets/images/TrashS.svg";
function RefrigerantData() {
  // Initialize fields with one empty row
  const [fields, setFields] = useState([{ fuel: "", quantity: "", unit: "" }]);
  const handleChange = (index, event) => {
    const { name, value } = event.target;
    const updatedFields = [...fields];
    updatedFields[index][name] = value;
    setFields(updatedFields);

    // Check if the current row is complete
    const isRowComplete =
      updatedFields[index].fuel &&
      updatedFields[index].quantity &&
      updatedFields[index].unit;

    // If the current row is complete and it’s the last row, add a new row
    if (isRowComplete && index === fields.length - 1) {
      setFields([...updatedFields, { fuel: "", quantity: "", unit: "" }]);
    }
  };
  const handleDelete = (index) => {
    const updatedFields = fields.filter((_, i) => i !== index);

    // Add a new empty row if there are no rows left
    if (updatedFields.length === 0) {
      updatedFields.push({ fuel: "", quantity: "", unit: "" });
    }

    setFields(updatedFields);
  };
  return (
    <div>
      {/* Main Grid */}
      <Grid2
        sx={{
          padding: "25px 45px 25px 45px",
          width: "90%",
          bgcolor: "#ffffff",
          display: "flex",
          flexDirection: "column",
          margin: "0 auto",
          borderRadius: "16px",
        }}
      >
        {/* inner main */}
        <Grid2
          sx={{
            width: "100%",
            display: "flex",
            flexDirection: "column",
            gap: "30px",
          }}
        >
          {/* grid header */}
          <Grid2 sx={{ display: "flex", flexDirection: "column", gap: "4px" }}>
            <div
              style={{
                display: "flex",
                alignItems: "center",
                justifyContent: "space-between",
                gap: "6px",
                width: "100%", // Adjust as needed
              }}
            >
              <div
                style={{ display: "flex", alignItems: "center", gap: "6px" }}
              >
                <img
                  src={fuelLogo}
                  height="15px"
                  width="10px"
                  alt="fuel-logo"
                />
                <h2
                  style={{
                    fontSize: "16px",
                    fontWeight: "600",
                    lineHeight: "28px",
                    color: "#000000",
                    margin: 0, // Removes default margin
                  }}
                >
                  Fuel Consumption
                </h2>
              </div>
              <img src={dot_Icon} alt="dot-icon" height="24px" width="24px" />
            </div>

            <div>
              <Typography
                fontSize="12px"
                fontWeight="400"
                lineHeight="22.4px"
                color="#717171"
              >
                Enter the type and quantity of fuel used (e.g., diesel,
                gasoline) to calculate direct emissions from combustion.
              </Typography>
            </div>
          </Grid2>
          {/* grid input second */}
          <Grid2 container spacing={2}>
            {fields.map((field, index) => (
              <Grid2 item xs={12} key={index}>
                <Box
                  sx={{
                    display: "flex",
                    alignItems: "flex-start", // Align items at the start for better column alignment
                    gap: "20px", // Space between each input group
                    flexWrap: "wrap", // Allow wrapping if necessary
                  }}
                >
                  {/* Fuel Type Input */}
                  <Box
                    sx={{
                      display: "flex",
                      flexDirection: "column", // Arrange label and input in a column
                      gap: "4px", // Space between label and input
                      alignItems: "flex-start", // Ensure alignment is consistent
                    }}
                  >
                    <Typography
                      variant="body2"
                      fontSize="12px"
                      fontWeight="400"
                      lineHeight="19.6px"
                    >
                      Fuel Type
                    </Typography>
                    <TextField
                      select
                      name="fuel"
                      value={field.fuel}
                      onChange={(e) => handleChange(index, e)}
                      sx={{
                        width: "332.5px",
                        borderRadius: "5px",
                        border: "1px solid #D9D9D966",
                        "& .MuiSelect-icon": {
                          display: "none",
                        },
                        "& .MuiInputBase-input": {
                          padding: "10px 14px 10px 14px", // Add consistent padding
                          height: "8px",
                        },
                      }}
                      SelectProps={{
                        displayEmpty: true,
                      }}
                    >
                      <MenuItem value="" disabled>
                        <Grid2
                          flexDirection="row"
                          display="flex"
                          justifyContent="space-between"
                          alignItems="center"
                        >
                          <Typography
                            fontSize="13px"
                            fontWeight="500"
                            lineHeight="22.4px"
                            color="#B0B0B0"
                          >
                            Select Type
                          </Typography>
                          <img
                            src={down_arrow}
                            width="12px"
                            height="7px"
                            alt="Logo"
                          />
                        </Grid2>
                      </MenuItem>
                      <MenuItem value="Fuel">Gasoline/Petrol</MenuItem>
                      <MenuItem value="Fuel2">LPG</MenuItem>
                      <MenuItem value="Fuel3">CNG</MenuItem>
                    </TextField>
                  </Box>

                  {/* Show Quantity and Unit inputs only if Fuel Type is selected */}
                  {field.fuel && (
                    <>
                      {/* Quantity Input */}
                      <Box
                        sx={{
                          display: "flex",
                          flexDirection: "column", // Arrange label and input in a column
                          gap: "4px", // Space between label and input
                          alignItems: "flex-start", // Ensure alignment is consistent
                        }}
                      >
                        <Typography
                          variant="body2"
                          fontSize="12px"
                          fontWeight="400"
                          lineHeight="19.6px"
                        >
                          Quantity
                        </Typography>
                        <TextField
                          name="quantity"
                          value={field.quantity}
                          placeholder="Quantity"
                          onChange={(e) => handleChange(index, e)}
                          sx={{
                            width: "332.5px",
                            borderRadius: "5px",
                            border: "1px solid #D9D9D966",
                            "& .MuiInputBase-input": {
                              padding: "10px 14px", // Add consistent padding
                              height: "auto", // Allow height to adjust automatically
                            },
                          }}
                        />
                      </Box>

                      {/* Unit Input */}
                      <Box
                        sx={{
                          display: "flex",
                          flexDirection: "column", // Arrange label and input in a column
                          gap: "4px", // Space between label and input
                          alignItems: "flex-start", // Ensure alignment is consistent
                        }}
                      >
                        <Typography
                          variant="body2"
                          fontSize="12px"
                          fontWeight="400"
                          lineHeight="19.6px"
                        >
                          Unit
                        </Typography>
                        <TextField
                          select
                          name="unit"
                          value={field.unit}
                          onChange={(e) => handleChange(index, e)}
                          sx={{
                            width: "332.5px",
                            borderRadius: "5px",
                            border: "1px solid #D9D9D966",
                            "& .MuiSelect-icon": {
                              display: "none", // Hide the select icon to match the fuel field
                            },
                            "& .MuiInputBase-input": {
                              padding: "10px 14px 10px 14px", // Add consistent padding
                              height: "8px", // Ensure consistent input height
                            },
                          }}
                          SelectProps={{
                            displayEmpty: true,
                          }}
                        >
                          <MenuItem value="" disabled>
                            <Grid2
                              flexDirection="row"
                              display="flex"
                              justifyContent="space-between"
                              alignItems="center"
                            >
                              <Typography
                                fontSize="13px"
                                fontWeight="500"
                                lineHeight="22.4px"
                                color="#B0B0B0"
                              >
                                Select Type
                              </Typography>
                              <img
                                src={down_arrow}
                                width="12px"
                                height="7px"
                                alt="Logo"
                              />
                            </Grid2>
                          </MenuItem>
                          <MenuItem value="Fuel">litres</MenuItem>
                          <MenuItem value="Fuel2">Gallons</MenuItem>
                        </TextField>
                      </Box>
                    </>
                  )}
                  {field.quantity || field.unit ? (
                    <Box
                      sx={{
                        display: "flex",
                        alignItems: "center",
                        justifyContent: "center",
                        flexDirection: "column",
                        gap: "8px",
                        cursor: "pointer",
                      }}
                    >
                      <img
                        onClick={() => handleDelete(index)}
                        src={trash} // Path to your SVG delete icon
                        alt="Delete"
                        style={{
                          width: "20px",
                          height: "55px",
                          marginTop: "6px",
                          marginRight: "15px",
                        }} // Adjust the size as needed
                      />
                    </Box>
                  ) : null}
                </Box>
              </Grid2>
            ))}
          </Grid2>
        </Grid2>
      </Grid2>
    </div>
  );
}

export default RefrigerantData;

 
FuelConsumption
 
import { Grid2 } from "@mui/material";
import React from "react";
import Typography from "@mui/material/Typography";
import refri_logo from "../../../assets/images/refri_logo.svg"
import { TextField, MenuItem } from "@mui/material";
import { useState } from "react";
import down_arrow from "../../../assets/images/down_arrow.svg";
import Box from "@mui/material/Box";
import trash from "../../../assets/images/TrashS.svg";
function RefrigerantData() {
  // Initialize fields with one empty row
  const [fields, setFields] = useState([{ fuel: "", quantity: "", unit: "" }]);
  const handleChange = (index, event) => {
    const { name, value } = event.target;
    const updatedFields = [...fields];
    updatedFields[index][name] = value;
    setFields(updatedFields);

    // Check if the current row is complete
    const isRowComplete =
      updatedFields[index].fuel &&
      updatedFields[index].quantity &&
      updatedFields[index].unit;

    // If the current row is complete and it’s the last row, add a new row
    if (isRowComplete && index === fields.length - 1) {
      setFields([...updatedFields, { fuel: "", quantity: "", unit: "" }]);
    }
  };
  const handleDelete = (index) => {
    const updatedFields = fields.filter((_, i) => i !== index);

    // Add a new empty row if there are no rows left
    if (updatedFields.length === 0) {
      updatedFields.push({ fuel: "", quantity: "", unit: "" });
    }

    setFields(updatedFields);
  };
  return (
    <div>
      {/* Main Grid */}
      <Grid2
        sx={{
          padding: "25px 45px 25px 45px",
          width: "90%",
          bgcolor: "#ffffff",
          display: "flex",
          flexDirection: "column",
          margin: "0 auto",
          borderRadius: "16px",
        }}
      >
        {/* inner main */}
        <Grid2
          sx={{
            width: "100%",
            display: "flex",
            flexDirection: "column",
            gap: "30px",
          }}
        >
          {/* grid header */}
          <Grid2 sx={{ display: "flex", flexDirection: "column", gap: "4px" }}>
            <div
              style={{
                display: "flex",
                alignItems: "center",
                justifyContent: "space-between",
                gap: "6px",
                width: "100%", // Adjust as needed
              }}
            >
              <div
                style={{ display: "flex", alignItems: "center", gap: "6px" }}
              >
                <img
                  src={refri_logo}
                  height="15px"
                  width="10px"
                  alt="fuel-logo"
                />
                <h2
                  style={{
                    fontSize: "16px",
                    fontWeight: "600",
                    lineHeight: "28px",
                    color: "#000000",
                    margin: 0, // Removes default margin
                  }}
                >
                  Refrigerant Data
                </h2>
              </div>
              <img src="" alt="dot-icon" height="24px" width="24px" />
            </div>

            <div>
              <Typography
                fontSize="12px"
                fontWeight="400"
                lineHeight="22.4px"
                color="#717171"
              >
              Input the type and amount of refrigerant used to account for emissions from refrigerant Consumption.
              </Typography>
            </div>
          </Grid2>
          {/* grid input second */}
          <Grid2 container spacing={2}>
            {fields.map((field, index) => (
              <Grid2 item xs={12} key={index}>
                <Box
                  sx={{
                    display: "flex",
                    alignItems: "flex-start", // Align items at the start for better column alignment
                    gap: "20px", // Space between each input group
                    flexWrap: "wrap", // Allow wrapping if necessary
                  }}
                >
                  {/* Fuel Type Input */}
                  <Box
                    sx={{
                      display: "flex",
                      flexDirection: "column", // Arrange label and input in a column
                      gap: "4px", // Space between label and input
                      alignItems: "flex-start", // Ensure alignment is consistent
                    }}
                  >
                    <Typography
                      variant="body2"
                      fontSize="12px"
                      fontWeight="400"
                      lineHeight="19.6px"
                    >
                    Types of Refrigerant
                    </Typography>
                    <TextField
                      select
                      name="fuel"
                      value={field.fuel}
                      onChange={(e) => handleChange(index, e)}
                      sx={{
                        width: "332.5px",
                        borderRadius: "5px",
                        border: "1px solid #D9D9D966",
                        "& .MuiSelect-icon": {
                          display: "none",
                        },
                        "& .MuiInputBase-input": {
                          padding: "10px 14px 10px 14px", // Add consistent padding
                          height: "8px",
                        },
                      }}
                      SelectProps={{
                        displayEmpty: true,
                      }}
                    >
                      <MenuItem value="" disabled>
                        <Grid2
                          flexDirection="row"
                          display="flex"
                          justifyContent="space-between"
                          alignItems="center"
                        >
                          <Typography
                            fontSize="13px"
                            fontWeight="500"
                            lineHeight="22.4px"
                            color="#B0B0B0"
                          >
                            Select Type
                          </Typography>
                          <img
                            src={down_arrow}
                            width="12px"
                            height="7px"
                            alt="Logo"
                          />
                        </Grid2>
                      </MenuItem>
                      <MenuItem value="Fuel">R22</MenuItem>
                      <MenuItem value="Fuel2">R134a</MenuItem>
                      <MenuItem value="Fuel3">Fuel3</MenuItem>
                    </TextField>
                  </Box>

                  {/* Show Quantity and Unit inputs only if Fuel Type is selected */}
                  {field.fuel && (
                    <>
                      {/* Quantity Input */}
                      <Box
                        sx={{
                          display: "flex",
                          flexDirection: "column", // Arrange label and input in a column
                          gap: "4px", // Space between label and input
                          alignItems: "flex-start", // Ensure alignment is consistent
                        }}
                      >
                        <Typography
                          variant="body2"
                          fontSize="12px"
                          fontWeight="400"
                          lineHeight="19.6px"
                        >
                          Quantity
                        </Typography>
                        <TextField
                          name="quantity"
                          value={field.quantity}
                          placeholder="Quantity"
                          onChange={(e) => handleChange(index, e)}
                          sx={{
                            width: "332.5px",
                            borderRadius: "5px",
                            border: "1px solid #D9D9D966",
                            "& .MuiInputBase-input": {
                              padding: "10px 14px", // Add consistent padding
                              height: "auto", // Allow height to adjust automatically
                            },
                          }}
                        />
                      </Box>

                      {/* Unit Input */}
                      <Box
                        sx={{
                          display: "flex",
                          flexDirection: "column", // Arrange label and input in a column
                          gap: "4px", // Space between label and input
                          alignItems: "flex-start", // Ensure alignment is consistent
                        }}
                      >
                        <Typography
                          variant="body2"
                          fontSize="12px"
                          fontWeight="400"
                          lineHeight="19.6px"
                        >
                          Unit
                        </Typography>
                        <TextField
                          select
                          name="unit"
                          value={field.unit}
                          onChange={(e) => handleChange(index, e)}
                          sx={{
                            width: "332.5px",
                            borderRadius: "5px",
                            border: "1px solid #D9D9D966",
                            "& .MuiSelect-icon": {
                              display: "none", // Hide the select icon to match the fuel field
                            },
                            "& .MuiInputBase-input": {
                              padding: "10px 14px 10px 14px", // Add consistent padding
                              height: "8px", // Ensure consistent input height
                            },
                          }}
                          SelectProps={{
                            displayEmpty: true,
                          }}
                        >
                          <MenuItem value="" disabled>
                            <Grid2
                              flexDirection="row"
                              display="flex"
                              justifyContent="space-between"
                              alignItems="center"
                            >
                              <Typography
                                fontSize="13px"
                                fontWeight="500"
                                lineHeight="22.4px"
                                color="#B0B0B0"
                              >
                                Select Type
                              </Typography>
                              <img
                                src={down_arrow}
                                width="12px"
                                height="7px"
                                alt="Logo"
                              />
                            </Grid2>
                          </MenuItem>
                          <MenuItem value="Fuel">Fuel</MenuItem>
                          <MenuItem value="Fuel2">Fuel2</MenuItem>
                          <MenuItem value="Fuel3">Fuel3</MenuItem>
                        </TextField>
                      </Box>
                    </>
                  )}
                  {field.quantity || field.unit ? (
                    <Box
                      sx={{
                        display: "flex",
                        alignItems: "center",
                        justifyContent: "center",
                        flexDirection: "column",
                        gap: "8px",
                        cursor: "pointer",
                      }}
                    >
                      <img
                        onClick={() => handleDelete(index)}
                        src={trash} // Path to your SVG delete icon
                        alt="Delete"
                        style={{
                          width: "20px",
                          height: "55px",
                          marginTop: "6px",
                          marginRight: "15px",
                        }} // Adjust the size as needed
                      />
                    </Box>
                  ) : null}
                </Box>
              </Grid2>
            ))}
          </Grid2>
        </Grid2>
      </Grid2>
    </div>
  );
}

export default RefrigerantData;

 

import dot_Icon from "../../../assets/images/DotsThreeVertical.svg"
 

import dot_Icon from "../../../assets/images/.svg"
 

import dot_Icon from "../../../assets/images/src/assets/images/.svg";
 
../../../assets/images/DotsThreeVertical.svg
 

          {/* grid input second */}
          <Grid2 container spacing={2}>
            {fields.map((field, index) => (
              <Grid2 item xs={12} key={index}>
                <Box
                  sx={{
                    display: "flex",
                    alignItems: "flex-start", // Align items at the start for better column alignment
                    gap: "20px", // Space between each input group
                    flexWrap: "wrap", // Allow wrapping if necessary
                  }}
                >
                  {/* Fuel Type Input */}
                  <Box
                    sx={{
                      display: "flex",
                      flexDirection: "column", // Arrange label and input in a column
                      gap: "4px", // Space between label and input
                      alignItems: "flex-start", // Ensure alignment is consistent
                    }}
                  >
                    <Typography
                      variant="body2"
                      fontSize="12px"
                      fontWeight="400"
                      lineHeight="19.6px"
                    >
                      Types of Refrigerant
                    </Typography>
                    <TextField
                      select
                      name="fuel"
                      value={field.fuel}
                      onChange={(e) => handleChange(index, e)}
                      sx={{
                        width: "332.5px",
                        borderRadius: "5px",
                        border: "1px solid #D9D9D966",
                        "& .MuiSelect-icon": {
                          display: "none",
                        },
                        "& .MuiInputBase-input": {
                          padding: "10px 14px 10px 14px", // Add consistent padding
                          height: "8px",
                        },
                      }}
                      SelectProps={{
                        displayEmpty: true,
                      }}
                    >
                      <MenuItem value="" disabled>
                        <Grid2
                          flexDirection="row"
                          display="flex"
                          justifyContent="space-between"
                          alignItems="center"
                        >
                          <Typography
                            fontSize="13px"
                            fontWeight="500"
                            lineHeight="22.4px"
                            color="#B0B0B0"
                          >
                            Select Type
                          </Typography>
                          <img
                            src={down_arrow}
                            width="12px"
                            height="7px"
                            alt="Logo"
                          />
                        </Grid2>
                      </MenuItem>
                      <MenuItem value="Fuel">R22</MenuItem>
                      <MenuItem value="Fuel2">R134a</MenuItem>
                      <MenuItem value="Fuel3">HFC-245fa</MenuItem>
                    </TextField>
                  </Box>

                  {/* Show Quantity and Unit inputs only if Fuel Type is selected */}
                  {field.fuel && (
                    <>
                      {/* Quantity Input */}
                      <Box
                        sx={{
                          display: "flex",
                          flexDirection: "column", // Arrange label and input in a column
                          gap: "4px", // Space between label and input
                          alignItems: "flex-start", // Ensure alignment is consistent
                        }}
                      >
                        <Typography
                          variant="body2"
                          fontSize="12px"
                          fontWeight="400"
                          lineHeight="19.6px"
                        >
                          Quantity
                        </Typography>
                        <TextField
                          name="quantity"
                          value={field.quantity}
                          placeholder="Quantity"
                          onChange={(e) => handleChange(index, e)}
                          sx={{
                            width: "332.5px",
                            borderRadius: "5px",
                            border: "1px solid #D9D9D966",
                            "& .MuiInputBase-input": {
                              padding: "10px 14px", // Add consistent padding
                              height: "auto", // Allow height to adjust automatically
                            },
                          }}
                        />
                      </Box>

                      {/* Unit Input */}
                      <Box
                        sx={{
                          display: "flex",
                          flexDirection: "column", // Arrange label and input in a column
                          gap: "4px", // Space between label and input
                          alignItems: "flex-start", // Ensure alignment is consistent
                        }}
                      >
                        <Typography
                          variant="body2"
                          fontSize="12px"
                          fontWeight="400"
                          lineHeight="19.6px"
                        >
                          Unit
                        </Typography>
                        <TextField
                          select
                          name="unit"
                          value={field.unit}
                          onChange={(e) => handleChange(index, e)}
                          sx={{
                            width: "332.5px",
                            borderRadius: "5px",
                            border: "1px solid #D9D9D966",
                            "& .MuiSelect-icon": {
                              display: "none", // Hide the select icon to match the fuel field
                            },
                            "& .MuiInputBase-input": {
                              padding: "10px 14px 10px 14px", // Add consistent padding
                              height: "8px", // Ensure consistent input height
                            },
                          }}
                          SelectProps={{
                            displayEmpty: true,
                          }}
                        >
                          <MenuItem value="" disabled>
                            <Grid2
                              flexDirection="row"
                              display="flex"
                              justifyContent="space-between"
                              alignItems="center"
                            >
                              <Typography
                                fontSize="13px"
                                fontWeight="500"
                                lineHeight="22.4px"
                                color="#B0B0B0"
                              >
                                Select Type
                              </Typography>
                              <img
                                src={down_arrow}
                                width="12px"
                                height="7px"
                                alt="Logo"
                              />
                            </Grid2>
                          </MenuItem>
                          <MenuItem value="Fuel">Fuel</MenuItem>
                          <MenuItem value="Fuel2">Fuel2</MenuItem>
                          <MenuItem value="Fuel3">Fuel3</MenuItem>
                        </TextField>
                      </Box>
                    </>
                  )}
                  {field.quantity || field.unit ? (
                    <Box
                      sx={{
                        display: "flex",
                        alignItems: "center",
                        justifyContent: "center",
                        flexDirection: "column",
                        gap: "8px",
                        cursor: "pointer",
                      }}
                    >
                      <img
                        onClick={() => handleDelete(index)}
                        src={trash} // Path to your SVG delete icon
                        alt="Delete"
                        style={{
                          width: "20px",
                          height: "55px",
                          marginTop: "6px",
                          marginRight: "15px",
                        }} // Adjust the size as needed
                      />
                    </Box>
                  ) : null}
                </Box>
              </Grid2>
            ))}
          </Grid2>
 

import dot_Icon from "../../../assets/images/DotsThreeVertical.svg";
 

import { TextField, MenuItem } from "@mui/material";
 

import down_arrow from "../../../assets/images/down_arrow.svg";
 

import trash from "../../../assets/images/TrashS.svg";
 

  // Initialize fields with one empty row
  const [fields, setFields] = useState([{ fuel: "", quantity: "", unit: "" }]);
  const handleChange = (index, event) => {
    const { name, value } = event.target;
    const updatedFields = [...fields];
    updatedFields[index][name] = value;
    setFields(updatedFields);

    // Check if the current row is complete
    const isRowComplete =
      updatedFields[index].fuel &&
      updatedFields[index].quantity &&
      updatedFields[index].unit;

    // If the current row is complete and it’s the last row, add a new row
    if (isRowComplete && index === fields.length - 1) {
      setFields([...updatedFields, { fuel: "", quantity: "", unit: "" }]);
    }
  };
  const handleDelete = (index) => {
    const updatedFields = fields.filter((_, i) => i !== index);

    // Add a new empty row if there are no rows left
    if (updatedFields.length === 0) {
      updatedFields.push({ fuel: "", quantity: "", unit: "" });
    }

    setFields(updatedFields);
  };
 
import React, { useState } from "react";
import {
  Box,
  Grid,
  Typography,
  TextField,
  MenuItem,
  Grid2,
} from "@mui/material";
import emmision_logo from "../../../assets/images/emisson_logo.svg";
import {
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Paper,
} from "@mui/material";

function ProcessEmission() {
  const rows = [
    {
      processType: "Emission Type 1",
      category: "Category 1",
      subCategory: "Sub Category 1",
      subSubCategory: "Sub Sub Category 1",
      subSubSubCategory: "Sub Sub Sub Category 1",
      quantity: "100",
    },
    {
      processType: "Emission Type 1",
      category: "Category 1",
      subCategory: "Sub Category 1",
      subSubCategory: "Sub Sub Category 1",
      subSubSubCategory: "Sub Sub Sub Category 1",
      quantity: "100",
    },
    {
      processType: "Emission Type 1",
      category: "Category 1",
      subCategory: "Sub Category 1",
      subSubCategory: "Sub Sub Category 1",
      subSubSubCategory: "Sub Sub Sub Category 1",
      quantity: "100",
    },
    {
      processType: "Emission Type 1",
      category: "Category 1",
      subCategory: "Sub Category 1",
      subSubCategory: "Sub Sub Category 1",
      subSubSubCategory: "Sub Sub Sub Category 1",
      quantity: "100",
    },
    {
      processType: "Emission Type 1",
      category: "Category 1",
      subCategory: "Sub Category 1",
      subSubCategory: "Sub Sub Category 1",
      subSubSubCategory: "Sub Sub Sub Category 1",
      quantity: "100",
    },
  ];
  // Initialize fields with one empty row
  const [fields, setFields] = useState([{ fuel: "", quantity: "", unit: "" }]);

  // Handle changes in any input field
  const handleChange = (index, event) => {
    const { name, value } = event.target;
    const updatedFields = [...fields];
    updatedFields[index][name] = value;
    setFields(updatedFields);

    // Check if the current row is complete
    const isRowComplete =
      updatedFields[index].fuel &&
      updatedFields[index].quantity &&
      updatedFields[index].unit;

    // If the current row is complete and it’s the last row, add a new row
    if (isRowComplete && index === fields.length - 1) {
      setFields([...updatedFields, { fuel: "", quantity: "", unit: "" }]);
    }
  };

  return (
    <div>
      <Grid
        container
        sx={{
          padding: "35px 45px 45px 45px",
          width: "90%",
          bgcolor: "#ffffff",
          display: "flex",
          flexDirection: "column",
          margin: "0 auto",
          borderRadius: "16px",
        }}
      >
        <Grid item xs={12} sx={{ marginBottom: "20px" }}>
          <Typography
            variant="h1"
            fontSize="20px"
            fontWeight="600"
            lineHeight="28px"
            color="#000000"
            sx={{ display: "flex", alignItems: "center" }}
          >
            <img
              src={emmision_logo}
              alt="fuel_logo"
              width="18.36px"
              height="19.49px"
              style={{ marginRight: "6px" }}
            />
            Process Emission
          </Typography>
          <Typography
            variant="body1"
            fontSize="12px"
            fontWeight="400"
            lineHeight="22.4px"
            color="#717171"
            sx={{ marginTop: "8px" }}
          >
            Record the type of industrial process and the quantity of product
            processed to calculate emissions directly related to production
            activities.
          </Typography>
        </Grid>
        <Grid2
          sx={{
            display: "flex",
            flexDirection: "column",
            gap: "20px",
            borderRadius: "10px",
            border: "1px solid none", // Border around the Grid2 if needed
          }}
        >
          <TableContainer>
            <Table sx={{ borderCollapse: "separate", borderSpacing: "0 10px" }}>
              <TableHead sx={{ bgcolor: "#f2fcfc", border: "1px solid #ddd" }}>
                <TableRow>
                  <TableCell>Type of Process Emission</TableCell>
                  <TableCell>Category</TableCell>
                  <TableCell>Sub Category</TableCell>
                  <TableCell>Sub Sub Category</TableCell>
                  <TableCell>Sub Sub Sub Category</TableCell>
                  <TableCell>Quantity</TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {rows.map((row, index) => (
                  <TableRow
                    key={index}
                    sx={{
                      border: "1px solid none", // Border around each row
                      borderRadius: "4px", // Rounded corners for each row
                      backgroundColor: "#fff", // Optional: Background color for rows
                      "&:not(:last-child)": {
                        borderBottom: "none", // Remove the bottom border of each row except the last one
                      },
                    }}
                  >
                    <TableCell>{row.processType}</TableCell>
                    <TableCell>{row.category}</TableCell>
                    <TableCell>{row.subCategory}</TableCell>
                    <TableCell>{row.subSubCategory}</TableCell>
                    <TableCell>{row.subSubSubCategory}</TableCell>
                    <TableCell>{row.quantity}</TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          </TableContainer>
        </Grid2>
      </Grid>
    </div>
  );
}

export default ProcessEmission;

 

  // Initialize fields with one empty row
  const [fields, setFields] = useState([{ fuel: "", quantity: "", unit: "" }]);
  const handleChange = (index, event) => {
    const { name, value } = event.target;
    const updatedFields = [...fields];
    updatedFields[index][name] = value;
    setFields(updatedFields);

    // Check if the current row is complete
    const isRowComplete =
      updatedFields[index].fuel &&
      updatedFields[index].quantity &&
      updatedFields[index].unit;

    // If the current row is complete and it’s the last row, add a new row
    if (isRowComplete && index === fields.length - 1) {
      setFields([...updatedFields, { fuel: "", quantity: "", unit: "" }]);
    }
  };
  const handleDelete = (index) => {
    const updatedFields = fields.filter((_, i) => i !== index);

    // Add a new empty row if there are no rows left
    if (updatedFields.length === 0) {
      updatedFields.push({ fuel: "", quantity: "", unit: "" });
    }

    setFields(updatedFields);
  };
 
import React, { useState } from "react";
import {
  Box,
  Grid,
  Typography,
  TextField,
  MenuItem,
  Grid2,
} from "@mui/material";
import emmision_logo from "../../../assets/images/emisson_logo.svg";
import {
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Paper,
} from "@mui/material";

function ProcessEmission() {
  const rows = [
    {
      processType: "Emission Type 1",
      category: "Category 1",
      subCategory: "Sub Category 1",
      subSubCategory: "Sub Sub Category 1",
      subSubSubCategory: "Sub Sub Sub Category 1",
      quantity: "100",
    },
    {
      processType: "Emission Type 1",
      category: "Category 1",
      subCategory: "Sub Category 1",
      subSubCategory: "Sub Sub Category 1",
      subSubSubCategory: "Sub Sub Sub Category 1",
      quantity: "100",
    },
    {
      processType: "Emission Type 1",
      category: "Category 1",
      subCategory: "Sub Category 1",
      subSubCategory: "Sub Sub Category 1",
      subSubSubCategory: "Sub Sub Sub Category 1",
      quantity: "100",
    },
    {
      processType: "Emission Type 1",
      category: "Category 1",
      subCategory: "Sub Category 1",
      subSubCategory: "Sub Sub Category 1",
      subSubSubCategory: "Sub Sub Sub Category 1",
      quantity: "100",
    },
    {
      processType: "Emission Type 1",
      category: "Category 1",
      subCategory: "Sub Category 1",
      subSubCategory: "Sub Sub Category 1",
      subSubSubCategory: "Sub Sub Sub Category 1",
      quantity: "100",
    },
  ];
  // Initialize fields with one empty row
  const [fields, setFields] = useState([{ fuel: "", quantity: "", unit: "" }]);

  // Handle changes in any input field
  const handleChange = (index, event) => {
    const { name, value } = event.target;
    const updatedFields = [...fields];
    updatedFields[index][name] = value;
    setFields(updatedFields);

    // Check if the current row is complete
    const isRowComplete =
      updatedFields[index].fuel &&
      updatedFields[index].quantity &&
      updatedFields[index].unit;

    // If the current row is complete and it’s the last row, add a new row
    if (isRowComplete && index === fields.length - 1) {
      setFields([...updatedFields, { fuel: "", quantity: "", unit: "" }]);
    }
  };

  return (
    <div>
      <Grid
        container
        sx={{
          padding: "35px 45px 45px 45px",
          width: "90%",
          bgcolor: "#ffffff",
          display: "flex",
          flexDirection: "column",
          margin: "0 auto",
          borderRadius: "16px",
        }}
      >
        <Grid item xs={12} sx={{ marginBottom: "20px" }}>
          <Typography
            variant="h1"
            fontSize="20px"
            fontWeight="600"
            lineHeight="28px"
            color="#000000"
            sx={{ display: "flex", alignItems: "center" }}
          >
            <img
              src={emmision_logo}
              alt="fuel_logo"
              width="18.36px"
              height="19.49px"
              style={{ marginRight: "6px" }}
            />
            Process Emission
          </Typography>
          <Typography
            variant="body1"
            fontSize="12px"
            fontWeight="400"
            lineHeight="22.4px"
            color="#717171"
            sx={{ marginTop: "8px" }}
          >
            Record the type of industrial process and the quantity of product
            processed to calculate emissions directly related to production
            activities.
          </Typography>
        </Grid>
        <Grid2
          sx={{
            display: "flex",
            flexDirection: "column",
            gap: "20px",
            borderRadius: "10px",
            border: "1px solid none", // Border around the Grid2 if needed
          }}
        >
          <TableContainer>
            <Table sx={{ borderCollapse: "separate", borderSpacing: "0 10px" }}>
              <TableHead sx={{ bgcolor: "#f2fcfc", border: "1px solid #ddd" }}>
                <TableRow>
                  <TableCell>Type of Process Emission</TableCell>
                  <TableCell>Category</TableCell>
                  <TableCell>Sub Category</TableCell>
                  <TableCell>Sub Sub Category</TableCell>
                  <TableCell>Sub Sub Sub Category</TableCell>
                  <TableCell>Quantity</TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {rows.map((row, index) => (
                  <TableRow
                    key={index}
                    sx={{
                      border: "1px solid none", // Border around each row
                      borderRadius: "4px", // Rounded corners for each row
                      backgroundColor: "#fff", // Optional: Background color for rows
                      "&:not(:last-child)": {
                        borderBottom: "none", // Remove the bottom border of each row except the last one
                      },
                    }}
                  >
                    <TableCell>{row.processType}</TableCell>
                    <TableCell>{row.category}</TableCell>
                    <TableCell>{row.subCategory}</TableCell>
                    <TableCell>{row.subSubCategory}</TableCell>
                    <TableCell>{row.subSubSubCategory}</TableCell>
                    <TableCell>{row.quantity}</TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          </TableContainer>
        </Grid2>
      </Grid>
    </div>
  );
}

export default ProcessEmission;

 

                      </Grid2>
 

                      <Grid2>
 

                          <MenuItem value="Fuel3">HFC-245fa</MenuItem>
 

import fuelLogo from "../../../assets/images/fuel_logo.svg";
 

                      Fuel Type
 

                Enter the type and quantity of fuel used (e.g., diesel,
                gasoline) to calculate direct emissions from combustion.
 
Fuel Consumption
 
FuelConsumption
 
import React, { useState } from "react";
import {
  Box,
  Grid,
  Typography,
  TextField,
  MenuItem,
  Grid2,
} from "@mui/material";
import Refri_Logo from "../../../assets/images/refri_logo.svg"
import down_Arrow from "../../../assets/images/down_arrow.svg";
import InputAdornment from "@mui/material/InputAdornment";

function RefrigerantData() {
  // Initialize fields with one empty row
  const [fields, setFields] = useState([{ fuel: "", quantity: "", unit: "" }]);

  // Handle changes in any input field
  const handleChange = (index, event) => {
    const { name, value } = event.target;
    const updatedFields = [...fields];
    updatedFields[index][name] = value;
    setFields(updatedFields);

    // Check if the current row is complete
    const isRowComplete =
      updatedFields[index].fuel &&
      updatedFields[index].quantity &&
      updatedFields[index].unit;

    // If the current row is complete and it’s the last row, add a new row
    if (isRowComplete && index === fields.length - 1) {
      setFields([...updatedFields, { fuel: "", quantity: "", unit: "" }]);
    }
  };

  return (
    <div>
      <Grid
        container
        sx={{
          padding: "35px 45px 45px 45px",
          width: "90%",
          bgcolor: "#ffffff",
          display: "flex",
          flexDirection: "column",
          margin: "0 auto",
          borderRadius: "16px",
        }}
      >
        <Grid item xs={12} sx={{ marginBottom: "20px" }}>
          <Typography
            variant="h1"
            fontSize="20px"
            fontWeight="600"
            lineHeight="28px"
            color="#000000"
            sx={{ display: "flex", alignItems: "center" }}
          >
            <img
              src={Refri_Logo}
              alt="fuel_logo"
              width="18.36px"
              height="19.49px"
              style={{ marginRight: "6px" }}
            />
            Fuel Consumption
          </Typography>
          <Typography
            variant="body1"
            fontSize="12px"
            fontWeight="400"
            lineHeight="22.4px"
            color="#717171"
            sx={{ marginTop: "8px" }}
          >
          Input the type and amount of refrigerant used to account for emissions from refrigerant Consumption.
          </Typography>
        </Grid>
        <Grid2>
          <Grid container spacing={2}>
            {fields.map((field, index) => (
              <Grid item xs={12} key={index}>
                <Box
                  sx={{
                    display: "flex",
                    alignItems: "center",
                  }}
                >
                  <Box sx={{ flex: 1 }}>
                    <Typography variant="body2">Fuel Type</Typography>
                    <TextField
                      select
                      name="fuel"
                      value={field.fuel}
                      onChange={(e) => handleChange(index, e)}
                      sx={{
                        width: "365px",
                        borderRadius: "5px",
                        border: "1px solid #D9D9D966",
                        height: "6vh",
                        mt: "-18px",
                        "& .MuiSelect-icon": {
                          display: "none",
                        },
                        "& .MuiInputBase-input": {
                          height: "10px",
                        },
                      }}
                      SelectProps={{
                        displayEmpty: true,
                      }}
                    >
                      <MenuItem value="" disabled>
                      Add Type of refrigerant
                      </MenuItem>
                      <MenuItem value="Fuel">Fuel</MenuItem>
                      <MenuItem value="Fuel2">Fuel2</MenuItem>
                      <MenuItem value="Fuel3">Fuel3</MenuItem>
                    </TextField>
                  </Box>

                  {field.fuel && (
                    <Box sx={{ display: "flex", gap: "16px" }}>
                      <Box sx={{ flex: 1 }}>
                        <Typography variant="body2">Quantity</Typography>
                        <TextField
                          name="quantity"
                          value={field.quantity}
                          placeholder="Quantity"
                          onChange={(e) => handleChange(index, e)}
                          sx={{
                            width: "365px",
                            borderRadius: "5px",
                            border: "1px solid #D9D9D966",
                            height: "6vh",
                            mb: "18.5px",
                          }}
                        />
                      </Box>

                      <Box sx={{ flex: 1 }}>
                        <Typography variant="body2">Unit</Typography>
                        <TextField
                          select
                          name="unit"
                          value={field.unit}
                          onChange={(e) => handleChange(index, e)}
                          sx={{
                            width: "365px",
                            borderRadius: "5px",
                            border: "1px solid #D9D9D966",
                            height: "6vh",
                          }}
                          SelectProps={{
                            displayEmpty: true,
                          }}
                        >
                          <MenuItem value="" disabled>
                            Select unit
                          </MenuItem>
                          <MenuItem value="Gallons">Gallons</MenuItem>
                          <MenuItem value="Liters">Liters</MenuItem>
                        </TextField>
                      </Box>
                    </Box>
                  )}
                </Box>
              </Grid>
            ))}
          </Grid>
        </Grid2>
      </Grid>
    </div>
  );
}

export default RefrigerantData;

 

import IconButton from "@mui/material/IconButton";
 
DotsThreeVertical.svg
 
src/images/fuel_logo.svg
 
Check
 
import React, { useState } from "react";
import { Box, Grid2, Typography, TextField, MenuItem } from "@mui/material";
import fuel_Logo from "../../../assets/images/fuel_logo.svg";
import down_Arrow from "../../../assets/images/down_arrow.svg";
import InputAdornment from "@mui/material/InputAdornment";

function FuelConsumption() {
  // Initialize fields with one empty row
  const [fields, setFields] = useState([{ fuel: "", quantity: "", unit: "" }]);

  // Handle changes in any input field
  const handleChange = (index, event) => {
    const { name, value } = event.target;
    const updatedFields = [...fields];
    updatedFields[index][name] = value;
    setFields(updatedFields);

    // Check if the current row is complete
    const isRowComplete =
      updatedFields[index].fuel &&
      updatedFields[index].quantity &&
      updatedFields[index].unit;

    // If the current row is complete and it’s the last row, add a new row
    if (isRowComplete && index === fields.length - 1) {
      setFields([...updatedFields, { fuel: "", quantity: "", unit: "" }]);
    }
  };

  return (
    <div>
      <Grid2
        sx={{
          padding: "35px 45px 45px 45px",
          width: "90%",
          bgcolor: "#ffffff",
          display: "flex",
          flexDirection: "column",
          margin: "0 auto",
          borderRadius: "16px",
        }}
      >
        <Grid2
          sx={{
            width: "90%",
            display: "flex",
            flexDirection: "column",
          }}
        >
          <Grid2
            sx={{
              width: "100%",
              height: "66px",
              display: "flex",
              flexDirection: "row",
            }}
          >
            <Grid2 item>
              <img
                src={fuel_Logo}
                alt="fuel_logo"
                width="13.36px"
                height="19.49px"
                style={{ marginRight: "6px" }}
              />
              <Typography
                variant="h1"
                fontSize="20px"
                fontWeight="600"
                lineHeight="28px"
                color="#000000"
              >
                {" "}
                Fuel Consumption
              </Typography>
            </Grid2>
          </Grid2>
        </Grid2>
      </Grid2>
    </div>
  );
}

export default FuelConsumption;

{
  /* <Grid2
container
sx={{
  padding: "35px 45px 45px 45px",
  width: "90%",
  bgcolor: "#ffffff",
  display: "flex",
  flexDirection: "column",
  margin: "0 auto",
  borderRadius: "16px",
}}
>
<Grid2 item xs={12} sx={{ marginBottom: "20px" }}>
  <Typography
    variant="h1"
    fontSize="20px"
    fontWeight="600"
    lineHeight="28px"
    color="#000000"
    sx={{ display: "flex", alignItems: "center" }}
  >
    <img
      src={fuel_Logo}
      alt="fuel_logo"
      width="13.36px"
      height="19.49px"
      style={{ marginRight: "6px" }}
    />
    Fuel Consumption
  </Typography>
  <Typography
    variant="body1"
    fontSize="12px"
    fontWeight="400"
    lineHeight="22.4px"
    color="#717171"
    sx={{ marginTop: "8px" }}
  >
    Enter the type and quantity of fuel used (e.g., diesel, gasoline) to
    calculate direct emissions from combustion.
  </Typography>
</Grid2>
<Grid2>
  <Grid2 container spacing={2}>
    {fields.map((field, index) => (
      <Grid2 item xs={12} key={index}>
        <Box
          sx={{
            display: "flex",
            alignItems: "center",
          }}
        >
          <Box sx={{ flex: 1 }}>
            <Typography variant="body2">Fuel Type</Typography>
            <TextField
              select
              name="fuel"
              value={field.fuel}
              onChange={(e) => handleChange(index, e)}
              sx={{
                width: "365px",
                borderRadius: "5px",
                border: "1px solid #D9D9D966",
                height: "6vh",
                mt: "-18px",
                "& .MuiSelect-icon": {
                  display: "none",
                },
                "& .MuiInputBase-input": {
                  height: "10px",
                },
              }}
              SelectProps={{
                displayEmpty: true,
              }}
            >
              <MenuItem value="" disabled>
                Select fuel type
              </MenuItem>
              <MenuItem value="Fuel">Fuel</MenuItem>
              <MenuItem value="Fuel2">Fuel2</MenuItem>
              <MenuItem value="Fuel3">Fuel3</MenuItem>
            </TextField>
          </Box>

          {field.fuel && (
            <Box sx={{ display: "flex", gap: "16px" }}>
              <Box sx={{ flex: 1 }}>
                <Typography variant="body2">Quantity</Typography>
                <TextField
                  name="quantity"
                  value={field.quantity}
                  placeholder="Quantity"
                  onChange={(e) => handleChange(index, e)}
                  sx={{
                    width: "365px",
                    borderRadius: "5px",
                    border: "1px solid #D9D9D966",
                    height: "6vh",
                    mb: "18.5px",
                  }}
                />
              </Box>

              <Box sx={{ flex: 1 }}>
                <Typography variant="body2">Unit</Typography>
                <TextField
                  select
                  name="unit"
                  value={field.unit}
                  onChange={(e) => handleChange(index, e)}
                  sx={{
                    width: "365px",
                    borderRadius: "5px",
                    border: "1px solid #D9D9D966",
                    height: "6vh",
                  }}
                  SelectProps={{
                    displayEmpty: true,
                  }}
                >
                  <MenuItem value="" disabled>
                    Select unit
                  </MenuItem>
                  <MenuItem value="Gallons">Gallons</MenuItem>
                  <MenuItem value="Liters">Liters</MenuItem>
                </TextField>
              </Box>
            </Box>
          )}
        </Box>
      </Grid2>
    ))}
  </Grid2>
</Grid2>
</Grid2> */
}

 

import down_Arrow from "../../../assets/images/down_arrow.svg";
import InputAdornment from "@mui/material/InputAdornment";
 

            height: "270px",
            width: "90%",
            alignItems: "center",
            justifyContent: "center",
            display:"flex",
            flexDirection:"row",
 
1600px
 
1600px
 

            sx={{ display: "flex", }
 
alignItems: "center" }
 

              justifyContent: "spacebetween",
             
              gap:"5px"
 

            gap: "40px",
 
 height: "350px", width: "1680px" 
 

          <Typography></Typography>
 
<img src={fuel_Logo} alt="Fuel Logo" />
 

    <div>
 

    </div>
 
sx={{height:350px}}
 

      <Grid2
        container
        sx={{
          padding: "35px 45px 45px 45px",
          width: "90%",
          bgcolor: "#ffffff",
          display: "flex",
          flexDirection: "column",
          margin: "0 auto",
          borderRadius: "16px",
        }}
      >
        <Grid2 item xs={12} sx={{ marginBottom: "20px" }}>
          <Typography
            variant="h1"
            fontSize="20px"
            fontWeight="600"
            lineHeight="28px"
            color="#000000"
            sx={{ display: "flex", alignItems: "center" }}
          >
            <img
              src={fuel_Logo}
              alt="fuel_logo"
              width="13.36px"
              height="19.49px"
              style={{ marginRight: "6px" }}
            />
            Fuel Consumption
          </Typography>
          <Typography
            variant="body1"
            fontSize="12px"
            fontWeight="400"
            lineHeight="22.4px"
            color="#717171"
            sx={{ marginTop: "8px" }}
          >
            Enter the type and quantity of fuel used (e.g., diesel, gasoline) to
            calculate direct emissions from combustion.
          </Typography>
        </Grid2>
        <Grid2>
          <Grid2 container spacing={2}>
            {fields.map((field, index) => (
              <Grid2 item xs={12} key={index}>
                <Box
                  sx={{
                    display: "flex",
                    alignItems: "center",
                  }}
                >
                  <Box sx={{ flex: 1 }}>
                    <Typography variant="body2">Fuel Type</Typography>
                    <TextField
                      select
                      name="fuel"
                      value={field.fuel}
                      onChange={(e) => handleChange(index, e)}
                      sx={{
                        width: "365px",
                        borderRadius: "5px",
                        border: "1px solid #D9D9D966",
                        height: "6vh",
                        mt: "-18px",
                        "& .MuiSelect-icon": {
                          display: "none",
                        },
                        "& .MuiInputBase-input": {
                          height: "10px",
                        },
                      }}
                      SelectProps={{
                        displayEmpty: true,
                      }}
                    >
                      <MenuItem value="" disabled>
                        Select fuel type
                      </MenuItem>
                      <MenuItem value="Fuel">Fuel</MenuItem>
                      <MenuItem value="Fuel2">Fuel2</MenuItem>
                      <MenuItem value="Fuel3">Fuel3</MenuItem>
                    </TextField>
                  </Box>

                  {field.fuel && (
                    <Box sx={{ display: "flex", gap: "16px" }}>
                      <Box sx={{ flex: 1 }}>
                        <Typography variant="body2">Quantity</Typography>
                        <TextField
                          name="quantity"
                          value={field.quantity}
                          placeholder="Quantity"
                          onChange={(e) => handleChange(index, e)}
                          sx={{
                            width: "365px",
                            borderRadius: "5px",
                            border: "1px solid #D9D9D966",
                            height: "6vh",
                            mb: "18.5px",
                          }}
                        />
                      </Box>

                      <Box sx={{ flex: 1 }}>
                        <Typography variant="body2">Unit</Typography>
                        <TextField
                          select
                          name="unit"
                          value={field.unit}
                          onChange={(e) => handleChange(index, e)}
                          sx={{
                            width: "365px",
                            borderRadius: "5px",
                            border: "1px solid #D9D9D966",
                            height: "6vh",
                          }}
                          SelectProps={{
                            displayEmpty: true,
                          }}
                        >
                          <MenuItem value="" disabled>
                            Select unit
                          </MenuItem>
                          <MenuItem value="Gallons">Gallons</MenuItem>
                          <MenuItem value="Liters">Liters</MenuItem>
                        </TextField>
                      </Box>
                    </Box>
                  )}
                </Box>
              </Grid2>
            ))}
          </Grid2>
        </Grid2>
      </Grid2>
 

  Grid22,
 
Grid
 

                Indirect emissions from purchased utilities impact carbon
                footprint.
 

                Indirect emissions from purchased utilities impact carbon
                footprint.
 

                Indirect emissions from purchased utilities impact carbon
                footprint.
 

            <Grid2
              sx={{
                width: "29%",
                textAlign: "center",
                justifyContent: "center",
                display: "flex",
                flexDirection: "column",
                mt: "6px",
                gap: "2px",
                height: "50px",
                // backgroundColor: "#F9FFFC",
                cursor: "pointer",
                // borderBottom: "3px solid #369D9C",
              }}
            >
              <Typography
                variant="h1"
                fontSize="12px"
                fontWeight="600"
                lineHeight="18px"
                color="#369D9C"
                display="flex"
                alignItems="center"
                justifyContent="center"
                gap="5px"
              >
                <img
                  src={lock_Logo}
                  alt="Lock Logo"
                  style={{
                    width: "10px",
                    height: "16px",
                    display: "inline-block",
                  }}
                />
                Scope 2
              </Typography>

              <Typography
                variant="body1"
                fontSize="9px"
                fontWeight="400"
                lineHeight="14px"
                color="#808080"
                mb="14px"
              >
                Indirect emissions from purchased utilities impact carbon
                footprint.
              </Typography>
            </Grid2>
 

            <Grid2
              sx={{
                width: "29%",
                textAlign: "center",
                justifyContent: "center",
                display: "flex",
                flexDirection: "column",
                mt: "6px",
                gap: "2px",
                height: "50px",
                // backgroundColor: "#F9FFFC",
                cursor: "pointer",
                // borderBottom: "3px solid #369D9C",
              }}
            >
              <Typography
                variant="h1"
                fontSize="12px"
                fontWeight="600"
                lineHeight="18px"
                color="#369D9C"
                display="flex"
                alignItems="center"
                justifyContent="center"
                gap="5px"
              >
                <img
                  src={lock_Logo}
                  alt="Lock Logo"
                  style={{
                    width: "10px",
                    height: "16px",
                    display: "inline-block",
                  }}
                />
                Scope 2
              </Typography>

              <Typography
                variant="body1"
                fontSize="9px"
                fontWeight="400"
                lineHeight="14px"
                color="#808080"
                mb="9px"
              >
                Indirect emissions from purchased utilities impact carbon
                footprint.
              </Typography>
            </Grid2>
 

            <Grid2
              sx={{
                width: "31%",
                textAlign: "center",
                justifyContent: "center",
                display: "flex",
                flexDirection: "column",
                mt: "6px",
                gap: "2px",
                cursor: "pointer",
                "&:hover": {
                  borderBottom: "3px solid #369D9C",
                },
              }}
            >
              <Typography
                variant="h1"
                fontSize="12px"
                fontWeight="600"
                lineHeight="18px"
                color="#369D9C"
                display="flex"
                alignItems="center"
                justifyContent="center"
                gap="5px"
              >
                <img
                  src={lock_Logo}
                  alt="Lock Logo"
                  style={{
                    width: "10px",
                    height: "16px",
                    display: "inline-block",
                  }}
                />
                Scope 3
              </Typography>

              <Typography
                variant="body1"
                fontSize="11px"
                fontWeight="400"
                lineHeight="21px"
                color="#808080"
              >
                Indirect emissions from purchased utilities impact carbon
                footprint.
              </Typography>
            </Grid2>
 

                variant="body1"
                fontSize="11px"
                fontWeight="400"
                lineHeight="21px"
                color="#808080"
 

                variant="body1"
                fontSize="9px"
                fontWeight="400"
                lineHeight="14px"
                color="#808080"
                mb="9px"
 

                width: "31%",
                textAlign: "center",
                justifyContent: "center",
                display: "flex",
                flexDirection: "column",
                mt: "6px",
                gap: "2px",
                cursor: "pointer",
 

            <Grid2
              sx={{
                width: "31%",
                textAlign: "center",
                justifyContent: "center",
                display: "flex",
                flexDirection: "column",
                mt: "6px",
                gap: "2px",
                cursor: "pointer",
                "&:hover": {
                  borderBottom: "3px solid #369D9C",
                },
              }}
            >
              <Typography
                variant="h1"
                fontSize="12px"
                fontWeight="600"
                lineHeight="18px"
                color="#369D9C"
                display="flex"
                alignItems="center"
                justifyContent="center"
                gap="5px"
              >
                <img
                  src={lock_Logo}
                  alt="Lock Logo"
                  style={{
                    width: "10px",
                    height: "16px",
                    display: "inline-block",
                  }}
                />
                Scope 3
              </Typography>

              <Typography
                variant="body1"
                fontSize="11px"
                fontWeight="400"
                lineHeight="21px"
                color="#808080"
              >
                Indirect emissions from purchased utilities impact carbon
                footprint.
              </Typography>
            </Grid2>
 

            <Grid2
              sx={{
                width: "31%",
                textAlign: "center",
                justifyContent: "center",
                display: "flex",
                flexDirection: "column",
                mt: "6px",
                gap: "2px",
                cursor: "pointer",
                
              }}
            >
              <Typography
                variant="h1"
                fontSize="12px"
                fontWeight="600"
                lineHeight="18px"
                color="#369D9C"
                display="flex"
                alignItems="center"
                justifyContent="center"
                gap="5px"
              >
                <img
                  src={lock_Logo}
                  alt="Lock Logo"
                  style={{
                    width: "10px",
                    height: "16px",
                    display: "inline-block",
                  }}
                />
                Scope 2
              </Typography>

              <Typography
                variant="body1"
                fontSize="11px"
                fontWeight="400"
                lineHeight="21px"
                color="#808080"
              >
                Indirect emissions from purchased utilities impact carbon
                footprint.
              </Typography>
            </Grid2>
 

                mt="1px"
 

                "&:hover": {
                  borderBottom: "3px solid #369D9C",
                },
 

                "&:hover": {
                 
                },
 

                backgroundColor: "#F9FFFC",
 

                backgroundColor: "#F9FFFC",
 

                <img
                  src={lock_Logo}
                  alt="Lock Logo"
                  style={{
                    width: "10px",
                    height: "16px",
                    display: "inline-block",
                  }}
                />
 

            <Grid2
              sx={{
                width: "31%",
                textAlign: "center",
                display: "flex",
                flexDirection: "column",
                mt: "6px",
                gap: "5px",
                backgroundColor: "#F9FFFC", // Background color on hover
                cursor: "pointer",
                "&:hover": {
                  borderBottom: "3px solid #369D9C", // Bottom border color on hover
                },
              }}
            >
              <Typography
                variant="h1"
                fontSize="14px"
                fontWeight="600"
                lineHeight="18px"
                color="#369D9C"
              >
                Scope 1
              </Typography>
              <Typography
                variant="body1"
                fontSize="11px"
                fontWeight="400"
                lineHeight="21px"
                color="#808080"
              >
                Your carbon footprint includes emissions from buildings and
                vehicles.
              </Typography>
            </Grid2>
 

            <Grid2
              sx={{
                width: "31%",
                textAlign: "center",
                display: "flex",
                flexDirection: "column",
                mt: "6px",
                gap: "2px",
                backgroundColor: "#F9FFFC",
                cursor: "pointer",
                "&:hover": {
                  borderBottom: "3px solid #369D9C",
                },
              }}
            >
              <Typography
                variant="h1"
                fontSize="14px"
                fontWeight="600"
                lineHeight="18px"
                color="#369D9C"
                gap="5px"
              >
                <img src={lock_Logo} style={{ marginRight: "6px" }} />
                Scope 3
              </Typography>
              <Typography
                variant="body1"
                fontSize="11px"
                fontWeight="400"
                lineHeight="21px"
                color="#808080"
              >
                Carbon footprint includes value chain supplier and customer
                emissions.
              </Typography>
            </Grid2>
 

                    marginRight: "6px",
 
<Typography
                variant="h1"
                fontSize="14px"
                fontWeight="600"
                lineHeight="18px"
                color="#369D9C"
                gap="5px"
              >
                <img src={lock_Logo} style={{ marginRight: "6px", width:"10px", height:"16px"}} />
                Scope 2
              </Typography>
 
component={Paper}
 
display:"flex",
            flexDirection: gap:"10px",
 
  <Grid2
          sx={{
            display: "flex",
            flexDirection: "column",
            gap: "20px",
            borderRadius: "10px",
            border: "1px solid none ",
          }}
        >
          <TableContainer component={Paper}>
            <Table sx={{ border: "0px" }}>
              <TableHead sx={{ bgcolor: "#f2fcfc", border:"1px solid none" }}>
                <TableRow>
                  <TableCell>Type of Process Emission</TableCell>
                  <TableCell>Category</TableCell>
                  <TableCell>Sub Category</TableCell>
                  <TableCell>Sub Sub Category</TableCell>
                  <TableCell>Sub Sub Sub Category</TableCell>
                  <TableCell>Quantity</TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {rows.map((row, index) => (
                  <TableRow
                    key={index}
                    sx={{
                      "& > *": { padding: "16px 8px" },
                      borderBottom: "16px solid transparent",
                      alignItems: "center",
                      justifyContent: "center",
                      border:"0.5px solid none",
                      borderRadius:"4px",justifyContent:"space-between"
                    }}
                  >
                    <TableCell>{row.processType}</TableCell>
                    <TableCell>{row.category}</TableCell>
                    <TableCell>{row.subCategory}</TableCell>
                    <TableCell>{row.subSubCategory}</TableCell>
                    <TableCell>{row.subSubSubCategory}</TableCell>
                    <TableCell>{row.quantity}</TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          </TableContainer>
        </Grid2>
 
  <Grid2
          sx={{
            display: "flex",
            flexDirection: "column",
            gap: "20px",
            borderRadius: "10px",
            border: "1px solid none ",
          }}
        >
          <TableContainer component={Paper}>
            <Table sx={{ border: "0px" }}>
              <TableHead sx={{ bgcolor: "#f2fcfc", border:"1px solid none" }}>
                <TableRow>
                  <TableCell>Type of Process Emission</TableCell>
                  <TableCell>Category</TableCell>
                  <TableCell>Sub Category</TableCell>
                  <TableCell>Sub Sub Category</TableCell>
                  <TableCell>Sub Sub Sub Category</TableCell>
                  <TableCell>Quantity</TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {rows.map((row, index) => (
                  <TableRow
                    key={index}
                    sx={{
                      "& > *": { padding: "16px 8px" },
                      borderBottom: "16px solid transparent",
                      alignItems: "center",
                      justifyContent: "center",
                      border:"0.5px solid none",
                      borderRadius:"4px",justifyContent:"space-between"
                    }}
                  >
                    <TableCell>{row.processType}</TableCell>
                    <TableCell>{row.category}</TableCell>
                    <TableCell>{row.subCategory}</TableCell>
                    <TableCell>{row.subSubCategory}</TableCell>
                    <TableCell>{row.subSubSubCategory}</TableCell>
                    <TableCell>{row.quantity}</TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          </TableContainer>
        </Grid2>
 

          padding: "35px 45px 45px 45px",
          width: "90%",
          bgcolor: "#ffffff",
          display: "flex",
          flexDirection: "column",
          margin: "0 auto",
          borderRadius: "16px",
 
borderRadius: "10px" 
 

        <Grid2 sx={{display:"flex",flexDirection:"column",gap:"16px"}}>
          <TableContainer component={Paper}>
            <Table>
              <TableHead sx={{ bgcolor: "#f2fcfc", borderRadius: "10px" }}>
                <TableRow>
                  <TableCell>Type of Process Emission</TableCell>
                  <TableCell>Category</TableCell>
                  <TableCell>Sub Category</TableCell>
                  <TableCell>Sub Sub Category</TableCell>
                  <TableCell>Sub Sub Sub Category</TableCell>
                  <TableCell>Quantity</TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {rows.map((row, index) => (
                  <TableRow key={index}>
                    <TableCell>{row.processType}</TableCell>
                    <TableCell>{row.category}</TableCell>
                    <TableCell>{row.subCategory}</TableCell>
                    <TableCell>{row.subSubCategory}</TableCell>
                    <TableCell>{row.subSubSubCategory}</TableCell>
                    <TableCell>{row.quantity}</TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          </TableContainer>
        </Grid2>
 
display:"flex",flexDirection:"column",gap:
 

      </Grid>
 

        <Grid
          container
          sx={{
            padding: "35px 45px 45px 45px",
            width: "90%",
            bgcolor: "#ffffff",
            display: "flex",
            flexDirection: "column",
            margin: "0 auto",
            borderRadius: "16px",
          }}
        >
 
component={Paper}
 

        <Grid2>
          <Grid container spacing={2}>
            {fields.map((field, index) => (
              <Grid item xs={12} key={index}>
                <Box
                  sx={{
                    display: "flex",
                    alignItems: "center",
                  }}
                >
                  <Box sx={{ flex: 1 }}>
                    <Typography variant="body2">Fuel Type</Typography>
                    <TextField
                      select
                      name="fuel"
                      value={field.fuel}
                      onChange={(e) => handleChange(index, e)}
                      sx={{
                        width: "365px",
                        borderRadius: "5px",
                        border: "1px solid #D9D9D966",
                        height: "6vh",
                        mt: "-18px",
                        "& .MuiSelect-icon": {
                          display: "none",
                        },
                        "& .MuiInputBase-input": {
                          height: "10px",
                        },
                      }}
                      SelectProps={{
                        displayEmpty: true,
                      }}
                    >
                      <MenuItem value="" disabled>
                      Add Type of refrigerant
                      </MenuItem>
                      <MenuItem value="Fuel">Fuel</MenuItem>
                      <MenuItem value="Fuel2">Fuel2</MenuItem>
                      <MenuItem value="Fuel3">Fuel3</MenuItem>
                    </TextField>
                  </Box>

                  {field.fuel && (
                    <Box sx={{ display: "flex", gap: "16px" }}>
                      <Box sx={{ flex: 1 }}>
                        <Typography variant="body2">Quantity</Typography>
                        <TextField
                          name="quantity"
                          value={field.quantity}
                          placeholder="Quantity"
                          onChange={(e) => handleChange(index, e)}
                          sx={{
                            width: "365px",
                            borderRadius: "5px",
                            border: "1px solid #D9D9D966",
                            height: "6vh",
                            mb: "18.5px",
                          }}
                        />
                      </Box>

                      <Box sx={{ flex: 1 }}>
                        <Typography variant="body2">Unit</Typography>
                        <TextField
                          select
                          name="unit"
                          value={field.unit}
                          onChange={(e) => handleChange(index, e)}
                          sx={{
                            width: "365px",
                            borderRadius: "5px",
                            border: "1px solid #D9D9D966",
                            height: "6vh",
                          }}
                          SelectProps={{
                            displayEmpty: true,
                          }}
                        >
                          <MenuItem value="" disabled>
                            Select unit
                          </MenuItem>
                          <MenuItem value="Gallons">Gallons</MenuItem>
                          <MenuItem value="Liters">Liters</MenuItem>
                        </TextField>
                      </Box>
                    </Box>
                  )}
                </Box>
              </Grid>
            ))}
          </Grid>
        </Grid2>
 

import Refri_Logo from "../../../assets/images/refri_logo.svg"
 

import down_Arrow from "../../../assets/images/down_arrow.svg";
import InputAdornment from "@mui/material/InputAdornment";
 
Input the type and amount of refrigerant used to account for emissions from refrigerant Consumption.
 

            Fuel Consumption
 
RefrigerantData
 
Select fuel type
 
/Refrigerant_Logo.svg
 

import fuel_Logo from "../../../assets/images/fuel_logo.svg";
 

            Enter the type and quantity of fuel used (e.g., diesel, gasoline) to
            calculate direct emissions from combustion.
 

        padding: "16px",
 

        boxSizing: "border-box",
 
 backgroundColor: "#E3E3E3", minHeight: "100vh" 
 
FuelConsumption
 

                        // Add the SVG using InputAdornment
                        endAdornment: (
                         
                        ),
 
 <InputAdornment position="end" >
                            <Box onChange={(e) => handleChange(index, e)} value={field.fuel}>
                            <img
                              src={down_Arrow}
                              alt="Arrow"
                              style={{ width: "24px", height: "24px" }}
                            />
                            </Box>
                          </InputAdornment>
 
 SelectProps={{
                        displayEmpty: true,
                        // Add the SVG using InputAdornment
                        endAdornment: (
                          <InputAdornment position="end" >
                            <Box onChange={(e) => handleChange(index, e)} value={field.fuel}>
                            <img
                              src={down_Arrow}
                              alt="Arrow"
                              style={{ width: "24px", height: "24px" }}
                            />
                            </Box>
                          </InputAdornment>
                        ),
                      }}
 

                      SelectProps={{
                        ),
 

                        displayEmpty: true,
                        // Add the SVG using InputAdornment
                        endAdornment: (
                          <InputAdornment position="end" >
                            <Box onChange={(e) => handleChange(index, e)} value={field.fuel}>
                            <img
                              src={down_Arrow}
                              alt="Arrow"
                              style={{ width: "24px", height: "24px" }}
                            />
                            </Box>
                          </InputAdornment>
 

                      SelectProps={{
                        displayEmpty: true,
                        displayEmpty: true,
                        IconComponent: down_Arrow
                      }}
 
ArrowDownIcon, // Use the SVG as the dropdown icon
 

                    </Grid2>
 

                    <Grid2 sx={}>
 

                    <Grid2 sx={}>
 
sx={{ marginBottom: "4px" }}
 
}>
    Fuel Type
 

        padding: "0 14px", // Adjust padding for alignment
 

        height: "100%", // Ensure the input height matches the container
 

                <Box sx={{ flex: 1 }}>
                  <TextField
                    select
                    name="fuel"
                    value={field.fuel}
                    onChange={(e) => handleChange(index, e)}
                    sx={{
                      width: "365px",
                      borderRadius: "5px",
                      border: "1px solid #D9D9D966",
                      height: "6vh",
                      "& .MuiSelect-icon": {
                        display: "none",
                      },
                      "& .MuiInputBase-input": {
                        height: "10px",
                      },
                    }}
                    SelectProps={{
                      displayEmpty: true,
                    }}
                  >
                    <MenuItem value="" disabled>
                      Select fuel type
                    </MenuItem>
                    <MenuItem value="Fuel">Fuel</MenuItem>
                    <MenuItem value="Fuel2">Fuel2</MenuItem>
                    <MenuItem value="Fuel3">Fuel3</MenuItem>
                  </TextField>
                </Box>
 
<Grid container spacing={2}>
          {fields.map((field, index) => (
            <Grid item xs={12} key={index}>
              <Box
                sx={{
                  display: "flex",
                  alignItems: "center",
                }}
              >
                <Box sx={{ flex: 1 }}>
                  <TextField
                    select
                    name="fuel"
                    value={field.fuel}
                    onChange={(e) => handleChange(index, e)}
                    sx={{
                      width: "365px",
                      borderRadius: "5px",
                      border: "1px solid #D9D9D966",
                      height: "6vh",
                      "& .MuiSelect-icon": {
                        display: "none",
                      },
                      "& .MuiInputBase-input": {
                        height: "10px",
                      },
                    }}
                    SelectProps={{
                      displayEmpty: true,
                    }}
                  >
                    <MenuItem value="" disabled>
                      Select fuel type
                    </MenuItem>
                    <MenuItem value="Fuel">Fuel</MenuItem>
                    <MenuItem value="Fuel2">Fuel2</MenuItem>
                    <MenuItem value="Fuel3">Fuel3</MenuItem>
                  </TextField>
                </Box>

                {field.fuel && (
                  <Box sx={{ display: "flex", gap: "16px", }}>
                    <Box sx={{ flex: 1 }}>
                      <Typography variant="body2" >
                        Quantity
                      </Typography>
                      <TextField
                        name="quantity"
                        value={field.quantity}
                        placeholder="Quantity"
                        onChange={(e) => handleChange(index, e)}
                        sx={{
                          width: "365px",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          height: "6vh",
                          mb:"18.5px"
                        }}
                      />
                    </Box>

                    <Box sx={{ flex: 1 }}>
                      <Typography variant="body2">
                        Unit
                      </Typography>
                      <TextField
                        select
                        name="unit"
                        value={field.unit}
                        onChange={(e) => handleChange(index, e)}
                        sx={{
                          width: "365px",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          height: "6vh",
                        }}
                        SelectProps={{
                          displayEmpty: true,
                        }}
                      >
                        <MenuItem value="" disabled>
                          Select unit
                        </MenuItem>
                        <MenuItem value="Gallons">Gallons</MenuItem>
                        <MenuItem value="Liters">Liters</MenuItem>
                      </TextField>
                    </Box>
                  </Box>
                )}
              </Box>
            </Grid>
          ))}
        </Grid>
 

        <Typography variant="body2" width="70px">Fuel Type</Typography>
 

                        height: "10px",
 

        <Grid2>
        <Typography variant="body2" width="70px">Fuel Type</Typography>
        <Grid container spacing={2}>
          {fields.map((field, index) => (
            <Grid item xs={12} key={index}>
              <Box
                sx={{
                  display: "flex",
                  alignItems: "center",
                }}
              >
                <Box sx={{ flex: 1 }}>
                  <TextField
                    select
                    name="fuel"
                    value={field.fuel}
                    onChange={(e) => handleChange(index, e)}
                    sx={{
                      width: "365px",
                      borderRadius: "5px",
                      border: "1px solid #D9D9D966",
                      height: "6vh",
                      "& .MuiSelect-icon": {
                        display: "none",
                      },
                      "& .MuiInputBase-input": {
                        height: "10px",
                      },
                    }}
                    SelectProps={{
                      displayEmpty: true,
                    }}
                  >
                    <MenuItem value="" disabled>
                      Select fuel type
                    </MenuItem>
                    <MenuItem value="Fuel">Fuel</MenuItem>
                    <MenuItem value="Fuel2">Fuel2</MenuItem>
                    <MenuItem value="Fuel3">Fuel3</MenuItem>
                  </TextField>
                </Box>

                {field.fuel && (
                  <Box sx={{ display: "flex", gap: "16px", }}>
                    <Box sx={{ flex: 1 }}>
                      <Typography variant="body2" >
                        Quantity
                      </Typography>
                      <TextField
                        name="quantity"
                        value={field.quantity}
                        placeholder="Quantity"
                        onChange={(e) => handleChange(index, e)}
                        sx={{
                          width: "365px",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          height: "6vh",
                        }}
                      />
                    </Box>

                    <Box sx={{ flex: 1 }}>
                      <Typography variant="body2">
                        Unit
                      </Typography>
                      <TextField
                        select
                        name="unit"
                        value={field.unit}
                        onChange={(e) => handleChange(index, e)}
                        sx={{
                          width: "365px",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          height: "6vh",
                        }}
                        SelectProps={{
                          displayEmpty: true,
                        }}
                      >
                        <MenuItem value="" disabled>
                          Select unit
                        </MenuItem>
                        <MenuItem value="Gallons">Gallons</MenuItem>
                        <MenuItem value="Liters">Liters</MenuItem>
                      </TextField>
                    </Box>
                  </Box>
                )}
              </Box>
            </Grid>
          ))}
        </Grid>
        </Grid2>
 
sx={{ marginBottom: "5px" }}
 
sx={{ marginBottom: "5px" }}
 
 sx={{ marginBottom: "5px" }
 
 gap: "16px",
 

                        paddingRight: "50px",
 

                  gap: "16px",
                  marginBottom: "10px",
 
spacing={2}
 
import React, { useState } from "react";
import { Box, Grid, Typography, TextField, MenuItem } from "@mui/material";
import fuel_Logo from "../../../assets/images/fuel_logo.svg";

function FuelConsumption() {
  // Initialize fields with one empty row
  const [fields, setFields] = useState([{ fuel: "", quantity: "", unit: "" }]);

  // Handle changes in any input field
  const handleChange = (index, event) => {
    const { name, value } = event.target;
    const updatedFields = [...fields];
    updatedFields[index][name] = value;
    setFields(updatedFields);

    // Check if the current row is complete
    const isRowComplete =
      updatedFields[index].fuel &&
      updatedFields[index].quantity &&
      updatedFields[index].unit;

    // If the current row is complete and it’s the last row, add a new row
    if (isRowComplete && index === fields.length - 1) {
      setFields([...updatedFields, { fuel: "", quantity: "", unit: "" }]);
    }
  };

  return (
    <div>
      <Grid
        container
        sx={{
          padding: "25px 50px",
          width: "90%",
          bgcolor: "#ffffff",
          display: "flex",
          flexDirection: "column",
          margin: "0 auto",
          borderRadius: "16px",
        }}
      >
        <Grid item xs={12} sx={{ marginBottom: "20px" }}>
          <Typography
            variant="h1"
            fontSize="20px"
            fontWeight="600"
            lineHeight="28px"
            color="#000000"
            sx={{ display: "flex", alignItems: "center" }}
          >
            <img
              src={fuel_Logo}
              alt="fuel_logo"
              width="13.36px"
              height="19.49px"
              style={{ marginRight: "6px" }}
            />
            Fuel Consumption
          </Typography>
          <Typography
            variant="body1"
            fontSize="12px"
            fontWeight="400"
            lineHeight="22.4px"
            color="#717171"
            sx={{ marginTop: "8px" }}
          >
            Enter the type and quantity of fuel used (e.g., diesel, gasoline) to
            calculate direct emissions from combustion.
          </Typography>
        </Grid>
        <Typography variant="body2">Fuel Type</Typography>
        <Grid container spacing={2}>
          {fields.map((field, index) => (
            <Grid item xs={12} key={index}>
              <Box
                sx={{
                  display: "flex",
                  alignItems: "center",
                  gap: "16px",
                  marginBottom: "10px",
                }}
              >
                <Box sx={{ flex: 1 }}>
                  <TextField
                    select
                    name="fuel"
                    value={field.fuel}
                    onChange={(e) => handleChange(index, e)}
                    sx={{
                      width: "100%",
                      borderRadius: "5px",
                      border: "1px solid #D9D9D966",
                      height: "6vh",
                      "& .MuiSelect-icon": {
                        display: "none",
                      },
                      "& .MuiInputBase-input": {
                        paddingRight: "50px",
                        height: "10px",
                      },
                    }}
                    SelectProps={{
                      displayEmpty: true,
                    }}
                  >
                    <MenuItem value="" disabled>
                      Select fuel type
                    </MenuItem>
                    <MenuItem value="Fuel">Fuel</MenuItem>
                    <MenuItem value="Fuel2">Fuel2</MenuItem>
                    <MenuItem value="Fuel3">Fuel3</MenuItem>
                  </TextField>
                </Box>

                {field.fuel && (
                  <Box sx={{ display: "flex", gap: "16px", alignItems: "center" }}>
                    <Box sx={{ flex: 1 }}>
                      <Typography variant="body2" sx={{ marginBottom: "5px" }}>
                        Quantity
                      </Typography>
                      <TextField
                        name="quantity"
                        value={field.quantity}
                        placeholder="Quantity"
                        onChange={(e) => handleChange(index, e)}
                        sx={{
                          width: "100%",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          height: "6vh",
                        }}
                      />
                    </Box>

                    <Box sx={{ flex: 1 }}>
                      <Typography variant="body2" sx={{ marginBottom: "5px" }}>
                        Unit
                      </Typography>
                      <TextField
                        select
                        name="unit"
                        value={field.unit}
                        onChange={(e) => handleChange(index, e)}
                        sx={{
                          width: "100%",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          height: "6vh",
                        }}
                        SelectProps={{
                          displayEmpty: true,
                        }}
                      >
                        <MenuItem value="" disabled>
                          Select unit
                        </MenuItem>
                        <MenuItem value="Gallons">Gallons</MenuItem>
                        <MenuItem value="Liters">Liters</MenuItem>
                      </TextField>
                    </Box>
                  </Box>
                )}
              </Box>
            </Grid>
          ))}
        </Grid>
      </Grid>
    </div>
  );
}

export default FuelConsumption;

 
import React, { useState } from "react";
import { Box, Grid, Typography, TextField, MenuItem } from "@mui/material";
import fuel_Logo from "../../../assets/images/fuel_logo.svg";

function FuelConsumption() {
  // Initialize fields with one empty row
  const [fields, setFields] = useState([{ fuel: "", quantity: "", unit: "" }]);

  // Handle changes in any input field
  const handleChange = (index, event) => {
    const { name, value } = event.target;
    const updatedFields = [...fields];
    updatedFields[index][name] = value;
    setFields(updatedFields);

    // Check if the current row is complete
    const isRowComplete =
      updatedFields[index].fuel &&
      updatedFields[index].quantity &&
      updatedFields[index].unit;

    // If the current row is complete and it’s the last row, add a new row
    if (isRowComplete && index === fields.length - 1) {
      setFields([...updatedFields, { fuel: "", quantity: "", unit: "" }]);
    }
  };

  return (
    <div>
      <Grid
        container
        sx={{
          padding: "25px 50px",
          width: "90%",
          bgcolor: "#ffffff",
          display: "flex",
          flexDirection: "column",
          margin: "0 auto",
          borderRadius: "16px",
        }}
      >
        <Grid item xs={12} sx={{ marginBottom: "20px" }}>
          <Typography
            variant="h1"
            fontSize="20px"
            fontWeight="600"
            lineHeight="28px"
            color="#000000"
            sx={{ display: "flex", alignItems: "center" }}
          >
            <img
              src={fuel_Logo}
              alt="fuel_logo"
              width="13.36px"
              height="19.49px"
              style={{ marginRight: "6px" }}
            />
            Fuel Consumption
          </Typography>
          <Typography
            variant="body1"
            fontSize="12px"
            fontWeight="400"
            lineHeight="22.4px"
            color="#717171"
            sx={{ marginTop: "8px" }}
          >
            Enter the type and quantity of fuel used (e.g., diesel, gasoline) to
            calculate direct emissions from combustion.
          </Typography>
        </Grid>
        <Typography variant="body2">Fuel Type</Typography>
        <Grid container spacing={2} sx={{ display: "flex", flexDirection: "column" }}>
          {fields.map((field, index) => (
            <Grid item xs={12} key={index}>
              <Box sx={{ display: "flex", alignItems: "center", gap: "10px", marginBottom: "10px" }}>
                <TextField
                  select
                  name="fuel"
                  value={field.fuel}
                  onChange={(e) => handleChange(index, e)}
                  sx={{
                    width: "300px",
                    borderRadius: "5px",
                    border: "1px solid #D9D9D966",
                    height: "6vh",
                    "& .MuiSelect-icon": {
                      display: "none",
                    },
                    "& .MuiInputBase-input": {
                      paddingRight: "50px",
                      height: "10px",
                    },
                  }}
                  SelectProps={{
                    displayEmpty: true,
                  }}
                >
                  <MenuItem value="" disabled>
                    Select fuel type
                  </MenuItem>
                  <MenuItem value="Fuel">Fuel</MenuItem>
                  <MenuItem value="Fuel2">Fuel2</MenuItem>
                  <MenuItem value="Fuel3">Fuel3</MenuItem>
                </TextField>

                {field.fuel && (
                  <>
                    <Box sx={{ display: "flex", flexDirection: "column", width: "150px" }}>
                      <Typography variant="body2" sx={{ marginBottom: "5px" }}>Quantity</Typography>
                      <TextField
                        name="quantity"
                        value={field.quantity}
                        placeholder="Quantity"
                        onChange={(e) => handleChange(index, e)}
                        sx={{
                          width: "100%",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          height: "6vh",
                        }}
                      />
                    </Box>

                    <Box sx={{ display: "flex", flexDirection: "column", width: "150px" }}>
                      <Typography variant="body2" sx={{ marginBottom: "5px" }}>Unit</Typography>
                      <TextField
                        select
                        name="unit"
                        value={field.unit}
                        onChange={(e) => handleChange(index, e)}
                        sx={{
                          width: "100%",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          height: "6vh",
                        }}
                        SelectProps={{
                          displayEmpty: true,
                        }}
                      >
                        <MenuItem value="" disabled>
                          Select unit
                        </MenuItem>
                        <MenuItem value="Gallons">Gallons</MenuItem>
                        <MenuItem value="Liters">Liters</MenuItem>
                      </TextField>
                    </Box>
                  </>
                )}
              </Box>
            </Grid>
          ))}
        </Grid>
      </Grid>
    </div>
  );
}

export default FuelConsumption;

 
sx={{ marginBottom: "5px" }}
 
sx={{ marginBottom: "5px" }}
 
<Typography variant="body2" sx={{ marginBottom: "5px" }}>Fuel </Typography>
 
 marginBottom: "10px"
 
import React, { useState } from "react";
import { Box, Grid, Typography, TextField, MenuItem } from "@mui/material";
import fuel_Logo from "../../../assets/images/fuel_logo.svg";
import downArrow from "../../../assets/images/down_arrow.svg";

function FuelConsumption() {
  // Initialize fields with one empty row
  const [fields, setFields] = useState([{ fuel: "", quantity: "", unit: "" }]);

  // Handle changes in any input field
  const handleChange = (index, event) => {
    const { name, value } = event.target;
    const updatedFields = [...fields];
    updatedFields[index][name] = value;
    setFields(updatedFields);

    // Check if the current row is complete
    const isRowComplete =
      updatedFields[index].fuel &&
      updatedFields[index].quantity &&
      updatedFields[index].unit;

    // If the current row is complete, add a new row
    if (isRowComplete && index === fields.length - 1) {
      setFields([...updatedFields, { fuel: "", quantity: "", unit: "" }]);
    }
  };

  return (
    <div>
      <Grid
        container
        sx={{
          padding: "25px 50px",
          width: "90%",
          bgcolor: "#ffffff",
          display: "flex",
          flexDirection: "column",
          margin: "0 auto",
          borderRadius: "16px",
        }}
      >
        <Grid item xs={12} sx={{ marginBottom: "20px" }}>
          <Typography
            variant="h1"
            fontSize="20px"
            fontWeight="600"
            lineHeight="28px"
            color="#000000"
            sx={{ display: "flex", alignItems: "center" }}
          >
            <img
              src={fuel_Logo}
              alt="fuel_logo"
              width="13.36px"
              height="19.49px"
              style={{ marginRight: "6px" }}
            />
            Fuel Consumption
          </Typography>
          <Typography
            variant="body1"
            fontSize="12px"
            fontWeight="400"
            lineHeight="22.4px"
            color="#717171"
            sx={{ marginTop: "8px" }}
          >
            Enter the type and quantity of fuel used (e.g., diesel, gasoline) to
            calculate direct emissions from combustion.
          </Typography>
        </Grid>

        <Grid container spacing={2} sx={{ display: "flex", flexDirection: "column" }}>
          {fields.map((field, index) => (
            <Grid item xs={12} sm={6} md={4} key={index}>
              <Box sx={{ marginBottom: "10px" }}>
                <TextField
                  select
                  name="fuel"
                  value={field.fuel}
                  onChange={(e) => handleChange(index, e)}
                  sx={{
                    width: "300px",
                    borderRadius: "5px",
                    border: "1px solid #D9D9D966",
                    height: "6vh",
                    "& .MuiSelect-icon": {
                      display: "none",
                    },
                    "& .MuiInputBase-input": {
                      paddingRight: "50px",
                      height: "10px",
                    },
                  }}
                  SelectProps={{
                    displayEmpty: true,
                  }}
                >
                  <MenuItem value="" disabled>
                    Select fuel type
                  </MenuItem>
                  <MenuItem value="Fuel">Fuel</MenuItem>
                  <MenuItem value="Fuel2">Fuel2</MenuItem>
                  <MenuItem value="Fuel3">Fuel3</MenuItem>
                </TextField>

                {field.fuel && (
                  <Box sx={{ marginTop: "10px" }}>
                    <Box sx={{ marginBottom: "5px" }}>
                      <Typography variant="body2">Quantity</Typography>
                      <TextField
                        name="quantity"
                        value={field.quantity}
                        placeholder="Quantity"
                        onChange={(e) => handleChange(index, e)}
                        sx={{
                          width: "300px",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          height: "6vh",
                        }}
                      />
                    </Box>

                    <Box>
                      <Typography variant="body2" sx={{ marginBottom: "5px" }}>
                        Unit
                      </Typography>
                      <TextField
                        select
                        name="unit"
                        value={field.unit}
                        onChange={(e) => handleChange(index, e)}
                        sx={{
                          width: "300px",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          height: "6vh",
                        }}
                        SelectProps={{
                          displayEmpty: true,
                        }}
                      >
                        <MenuItem value="" disabled>
                          Select unit
                        </MenuItem>
                        <MenuItem value="Gallons">Gallons</MenuItem>
                        <MenuItem value="Liters">Liters</MenuItem>
                      </TextField>
                    </Box>
                  </Box>
                )}
              </Box>
            </Grid>
          ))}
        </Grid>
      </Grid>
    </div>
  );
}

export default FuelConsumption;

 
import { Box, Grid2, Typography } from "@mui/material";
import React from "react";
import fuel_Logo from "../../../assets/images/fuel_logo.svg";
import InputLabel from "@mui/material/InputLabel";
import MenuItem from "@mui/material/MenuItem";
import Select from "@mui/material/Select";
import TextField from "@mui/material/TextField";
import downArrow from "../../../assets/images/down_arrow.svg";
import { useState } from "react";
function FuelConsumption() {
  // Initialize fields with one empty row
  const [fields, setFields] = useState([{ fuel: "", quantity: "", unit: "" }]);

  // Handle changes in any input field
  const handleChange = (index, event) => {
    const { name, value } = event.target;
    const updatedFields = [...fields];
    updatedFields[index][name] = value;
    setFields(updatedFields);

    // Check if the current row is complete
    const isRowComplete =
      updatedFields[index].fuel &&
      updatedFields[index].quantity &&
      updatedFields[index].unit;

    // If the current row is complete, add a new row
    if (isRowComplete) {
      // Add a new row and move focus to it
      setFields([...updatedFields, { fuel: "", quantity: "", unit: "" }]);
    }
  };
  const [fuel, setFuel] = useState("");
  console.log(fuel);
  //   const handleChange = (event) => {
  //     const selectedFuel = event.target.value;
  //     setFuel(selectedFuel);
  //     console.log("Selected fuel:", selectedFuel); // Log the selected value to the console
  //   };
  return (
    <div>
      <Grid2
        sx={{
          padding: "25px 50px 25px 40px",
          width: "90%",
          height: "230px",
          bgcolor: "#ffffff",
          display: "flex",
          flexDirection: "column",
          margin: "0 auto",
          borderRadius: "16px",
        }}
      >
        <Grid2 sx={{ display: "flex", flexDirection: "column", gap: "6px" }}>
          <Typography
            variant="h1"
            fontSize="20px"
            fontWeight="600"
            lineHeight="28px"
            color="#000000"
            sx={{ display: "flex", alignItems: "center" }}
          >
            <img
              src={fuel_Logo}
              alt="fuel_logo"
              width="13.36px"
              height="19.49px"
              style={{ marginRight: "6px" }}
            />{" "}
            Fuel Consumption
          </Typography>
          <Typography
            variant="body1"
            fontSize="12px"
            fontWeight="400"
            lineHeight="22.4px"
            color="#717171"
          >
            Enter the type and quantity of fuel used (e.g., diesel, gasoline) to
            calculate direct emissions from combustion.
          </Typography>
          <Typography variant="p" marginTop="20px">
            Fuel Type
          </Typography>
          <Grid2
            container
            spacing={5}
            sx={{ display: "flex", flexDirection: "column", gap: "10px" }}
          >
            {fields.map((field, index) => (
              <Grid2 key={index} xs={12} sm={6} md={4}>
                <Box sx={{ marginBottom: "10px" }}>
                  <TextField
                    select
                    name="fuel"
                    value={field.fuel}
                    onChange={(e) => handleChange(index, e)}
                    sx={{
                      width: "300px",
                      borderRadius: "5px",
                      border: "1px solid #D9D9D966",
                      height: "6vh",
                      "& .MuiSelect-icon": {
                        display: "none",
                      },
                      "& .MuiInputBase-input": {
                        paddingRight: "50px",
                        height: "10px",
                      },
                    }}
                    SelectProps={{
                      displayEmpty: true,
                    }}
                  >
                    <MenuItem value="" disabled>
                      Select fuel type
                    </MenuItem>
                    <MenuItem value="Fuel">Fuel</MenuItem>
                    <MenuItem value="Fuel2">Fuel2</MenuItem>
                    <MenuItem value="Fuel3">Fuel3</MenuItem>
                  </TextField>
                  {field.fuel && ( // Show quantity and unit fields only if fuel is selected
                    <>
                      <TextField
                        name="quantity"
                        value={field.quantity}
                        placeholder="Quantity"
                        onChange={(e) => handleChange(index, e)}
                        sx={{
                          width: "300px",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          height: "6vh",
                        }}
                      />
                      <TextField
                        select
                        name="unit"
                        value={field.unit}
                        onChange={(e) => handleChange(index, e)}
                        sx={{
                          width: "300px",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          height: "6vh",
                        }}
                        SelectProps={{
                          displayEmpty: true,
                        }}
                      >
                        <MenuItem value="" disabled>
                          Select unit
                        </MenuItem>
                        <MenuItem value="Gallons">Gallons</MenuItem>
                        <MenuItem value="Liters">Liters</MenuItem>
                      </TextField>
                    </>
                  )}
                </Box>
              </Grid2>
            ))}
          </Grid2>
        </Grid2>
      </Grid2>
    </div>
  );
}

export default FuelConsumption;

 

                  {field.fuel && ( // Show quantity and unit fields only if fuel is selected
                    <>
                      <TextField
                        name="quantity"
                        value={field.quantity}
                        placeholder="Quantity"
                        onChange={(e) => handleChange(index, e)}
                        sx={{
                          width: "300px",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          height: "6vh",
                        }}
                      />
                      <TextField
                        select
                        name="unit"
                        value={field.unit}
                        onChange={(e) => handleChange(index, e)}
                        sx={{
                          width: "300px",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          height: "6vh",
                        }}
                        SelectProps={{
                          displayEmpty: true,
                        }}
                      >
                        <MenuItem value="" disabled>
                          Select unit
                        </MenuItem>
                        <MenuItem value="Gallons">Gallons</MenuItem>
                        <MenuItem value="Liters">Liters</MenuItem>
                      </TextField>
                    </>
                  )}
 
<>
 

                    </>
 

                    <l></l>
 

                      <Label
 

  const handleChange = (index, event) => {
    const { name, value } = event.target;
    const updatedFields = [...fields];
    updatedFields[index][name] = value;
    setFields(updatedFields);

    // Check if the current row is complete
    const isRowComplete =
      updatedFields[index].fuel &&
      updatedFields[index].quantity &&
      updatedFields[index].unit;

    // If the current row is complete, add a new row
    if (isRowComplete) {
      // Add a new row and move focus to it
      setFields([...updatedFields, { fuel: "", quantity: "", unit: "" }]);
    }
  };
 
 <Grid2
            container
            spacing={5}
            sx={{ display: "flex", flexDirection: "column", gap: "10px" }}
          >
            {fields.map((field, index) => (
              <Grid2 key={index} xs={12} sm={6} md={4}>
                <Box sx={{ marginBottom: "10px" }}>
                  <TextField
                    select
                    name="fuel"
                    value={field.fuel}
                    onChange={(e) => handleChange(index, e)}
                    sx={{
                      width: "300px",
                      borderRadius: "5px",
                      border: "1px solid #D9D9D966",
                      height: "6vh",
                      "& .MuiSelect-icon": {
                        display: "none",
                      },
                      "& .MuiInputBase-input": {
                        paddingRight: "50px",
                        height: "10px",
                      },
                    }}
                    SelectProps={{
                      displayEmpty: true,
                    }}
                  >
                    <MenuItem value="" disabled>
                      Select fuel type
                    </MenuItem>
                    <MenuItem value="Fuel">Fuel</MenuItem>
                    <MenuItem value="Fuel2">Fuel2</MenuItem>
                    <MenuItem value="Fuel3">Fuel3</MenuItem>
                  </TextField>
                  {field.fuel && ( // Show quantity and unit fields only if fuel is selected
                    <>
                      <TextField
                        name="quantity"
                        value={field.quantity}
                        placeholder="Quantity"
                        onChange={(e) => handleChange(index, e)}
                        sx={{
                          width: "300px",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          height: "6vh",
                        }}
                      />
                      <TextField
                        select
                        name="unit"
                        value={field.unit}
                        onChange={(e) => handleChange(index, e)}
                        sx={{
                          width: "300px",
                          borderRadius: "5px",
                          border: "1px solid #D9D9D966",
                          height: "6vh",
                        }}
                        SelectProps={{
                          displayEmpty: true,
                        }}
                      >
                        <MenuItem value="" disabled>
                          Select unit
                        </MenuItem>
                        <MenuItem value="Gallons">Gallons</MenuItem>
                        <MenuItem value="Liters">Liters</MenuItem>
                      </TextField>
                    </>
                  )}
                </Box>
              </Grid2>
            ))}
          </Grid2>
 

                      marginTop: "10px",
 

                      marginTop: "10px",
 
alignItems:
 
00%
 

          <Grid2 sx={{ display: "flex", flexDirection: "row", gap: "20px" }}>
            {fields.map((field, index) => (
              <Box key={index} sx={{ marginBottom: "10px" }}>
                <TextField
                  select
                  name="fuel"
                  value={field.fuel}
                  onChange={(e) => handleChange(index, e)}
                  sx={{
                    width: "360.66px",
                    borderRadius: "5px",
                    border: "1px solid #D9D9D966",
                    height: "6vh",
                    "& .MuiSelect-icon": {
                      display: "none",
                    },
                    "& .MuiInputBase-input": {
                      paddingRight: "50px",
                      height: "10px",
                    },
                  }}
                  SelectProps={{
                    displayEmpty: true,
                  }}
                >
                  <MenuItem value="" disabled>
                    Select fuel type
                  </MenuItem>
                  <MenuItem value="Fuel">Fuel</MenuItem>
                  <MenuItem value="Fuel2">Fuel2</MenuItem>
                  <MenuItem value="Fuel3">Fuel3</MenuItem>
                </TextField>
                {field.fuel && ( // Show quantity and unit fields only if fuel is selected
                  <>
                    <TextField
                      name="quantity"
                      value={field.quantity}
                      placeholder="Quantity"
                      onChange={(e) => handleChange(index, e)}
                      sx={{
                        width: "360.66px",
                        borderRadius: "5px",
                        border: "1px solid #D9D9D966",
                        height: "6vh",
                      }}
                    />
                    <TextField
                      select
                      name="unit"
                      value={field.unit}
                      onChange={(e) => handleChange(index, e)}
                      sx={{
                        width: "360.66px",
                        borderRadius: "5px",
                        border: "1px solid #D9D9D966",
                        height: "6vh",
                      }}
                      SelectProps={{
                        displayEmpty: true,
                      }}
                    >
                      <MenuItem value="" disabled>
                        Select unit
                      </MenuItem>
                      <MenuItem value="Gallons">Gallons</MenuItem>
                      <MenuItem value="Liters">Liters</MenuItem>
                    </TextField>
                  </>
                )}
              </Box>
            ))}
          </Grid2>
 
 <Grid2
            sx={{ display: "flex", flexDirection: "row", gap: "300px" }}
          ></Grid2>
 

            {/* <Box sx={{ position: "relative", width: "360.66px" }}>
              <TextField
                select
                value={fuel}
                height="6vh"
                onChange={handleChange}
                sx={{
                  width: "100%",
                  borderRadius: "5px",
                  border: "1px solid #D9D9D966",
                  "& .MuiSelect-icon": {
                    display: "none",
                  },
                  "& .MuiInputBase-input": {
                    paddingRight: "50px",
                    height: "10px",
                  },
                }}
                SelectProps={{
                  displayEmpty: true,
                }}
              >
                <MenuItem value="" disabled>
                  Select fuel type
                </MenuItem>
                <MenuItem value="fuel">Fuel</MenuItem>
                <MenuItem value="fuel2">Fuel2</MenuItem>
                <MenuItem value="fuel3">Fuel3</MenuItem>
              </TextField>
              <img
                src={downArrow}
                alt="Dropdown arrow"
                style={{
                  position: "absolute",
                  right: "10px",
                  top: "50%",
                  transform: "translateY(-50%)",
                  width: "15px",
                  height: "9.25px",
                  pointerEvents: "none",
                  marginRight: "10px",
                }}
              />
            </Box>
            <TextField
              height="6vh"
              sx={{
                width: "400px",
                borderRadius: "5px",
                border: "1px solid #D9D9D966",
              }}
            ></TextField>
            <Box sx={{ position: "relative", width: "360.66px" }}>
              <TextField
                select
                value={fuel}
                height="6vh"
                onChange={handleChange}
                sx={{
                  width: "100%",
                  borderRadius: "5px",
                  border: "1px solid #D9D9D966",
                  "& .MuiSelect-icon": {
                    display: "none",
                  },
                  "& .MuiInputBase-input": {
                    paddingRight: "50px",
                    height: "10px",
                  },
                }}
                SelectProps={{
                  displayEmpty: true,
                }}
              >
                <MenuItem value="" disabled>
                  Select fuel type
                </MenuItem>
                <MenuItem value="Unit">Gallons</MenuItem>
                <MenuItem value="Unit">Liters</MenuItem>
              </TextField>
              <img
                src={downArrow}
                alt="Dropdown arrow"
                style={{
                  position: "absolute",
                  right: "10px",
                  top: "50%",
                  transform: "translateY(-50%)",
                  width: "15px",
                  height: "9.25px",
                  pointerEvents: "none",
                  marginRight: "10px",
                }}
              />
            </Box> */}
 

import { TextField, MenuItem, Box } from "@mui/material";
 

                onChange={handleChange}
 

                <MenuItem value="fuel2">Fuel2</MenuItem>
                <MenuItem value="fuel3">Fuel3</MenuItem>
 

                <MenuItem value="fuel">Fuel</MenuItem>
                <MenuItem value="fuel2">Fuel2</MenuItem>
                <MenuItem value="fuel3">Fuel3</MenuItem>
 

              ml="10px"
 

            <TextField
              height="6vh"
              sx={{
                width: "400px",
                borderRadius: "5px",
                border: "1px solid #D9D9D966",
              }}
            ></TextField>
 

            <Typography
              variant="body1"
              fontSize="14px"
              fontWeight="600"
              lineHeight="16.6px"
              color="#717171"
              mt="30px"
              ml="38px"
            >
            Unit 
            </Typography>
 

              Fuel Type
 

              Fuel Type
 

              onChange={handleChange}
 

              select
              value={fuel}
 

                "& .MuiSelect-icon": {
                  display: "none",
                },
 

                "& .MuiInputBase-input": {
                  paddingRight: "50px",
                  height: "10px",
                },
 

              SelectProps={{
                displayEmpty: true,
              }}
 
<TextField width="580px" height="56px"></TextField>
 
hello
 

            <Grid2>
            <TextField
                id="outlined-size-small"
                variant="outlined"
                size="small"
              />
            </Grid2>
 
 display:"flex", flexDirection:"row",
 

                fullWidth
                placeholder="Email"
                value={email}
                onChange={(e) => {
                  setEmail(e.target.value);
                  setErrors("");
                }}
                error={!!errors.email}
                helperText={errors.email}
 

              <Gr></Gr>
 

                placeholder="Email"
                value={email}
                onChange={(e) => {
                  setEmail(e.target.value);
                  setErrors("");
                }}
                error={!!errors.email}
                helperText={errors.email}
 

                  paddingRight: "50px",
 
height
 
1px solid 
 
// Ensure the TextField fills the Box
 

                // Hide the default dropdown arrow
 

                // Ensure text doesn't overlap with the image
 
// Ensure it doesn't interfere with clicks
 
 // Maintain aspect ratio
 
// Adjust based on your design needs
 
// Adjust based on your arrow size
 

                paddingRight: "40px", // Space for the arrow
 

          <Box sx={{ position: "relative", width: "450.66px" }}>
            <TextField
              select
              value={fuel}
              onChange={handleChange}
              sx={{
                width: "100%",
                borderRadius: "5px",
                border: "1px solid #D9D9D9",
                paddingRight: "40px", // Space for the arrow
                // Hide the default dropdown arrow
                "& .MuiSelect-icon": {
                  display: "none",
                },
                // Ensure text doesn't overlap with the image
                "& .MuiInputBase-input": {
                  paddingRight: "40px",
                },
                // Optional: Remove default focus border if needed
                "& .Mui-focused": {
                  borderColor: "transparent",
                },
              }}
              SelectProps={{
                displayEmpty: true,
              }}
            >
              <MenuItem value="" disabled>
                Select fuel type
              </MenuItem>
              <MenuItem value="fuel">Fuel</MenuItem>
              <MenuItem value="fuel2">Fuel2</MenuItem>
              <MenuItem value="fuel3">Fuel3</MenuItem>
            </TextField>
            <img
              src={downArrow}
              alt="Dropdown arrow"
              style={{
                position: "absolute",
                right: "10px", // Adjust based on your design needs
                top: "50%",
                transform: "translateY(-50%)",
                width: "20px", // Adjust based on your arrow size
                height: "auto", // Maintain aspect ratio
                pointerEvents: "none", // Ensure it doesn't interfere with clicks
              }}
            />
          </Box>
 
<Box sx={{ position: 'relative', width: '450.66px' }}>
      <TextField
        select
        value={fuel}
        onChange={handleChange}
        sx={{
          width: '460.66px',
          borderRadius: '5px',
          border: '1px solid #D9D9D9',
          paddingRight: '40px', // Space for the arrow
          // Hide the default dropdown arrow
          '& .MuiSelect-icon': {
            display: 'none',
          },
          // Ensure text doesn't overlap with the image
          '& .MuiInputBase-input': {
            paddingRight: '40px',
          },
        }}
        SelectProps={{
          displayEmpty: true,
        }}
      >
        <MenuItem value="" disabled>
          Select fuel type
        </MenuItem>
        <MenuItem value="fuel">Fuel</MenuItem>
        <MenuItem value="fuel2">Fuel2</MenuItem>
        <MenuItem value="fuel3">Fuel3</MenuItem>
      </TextField>
      <img 
        src={downArrow} 
        alt="Dropdown arrow" 
        style={{
          position: 'absolute',
          right: '10px', // Adjust based on your design needs
          top: '50%',
          transform: 'translateY(-50%)',
          width: '20px', // Adjust based on your arrow size
          height: 'auto', // Maintain aspect ratio
          pointerEvents: 'none', // Ensure it doesn't interfere with clicks
        }}
      />
    </Box>
 
 width: '450.66px'
 

          width: '100%',
 

          <Box sx={{ position: "relative", width: "450.66px" }}>
            <TextField
              select
              value={fuel}
              onChange={handleChange}
              sx={{
                width: "100%",
                borderRadius: "5px",
                border: "1px solid #D9D9D9",
                paddingRight: "40px", // Space for the arrow
                // Adjusting the input padding so text doesn't overlap with the arrow
                "& .MuiInputBase-input": {
                  paddingRight: "40px",
                },
              }}
              SelectProps={{
                displayEmpty: true,
              }}
            >
              <MenuItem value="" disabled>
                Select fuel type
              </MenuItem>
              <MenuItem value="fuel">Fuel</MenuItem>
              <MenuItem value="fuel2">Fuel2</MenuItem>
              <MenuItem value="fuel3">Fuel3</MenuItem>
            </TextField>
            <img
              src={downArrow}
              alt="Dropdown arrow"
              style={{
                position: "absolute",
                right: "10px", // Adjust based on your design
                top: "50%",
                transform: "translateY(-50%)",
                width: "20px", // Adjust based on your arrow size
                height: "auto", // Maintain aspect ratio
                pointerEvents: "none", // Ensure it doesn't block interactions
              }}
            />
          </Box>
 

              SelectProps={{
                displayEmpty: true,
              }}
 

          <Box width="250px">
      <TextField
        select
        value={fuel}
        onChange={handleChange}
        sx={{
          width: "450.66px",
          borderRadius: "5px",
          border: "1px solid #D9D9D9 40%",
          // Hide the default dropdown arrow
          '& .MuiSelect-icon': {
            display: 'none',
          },
          // Style for the custom arrow
          '& .custom-arrow': {
            position: 'absolute',
            right: '10px', // Adjust as needed
            top: '50%',
            transform: 'translateY(-50%)',
            pointerEvents: 'none', // To ensure clicks pass through to the dropdown
          },
          // Ensure the container for the custom arrow is properly positioned
          position: 'relative',
        }}
        SelectProps={{
          displayEmpty: true,
        }}
      >
        <MenuItem value="" disabled>
          Select fuel type
        </MenuItem>
        <MenuItem value="fuel">Fuel</MenuItem>
        <MenuItem value="fuel2">Fuel2</MenuItem>
        <MenuItem value="fuel3">Fuel3</MenuItem>
      </TextField>
      <img src={downArrow} className="custom-arrow" alt="Dropdown arrow" />
    </Box>
 
 <Box width="250px">
            <TextField
              select
              value={fuel}
              onChange={handleChange}
              sx={{
                width: "450.66px",
                borderRadius: "5px",
                border: "1px solid #D9D9D9 40%",
              }}
              SelectProps={{
                displayEmpty: true,
              }}
            >
              <Grid2>
              <MenuItem value="" disabled>
                Select fuel type
              </MenuItem>
              <img src={downArrow}></img>
              </Grid2>
              <MenuItem value="fuel">Fuel</MenuItem>
              <MenuItem value="fuel2">Fuel2</MenuItem>
              <MenuItem value="fuel3">Fuel3</MenuItem>
            </TextField>
          </Box>
 

                height:"36px",
 

  const handleChange = (event) => {
    setFuelType(event.target.value);
  };
 

              SelectProps={{
                displayEmpty: true,
              }}
              helperText={fuel === "" ? "Select fuel type" : ""}
 

              {/* Placeholder option */}
              <MenuItem value="" disabled>
                Select fuel type
              </MenuItem>
 

              label="Select Fuel"
 

              <MenuItem value="" disabled>
                Select fuel type
              </MenuItem>
 

            <TextField
              select
              value={fuel}
              onChange={handleChange}
              sx={{
                width: "100%",
              }}
              SelectProps={{
                displayEmpty: true,
              }}
            >
              <MenuItem value="" disabled>
                Select fuel type
              </MenuItem>
              <MenuItem value="fuel">Fuel</MenuItem>
              <MenuItem value="fuel2">Fuel2</MenuItem>
              <MenuItem value="fuel3">Fuel3</MenuItem>
            </TextField>
 

        label="Select Fuel"
 
 <TextField
              labelId="Select Fuel"
              select
              placeholder="Select fuel type"
              value={fuel}
              onChange={handleChange}
              sx={{
                width:"450.67px"
              }}
            >
              <MenuItem value="fuel">Fuel</MenuItem>
              <MenuItem value="fuel2">Fuel2</MenuItem>
              <MenuItem value="fuel3">Fuel3</MenuItem>
            </TextField>
 

            mb="10px"
 

            <TextField
              labelId="Select Fuel"
              select
              placeholder="Select fuel type"
              value={fuel}
              onChange={handleChange}
              sx={{
                width:"450.67px"
              }}
            >
              <MenuItem value="fuel">Fuel</MenuItem>
              <MenuItem value="fuel2">Fuel2</MenuItem>
              <MenuItem value="fuel3">Fuel3</MenuItem>
            </TextField>
 

              fullWidth
 

          <Box width="250px">
            <TextField
              lable="select"
              select
              value={fuel}
              onChange={handleChange}
            >
              <MenuItem value="fuel">Fuel</MenuItem>
              <MenuItem value="fue2">fuel2</MenuItem>
              <MenuItem value="fue3">fuel3</MenuItem>
            </TextField>
          </Box>
 

          <Box width="250px">
            <TextField
              lable="select"
              select
              value={fuel}
              onChange={handleChange}
            >
              <MenuItem value="fuel">Fuel</MenuItem>
              <MenuItem value="fue2">fuel2</MenuItem>
              <MenuItem value="fue3">fuel3</MenuItem>
            </TextField>
          </Box>
 

          <Box width="250px">
            <TextField
              lable="select"
              select
              value={fuel}
              onChange={handleChange}
            >
              <MenuItem value="fuel">Fuel</MenuItem>
              <MenuItem value="fue2">fuel2</MenuItem>
              <MenuItem value="fue3">fuel3</MenuItem>
            </TextField>
          </Box>
 

  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setFuel(event.target.value);
  };
 

          <Select
            labelId="fuel-type-select-label"
            id="fuel-type-select"
            label="Select Fuel Type"
            sx={{ width: "200px" }} // Adjust width as needed
          >
            <MenuItem value="Gasoline">Gasoline</MenuItem>
            <MenuItem value="Petrol">Petrol</MenuItem>
            <MenuItem value="HFO">HFO</MenuItem>
            <MenuItem value="LPG">LPG</MenuItem>
            <MenuItem value="CNG">CNG</MenuItem>
          </Select>
 

          gap: "24px",
 

            placeholder="select fuel"
 
<InputLabel id="fuel-type-select-label">Select Fuel Type</InputLabel>
 

            value={fuelType}
 

            onChange={handleChange}
 
 MenuItem, Select,
 

import MenuItem from "@mui/material";
 

import Select from "@mui/material/Select";
 

import MenuItem from "@mui/material/Men";
 
// Flex container for inline alignment
 

            {/* Adjust margin as needed */}
 
 <Grid2 sx={{ display: "flex", flexDirection: "row", gap: "12px" }}>
          <Typography
            variant="h1"
            fontSize="20px"
            fontWeight="600"
            lineHeight="28px"
            color="#000000"
            alignItems="center"
          >
          <img src={fuel_Logo} alt="fuel_logo" width="13.36px" height="19.49px"/>
            Fuel Consumption
          </Typography>
        </Grid2>
 

            margin="15px"
 

          alignItems: "center",
 

        <FuelConsumption>
 

        }}
 

        sx={{
 
 height: "270px",
          width: "1680px",
          borderRadius: "16px",
          padding: "40px",
          gap:"8px",
 
 Avatar, 
 

                Your carbon footprint includes emissions from buildings and
                vehicles.
 

                Your carbon footprint includes emissions from buildings and
                vehicles.
 

            <Grid2
              sx={{
                width: "31%",
                textAlign: "center",
                display: "flex",
                flexDirection: "column",
                mt: "6px",
                gap: "5px",
                backgroundColor: "#F9FFFC", // Background color on hover
                cursor: "pointer",
                "&:hover": {
                  borderBottom: "3px solid #369D9C", // Bottom border color on hover
                },
              }}
            >
              <Typography
                variant="h1"
                fontSize="16px"
                fontWeight="700"
                lineHeight="18px"
                color="#369D9C"
              >
                Scope 3
              </Typography>
              <Typography
                variant="body1"
                fontSize="11px"
                fontWeight="400"
                lineHeight="21px"
              >
                Your carbon footprint includes emissions from buildings and
                vehicles.
              </Typography>
            </Grid2>
 

                gap: "5px",
 

                margin="10px"
 
 // Bottom border color on hover
 
// Background color on hover
 

            <Grid2
              sx={{
                width: "31%",
                textAlign: "center",
                display: "flex",
                flexDirection: "column",
                gap: "5px",
                backgroundColor: "#F9FFFC", // Background color on hover
                cursor: "pointer",
                transition: "all 0.8s ease", // Smooth transition for hover effects
                "&:hover": {
                  borderBottom: "2px solid #369D9C", // Bottom border color on hover
                },
              }}
            >
              <Typography
                variant="h1"
                fontSize="16px"
                fontWeight="700"
                lineHeight="18px"
                color="#369D9C"
              >
                Scope 3
              </Typography>
              <Typography
                variant="body1"
                fontSize="11px"
                fontWeight="400"
                lineHeight="21px"
              >
                Your carbon footprint includes emissions from buildings and
                vehicles.
              </Typography>
            </Grid2>
 

            <Grid2
              sx={{
                width: "31%",
                textAlign: "center",
                display: "flex",
                flexDirection: "column",
                gap: "5px",
                backgroundColor: "#F9FFFC", // Background color on hover
                cursor: "pointer",
                transition: "all 0.8s ease", // Smooth transition for hover effects
                "&:hover": {
                  borderBottom: "2px solid #369D9C", // Bottom border color on hover
                },
              }}
            >
              <Typography
                variant="h1"
                fontSize="16px"
                fontWeight="700"
                lineHeight="18px"
                color="#369D9C"
              >
                Scope 2
              </Typography>
              <Typography
                variant="body1"
                fontSize="11px"
                fontWeight="400"
                lineHeight="21px"
              >
                Your carbon footprint includes emissions from buildings and
                vehicles.
              </Typography>
            </Grid2>
 
 transition: "all 0.8s ease", // Smooth transition for hover effects
 

                height:"10px",
 

            <Grid2
              sx={{
                width: "32%",
                textAlign: "center",
                background: "#F9FFC",
                display: "flex",
                flexDirection: "column",
                gap: "5px",
              }}
            >
              <Typography
                variant="body1"
                fontSize="16px"
                fontWeight="700"
                lineHeight="18px"
                color="#369D9C"
              >
                <img src={lock_Logo} width="18.82px" height="14px" />
                Scope 2
              </Typography>
              <Typography
                variant="body1"
                fontSize="11px"
                fontWeight="400"
                lineHeight="21px"
              >
                Indirect emissions from purchased utilities impact carbon
                footprint.
              </Typography>
            </Grid2>
            <Grid2
              sx={{
                width: "32%",
                textAlign: "center",
                background: "#F9FFC",
                display: "flex",
                flexDirection: "column",
                gap: "5px",
              }}
            >
              <Typography
                variant="h1"
                fontSize="16px"
                fontWeight="700"
                lineHeight="18px"
                color="#369D9C"
              >
                <img src={lock_Logo} width="18.82px" height="14px" />
                Scope 3
              </Typography>
              <Typography
                variant="p"
                fontSize="11px"
                fontWeight="400"
                lineHeight="21px"
              >
                Carbon footprint includes value chain supplier and customer
                emissions.
              </Typography>
            </Grid2>
 
transition: "all 0.8s ease", // Smooth transition for hover effects
 

                border: "1px solid black",
 

                  color: "#FFFFFF", // Optional: Change text color on hover
 

                backgroundColor: "#F9FFFC",
 
sx={{
                width: "32%",
                textAlign: "center",
                display: "flex",
                flexDirection: "column",
                gap: "5px",
                border: "1px solid black",
                backgroundColor: "#F9FFFC", 
                cursor:"pointer"
              }}
 
// Added background color
 
 <Grid2
              sx={{
                width: "32%",
                textAlign: "center",
                display: "flex",
                flexDirection: "column",
                gap: "5px",
                border: "1px solid black",
              }}
            >
              <Typography
                variant="h1"
                fontSize="16px"
                fontWeight="700"
                lineHeight="18px"
                color="#369D9C"
              >
                Scope 1
              </Typography>
              <Typography
                variant="body1"
                fontSize="11px"
                fontWeight="400"
                lineHeight="21px"
              >
                Your carbon footprint includes emissions from buildings and
                vehicles.
              </Typography>
            </Grid2>
 

              cursor:"pointer",
 
import { Avatar, Button, Grid2, Typography } from "@mui/material";
import React from "react";
import lock_Logo from "../../assets/images/Lock.svg";

function ReportStateEmpty() {
  return (
    <div style={{ backgroundColor: "#E3E3E3", minHeight: "100vh" }}>
      <Grid2>
        <Grid2
          sx={{
            padding: "25px 70px 0px 70px",
            width: "100%",
            height: "120px",
            bgcolor: "#ffffff",
            display: "flex",
            flexDirection: "column",
          }}
        >
          <Grid2
            sx={{
              width: "100%",
              height: "48px",
              display: "flex",
              flexDirection: "row",
              gap: "8px",
            }}
          >
            <Typography
              variant="h1"
              style={{
                fontSize: "22px",
                fontWeight: "600",
                lineHeight: "33.89px",
              }}
            >
              Q3 2024 Report
            </Typography>
            <Typography
              variant="p"
              style={{
                fontSize: "22px",
                fontWeight: "400",
                lineHeight: "33.89px",
              }}
            >
              I Delhi
            </Typography>
            <div style={{ marginLeft: "auto" }}>
              <Button
                sx={{
                  borderRadius: "32px",
                  border: "1px solid #28814D",
                  padding: "16px 32px 16px 32px",
                  height: "48px",
                  fontWeight: "500",
                  fontSize: "14px",
                  textTransform: "capitalize",
                  color: "#28814D",
                }}
              >
                Add member
              </Button>
            </div>
          </Grid2>
          <Grid2 sx={{ display: "flex", flexDirection: "row" }}>
            <Grid2
              sx={{
                width: "32%",
                textAlign: "center",
                display: "flex",
                flexDirection: "column",
                gap: "5px",
                border: "1px solid black",
                transition: "background-color 0.3s ease", // Smooth transition effect
                "&:hover": {
                  backgroundColor: "#F9FFC", // Background color on hover
                },
              }}
            >
              <Typography
                variant="h1"
                fontSize="16px"
                fontWeight="700"
                lineHeight="18px"
                color="#369D9C"
              >
                Scope 1
              </Typography>
              <Typography
                variant="body1"
                fontSize="11px"
                fontWeight="400"
                lineHeight="21px"
              >
                Your carbon footprint includes emissions from buildings and
                vehicles.
              </Typography>
            </Grid2>
            <Grid2
              sx={{
                width: "32%",
                textAlign: "center",
                background: "#F9FFC",
                display: "flex",
                flexDirection: "column",
                gap: "5px",
              }}
            >
              <Typography
                variant="body1"
                fontSize="16px"
                fontWeight="700"
                lineHeight="18px"
                color="#369D9C"
              >
                <img src={lock_Logo} width="18.82px" height="14px" />
                Scope 2
              </Typography>
              <Typography
                variant="body1"
                fontSize="11px"
                fontWeight="400"
                lineHeight="21px"
              >
                Indirect emissions from purchased utilities impact carbon
                footprint.
              </Typography>
            </Grid2>
            <Grid2
              sx={{
                width: "32%",
                textAlign: "center",
                background: "#F9FFC",
                display: "flex",
                flexDirection: "column",
                gap: "5px",
              }}
            >
              <Typography
                variant="h1"
                fontSize="16px"
                fontWeight="700"
                lineHeight="18px"
                color="#369D9C"
              >
                <img src={lock_Logo} width="18.82px" height="14px" />
                Scope 3
              </Typography>
              <Typography
                variant="p"
                fontSize="11px"
                fontWeight="400"
                lineHeight="21px"
              >
                Carbon footprint includes value chain supplier and customer
                emissions.
              </Typography>
            </Grid2>
          </Grid2>
        </Grid2>
      </Grid2>
    </div>
  );
}

export default ReportStateEmpty;

 

                backgroundColor: "#F9FFC",
 
<Grid2 sx={{ display: "flex", flexDirection: "row" }}>
            <Grid2
              sx={{
                width: "32%",
                textAlign: "center",
                display: "flex",
                flexDirection: "column",
                gap: "5px",
                border:"1px solid black",
                backgroundColor: "#F9FFC",
              }}
            >
              <Typography
                variant="h1"
                fontSize="16px"
                fontWeight="700"
                lineHeight="18px"
                color="#369D9C"
              >
                Scope 1
              </Typography>
              <Typography
                variant="p"
                fontSize="11px"
                fontWeight="400"
                lineHeight="21px"
              >
                Your carbon footprint includes emissions from buildings and
                vehicles.
              </Typography>
            </Grid2>
            <Grid2
              sx={{
                width: "32%",
                textAlign: "center",
                background: "#F9FFC",
                display: "flex",
                flexDirection: "column",
                gap: "5px",
              }}
            >
              <Typography
                variant="h1"
                fontSize="16px"
                fontWeight="700"
                lineHeight="18px"
                color="#369D9C"
              >
                <img src={lock_Logo} width="18.82px" height="14px" />
                Scope 2
              </Typography>
              <Typography
                variant="p"
                fontSize="11px"
                fontWeight="400"
                lineHeight="21px"
              >
                Indirect emissions from purchased utilities impact carbon
                footprint.
              </Typography>
            </Grid2>
            <Grid2
              sx={{
                width: "32%",
                textAlign: "center",
                background: "#F9FFC",
                display: "flex",
                flexDirection: "column",
                gap: "5px",
              }}
            >
              <Typography
                variant="h1"
                fontSize="16px"
                fontWeight="700"
                lineHeight="18px"
                color="#369D9C"
              >
                <img src={lock_Logo} width="18.82px" height="14px" />
                Scope 3
              </Typography>
              <Typography
                variant="p"
                fontSize="11px"
                fontWeight="400"
                lineHeight="21px"
              >
                Carbon footprint includes value chain supplier and customer
                emissions.
              </Typography>
            </Grid2>
          </Grid2>
 

                backgroundColor:"#F9FFC"
 

                background: "#F9FFC",
 

              </Grid2>
 

              <Grid2
                sx={{
                  display: "flex",
                  flexDirection: "row",
                  gap: "5px",
                  alignItems: "center",
                  justifyContent: "center",
                }}
              >
 

              </Grid2>
 

              <Grid2
                sx={{
                  display: "flex",
                  flexDirection: "row",
                  gap: "10px",
                  alignItems: "center",
                  justifyContent: "center",
                }}
              >
 

                Carbon footprint includes value chain supplier and customer
                emissions.
 
<Typography
                variant="h1"
                fontSize="16px"
                fontWeight="700"
                lineHeight="18px"
                color="#369D9C"
              >
                Scope 3
              </Typography>
 
// Centers items vertically
 

                m
 

              <Grid2 sx={{display:"flex",flexDirection:"row",gap:""}}>
              
              </Grid2>
 

              <Avatar></Avatar>
 

                Your carbon footprint includes emissions from buildings and
                vehicles.
 

                Your carbon footprint includes emissions from buildings and
                vehicles.
 

            <Grid2 sx={{ width: "32%", textAlign: "center" }}>
              <Typography>Scope 1</Typography>
            </Grid2>
            <Grid2 sx={{ width: "32%", textAlign: "center" }}>
              <Typography>Scope 1</Typography>
            </Grid2>
 
bgcolor:"#F9FFC", border:"1px solid "
 
border:"1px solid 0px 0px 4px 0px
 

                  fontW: "500",
 
0%, #28814D 100%);
 
 

border-image-source: linear-gradient(101.74deg,
 
border: 1px solid
 

            <Button>Add member</Button>
 

          border:"1px solid black"
 

          borderBottom: "1px so", // Only bottom border
 

          borderBottom: "1px solid #E3E3E3",
 
border: 1px solid 
 
padding: '20px'
 

          color:""
 

          justifyContent:"space-between"
 
// Adjust this value as needed
 
 // Checked color
 
// Unchecked color
 
// import React from "react";
// import TextField from "@mui/material/TextField";
// import Radio from "@mui/material/Radio";
// import Wrapper from "../Wrapper/Wrapper";
// import logo from "../../assets/images/ge3s_logo.png";
// import "./AccountCreationIntro.css";
// import { useState } from "react";
// import { Link, useNavigate } from "react-router-dom";

// export default function AccountCreationIntro() {
//   const navigate = useNavigate();
//   const [email, setEmail] = useState("");
//   const [password, setPassword] = useState("");
//   const [confirmPassword, setConfirmPassword] = useState("");
//   const [isTermsAccepted, setIsTermsAccepted] = useState(false);
//   const [showPassword, setShowPassword] = useState(false);
//   const [showConfirmPassword, setShowConfirmPassword] = useState(false);

//   const isFormValid = () => {
//     return (
//       email.trim() !== "" &&
//       password.trim() !== "" &&
//       confirmPassword.trim() !== "" &&
//       password === confirmPassword &&
//       isTermsAccepted
//     );
//   };
//   const handleSubmit = (e) => {
//     e.preventDefault();
//     if (isFormValid()) {
//       alert("Form is valid and ready for submission!");
//     } else {
//       alert("Please fill in all fields correctly and agree to the terms.");
//     }
//   };
//   return (
//     <Wrapper>
//       <div className="registration-container">
//         <form className="registration-form" onSubmit={handleSubmit}>
//           <div className="registration-card">
//             <div className="registration-header">
//               <img src={logo} alt="logo" className="header-logo" />
//               <h2>Start Creating Your Account</h2>
//             </div>
//             <div className="form-field">
//               <p>Verified Email Address</p>
//               <TextField
//                 id="email-field"
//                 variant="outlined"
//                 size="small"
//                 fullWidth
//                 required
//                 name="email"
//                 placeholder="Email"
//                 type="email"
//                 value={email}
//                 onChange={(e) => setEmail(e.target.value)}
//               />
//             </div>
//             <div className="form-field">
//               <TextField
//                 id="outlined-size-small"
//                 variant="outlined"
//                 size="small"
//                 fullWidth
//                 placeholder="Password"
//                 type={showPassword ? "text" : "password"}
//                 value={password}
//                 onChange={(e) => setPassword(e.target.value)}
//                 slotProps={{
//                   input: {
//                     style: { paddingLeft: "10px" },
//                   },
//                 }}
//               />
//               <span
//                 className="toggle-password-2"
//                 onClick={() => setShowPassword(!showPassword)}
//               >
//                 <svg
//                   xmlns="http://www.w3.org/2000/svg"
//                   width="25"
//                   height="24"
//                   viewBox="0 0 25 24"
//                   fill="none"
//                 >
//                   <g clip-path="url(#clip0_1214_40689)">
//                     <path
//                       d="M12.5 6.89258C18.5 6.89258 23.375 11.9238 23.375 11.9238C23.375 11.9238 18.5 16.9551 12.5 16.9551C6.5 16.9551 1.625 11.9238 1.625 11.9238C1.625 11.9238 6.5 6.89258 12.5 6.89258Z"
//                       stroke="#969696"
//                       stroke-miterlimit="10"
//                     />
//                     <path
//                       d="M12.5 16.9551C15.3995 16.9551 17.75 14.7025 17.75 11.9238C17.75 9.14515 15.3995 6.89258 12.5 6.89258C9.60051 6.89258 7.25 9.14515 7.25 11.9238C7.25 14.7025 9.60051 16.9551 12.5 16.9551Z"
//                       stroke="#969696"
//                       stroke-miterlimit="10"
//                     />
//                     <path
//                       d="M12.5 12.6426C12.9142 12.6426 13.25 12.3208 13.25 11.9238C13.25 11.5269 12.9142 11.2051 12.5 11.2051C12.0858 11.2051 11.75 11.5269 11.75 11.9238C11.75 12.3208 12.0858 12.6426 12.5 12.6426Z"
//                       stroke="#969696"
//                       stroke-width="2"
//                       stroke-miterlimit="10"
//                     />
//                   </g>
//                   <defs>
//                     <clipPath id="clip0_1214_40689">
//                       <rect
//                         width="24"
//                         height="23"
//                         fill="white"
//                         transform="translate(0.5 0.423828)"
//                       />
//                     </clipPath>
//                   </defs>
//                 </svg>
//               </span>
//             </div>

//             <div className="form-field">
//               <TextField
//                 id="confirm-password-field"
//                 variant="outlined"
//                 size="small"
//                 fullWidth
//                 placeholder="Confirm-Password"
//                 type={showConfirmPassword ? "text" : "password"}
//                 value={confirmPassword}
//                 onChange={(e) => setConfirmPassword(e.target.value)}
//                 slotProps={{
//                   input: {
//                     style: { paddingLeft: "10px" },
//                   },
//                 }}
//               />
//               <span
//                 className="toggle-password-2"
//                 onClick={() => setShowConfirmPassword(!showConfirmPassword)}
//               >
//                 <svg
//                   xmlns="http://www.w3.org/2000/svg"
//                   width="25"
//                   height="24"
//                   viewBox="0 0 25 24"
//                   fill="none"
//                 >
//                   <g clip-path="url(#clip0_1214_40689)">
//                     <path
//                       d="M12.5 6.89258C18.5 6.89258 23.375 11.9238 23.375 11.9238C23.375 11.9238 18.5 16.9551 12.5 16.9551C6.5 16.9551 1.625 11.9238 1.625 11.9238C1.625 11.9238 6.5 6.89258 12.5 6.89258Z"
//                       stroke="#969696"
//                       stroke-miterlimit="10"
//                     />
//                     <path
//                       d="M12.5 16.9551C15.3995 16.9551 17.75 14.7025 17.75 11.9238C17.75 9.14515 15.3995 6.89258 12.5 6.89258C9.60051 6.89258 7.25 9.14515 7.25 11.9238C7.25 14.7025 9.60051 16.9551 12.5 16.9551Z"
//                       stroke="#969696"
//                       stroke-miterlimit="10"
//                     />
//                     <path
//                       d="M12.5 12.6426C12.9142 12.6426 13.25 12.3208 13.25 11.9238C13.25 11.5269 12.9142 11.2051 12.5 11.2051C12.0858 11.2051 11.75 11.5269 11.75 11.9238C11.75 12.3208 12.0858 12.6426 12.5 12.6426Z"
//                       stroke="#969696"
//                       stroke-width="2"
//                       stroke-miterlimit="10"
//                     />
//                   </g>
//                   <defs>
//                     <clipPath id="clip0_1214_40689">
//                       <rect
//                         width="24"
//                         height="23"
//                         fill="white"
//                         transform="translate(0.5 0.423828)"
//                       />
//                     </clipPath>
//                   </defs>
//                 </svg>
//               </span>

//               <div className="terms-checkbox">
//                 <Radio
//                   value="agree"
//                   required
//                   name="terms-radio"
//                   inputProps={{ "aria-label": "Agree" }}
//                   checked={isTermsAccepted}
//                   onChange={(e) => setIsTermsAccepted(e.target.checked)}
//                 />
//                 <span>I agree to the </span>
//                 <span className="terms-highlight">Terms and Conditions</span>
//               </div>
//             </div>

//             <Link to="/create-account-successfully">
//               <button
//                 type="submit"
//                 disabled={!isFormValid()}
//                 className={
//                   isFormValid() ? "acc-button-active" : "acc-button-disabled"
//                 }
//               >
//                 Submit
//               </button>
//             </Link>
//           </div>
//         </form>
//       </div>
//     </Wrapper>
//   );
// }

 

import logo from "../../images/ge3s_logo.png";
 

import Wrapper from "../../Wrapper/Wrapper";
 
CreateAcc
 
// Disable button if the form is not valid
 
// The button will trigger form submission
 
// Fixed value here
 
 // Fixed toggle logic here
 

            {/* This is the form section */}
 

            {/* This is the header section */}
 

        {/* This is the card component */}
 
 // Proceed with form submission or further processing
      // For example, you might use navigate() here if you're using React Router
 
// Check if the email field is not empty
 
// import React from "react";
// import TextField from "@mui/material/TextField";
// import "./AccountCreationHeader.css";
// import Wrapper from "../Wrapper/Wrapper";
// import { useNavigate } from "react-router-dom";
// import logo from "../../assets/images/ge3s_logo.png";
// import { PiUploadLight } from "react-icons/pi";

// export default function AccountCreationHeader() {
//   const navigate = useNavigate();

//   return (
//     <Wrapper>
//       <div className="main-container">
//         <div className="logo-container">
//           <img src={logo} alt="Logo" className="logo" />
//           <h1 className="header">Start creating your account</h1>
//         </div>

//         <div className="middle-container">
//           <div className="profile-section">
//             <img
//               src="\src\assets\images\profile-logo.png"
//               alt="Profile Icon"
//               className="profile-icon"
//             />
//             <button class="upload-button">
//               <PiUploadLight class="icon" />
//               <span class="text">Upload Photo</span>
//             </button>
//           </div>

//           <div className="input">
//             <TextField
//               id="outlined-size-small"
//               label=""
//               variant="outlined"
//               size="small"
//               fullWidth
//               placeholder="FullName"
//             />
//           </div>
//         </div>

//         <button
//           onClick={() => {
//             navigate("");
//           }}
//           className="create-account-btn"
//         >
//           Create Account
//         </button>
//       </div>
//     </Wrapper>
//   );
// }

// import React from "react";
// import "./AccountCreationHeader.css";
// import profile from "../../assets/images/profile.svg";
// import TextField from "@mui/material/TextField";
// import logo from "../../assets/images/ge3s_logo.png";
// import upload from "../../assets/images/Upload.svg";
// import { useState } from "react";
// import { useNavigate } from "react-router-dom";
// import Wrapper from "../Wrapper/Wrapper";

// function AccountCreationHeader() {
//   const handleButtonClick = () => {
//     const fileInput = document.createElement("input");
//     fileInput.type = "file";
//     fileInput.onchange = (event) => {
//       const file = event.target.files[0];
//       if (file) {
//         alert("File selected: " + file.name);
//       }
//     };
//     fileInput.click();
//   };
//   const [email, setEmail] = useState("");
//   const navigate = useNavigate();

//   // Check if the email field is not empty
//   const isFormValid = email.trim() !== "";
//   return (
//     <Wrapper>
//       <div className="form-container">
//         <div className="form-card">
//           {/* Header Section */}
//           <div className="header-section">
//             <img src={logo} alt="logo" className="header-logo" />
//             <h2 className="header-title">Start creating your account</h2>
//           </div>
//           {/* Profile Section */}
//           <div className="profile-section">
//             <img src={profile} alt="profile" className="profile-image" />
//             <button className="upload-button" onClick={handleButtonClick}>
//               <img src={upload} className="upload-icon" />
//               <span className="upload-text">Upload Photo</span>
//             </button>
//             <div className="input_login">
//               <TextField
//                 id="outlined-size-small"
//                 variant="outlined"
//                 size="small"
//                 fullWidth
//                 required
//                 name="email"
//                 placeholder="Email"
//                 value={email}
//                 onChange={(e) => setEmail(e.target.value)}
//                 slotProps={{
//                   input: {
//                     style: { paddingLeft: "10px" },
//                   },
//                 }}
//               />
//             </div>
//             <button
//               onClick={() => navigate("/account-Intro")}
//               disabled={!isFormValid}
//               className={
//                 isFormValid ? "acc-button-active" : "acc-button-disabled"
//               }
//             >
//               Create Account
//             </button>
//           </div>
//         </div>
//       </div>
//     </Wrapper>
//   );
// }

// export default AccountCreationHeader;
 

    height: "420px",
    width: "430px",
 

import upload from "../../images/Upload.svg";
 

import profile from "./../../images/profile.svg";
 

import logo from "../../assets/images/ge3s_logo";
 
CreateHeader
 
../../Wrapper/Wrapper
 
// import "./CreateAccountSuccessfully.css";
// import Wrapper from "../../components/Wrapper/Wrapper";
// import { Link } from "react-router-dom";

// export default function CreateAccountSuccessfully() {
//   return (
//     <Wrapper>
//       <div className="confirm">
//         <div className="crossbtn">
//           <Link to="/generate-reports">
//             <svg width="25" height="25" viewBox="0 0 32 32" fill="none">
//               <g id="X">
//                 <path
//                   id="Vector"
//                   d="M25.7081 24.2925C25.801 24.3854 25.8747 24.4957 25.9249 24.6171C25.9752 24.7385 26.0011 24.8686 26.0011 25C26.0011 25.1314 25.9752 25.2615 25.9249 25.3829C25.8747 25.5043 25.801 25.6146 25.7081 25.7075C25.6151 25.8004 25.5048 25.8741 25.3835 25.9244C25.2621 25.9747 25.132 26.0006 25.0006 26.0006C24.8692 26.0006 24.7391 25.9747 24.6177 25.9244C24.4963 25.8741 24.386 25.8004 24.2931 25.7075L16.0006 17.4138L7.70806 25.7075C7.52042 25.8951 7.26592 26.0006 7.00056 26.0006C6.73519 26.0006 6.4807 25.8951 6.29306 25.7075C6.10542 25.5199 6 25.2654 6 25C6 24.7346 6.10542 24.4801 6.29306 24.2925L14.5868 16L6.29306 7.70751C6.10542 7.51987 6 7.26537 6 7.00001C6 6.73464 6.10542 6.48015 6.29306 6.29251C6.4807 6.10487 6.73519 5.99945 7.00056 5.99945C7.26592 5.99945 7.52042 6.10487 7.70806 6.29251L16.0006 14.5863L24.2931 6.29251C24.4807 6.10487 24.7352 5.99945 25.0006 5.99945C25.2659 5.99945 25.5204 6.10487 25.7081 6.29251C25.8957 6.48015 26.0011 6.73464 26.0011 7.00001C26.0011 7.26537 25.8957 7.51987 25.7081 7.70751L17.4143 16L25.7081 24.2925Z"
//                   fill="black"
//                 />
//               </g>
//             </svg>
//           </Link>
//         </div>
//         <div className="confirmtick">
//           <svg width="75" height="90" viewBox="0 0 113 113" fill="none">
//             <circle
//               cx="56.5"
//               cy="56.5"
//               r="56"
//               fill="url(#paint0_linear_939_5057)"
//             />
//             <path
//               d="M34.0957 56.3002L49.0854 71.29L78.9071 41.4683"
//               stroke="white"
//               strokeWidth="8.83606"
//             />
//             <defs>
//               <linearGradient
//                 id="paint0_linear_939_5057"
//                 x1="0.5"
//                 y1="0.5"
//                 x2="130.171"
//                 y2="27.4392"
//                 gradientUnits="userSpaceOnUse"
//               >
//                 <stop stopColor="#51ADAC" />
//                 <stop offset="1" stopColor="#4FA874" />
//               </linearGradient>
//             </defs>
//           </svg>
//         </div>
//         <div className="confirm-footer">
//           <p>Your account has been created sucessfully </p>
//           <Link to="/generate-reports">
//             <button>Continue</button>
//           </Link>
//         </div>
//       </div>
//     </Wrapper>
//   );
// }

 
 color: " #000000",
                  fontSize: "18px",
                  fontWeight: "550",
                  lineHeight: "36px",
                  textAlign: "center",
                  whiteSpace: "nowrap",
                  overflow: "hidden",
                  textOverflow: "ellipsis",
 

                  letterSpacing: "-0.02em",
 

                  fontfamily: Inter
 

font-size: 24px;
font-weight: 500;
line-height: 36px;
 

text-align: center;
 
#00000background:
 

import CreateAccountSucessfully from "./components/AccCreateSuccesfully/CreateAccountSuccessfully";
 
SuceesfullyMui
 

import Wrapper from "../../Wrapper/Wrapper";
 
 /* Optional: Add ellipsis if text overflows */
 
 /* Hide any overflow text */
 
